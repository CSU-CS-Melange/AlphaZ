/*affine osp {N |2<= N}
given
    int P {i | 0<=i<=2N};
returns
    int FTable {i,j | 1<=i<=j<=2N};
using
through
    FTable[i,j] = case
                {|i==j}: 0;
        {|i<j} : reduce(min, [k], FTable[i,k] + FTable[k+1,j] + P[i-1]*P[k]*P[j]);
        esac;
.
*/
affine osp {N|N>=2}
input
int P {i|i>=0 && 2N>=i};
output
int FTable {i,j|j>=i && 2N>=j && i>=1};
local
int NR_FTable {i,j|j>=i+1 && 2N>=j && i>=1};
let
FTable[i,j] = case
{|j==i} : 0;
{|j>=i+1} : NR_FTable;
esac;
NR_FTable[i,j] = reduce(min, (i,j,k->i,j), ((FTable[i,k] + FTable[k+1,j]) + ((P[i-1] * P[k]) * P[j])));
.

