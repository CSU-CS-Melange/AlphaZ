/**/
affine fdtd_2d {TSTEPS,N,M| TSTEPS > 2 && N > 3 && M > 3}
input 
output
	double ex {t,i,j|t==TSTEPS && 0<=i<N && 0<=j<M};
	double ey {t,i,j|t==TSTEPS && 0<=i<N && 0<=j<M};
	double hz {t,i,j|t==TSTEPS && 0<=i<N && 0<=j<M};
local 
	double temp_ex{t,i,j|0<=i<N && 0<=j<M && 0<=t<TSTEPS};
	double temp_ey{t,i,j|0<=i<N && 0<=j<M && 0<=t<TSTEPS};
	double temp_hz{t,i,j|0<=i<N && 0<=j<M && 0<=t<TSTEPS};
let

	temp_ey[t,i,j] =  case
						{|t == 0} : [i]*[j]+2;
						{|t > 0 && 1<=i<N && 0 <=j<M}: temp_ey[t-1,i,j] - 0.5*(temp_hz[t-1,i,j]-temp_hz[t-1,i-1,j]);
						{|t > 0 && 0==i }: [t];  
					esac; 

	temp_ex[t,i,j] = case
						{|t == 0} : [i]*[j]+1;
						{|t > 0 && 0<=i<N && 1<=j<M}: temp_ex[t-1,i,j] - 0.5*(temp_hz[t-1,i,j]-temp_hz[t-1,i,j-1]);
						{|t > 0 && 0==j}: temp_ex[t-1,i,j];  
					esac; 
	temp_hz[t,i,j] = case
						{|t == 0} : [i]*[j]+3;
						{|t > 0 && 0<=i<N-1 && 0<=j<M-1}  : temp_hz[t-1,i,j] - 0.7*  (temp_ex[t,i,j+1] - temp_ex[t,i,j] +temp_ey[t,i+1,j] - temp_ey[t,i,j]);
						{|t > 0 && i==N-1 } || {|t > 0 && j==M-1 } : temp_hz[t-1,i,j];  
					esac; 

	ey[t,i,j] = temp_ey[t-1,i,j];
	ex[t,i,j] = temp_ex[t-1,i,j];
	hz[t,i,j] = temp_hz[t-1,i,j];
.
/**/
/*
//for writeC verify code
affine fdtd_2d {TSTEPS,N,M| TSTEPS > 2 && N > 3 && M > 3}
input 
output
	double ex {i,j|0<=i<N && 0<=j<M};
	double ey {i,j|0<=i<N && 0<=j<M};
	double hz {i,j|0<=i<N && 0<=j<M};
local 
	double temp_ex{t,i,j|0<=i<N && 0<=j<M && 0<=t<TSTEPS};
	double temp_ey{t,i,j|0<=i<N && 0<=j<M && 0<=t<TSTEPS};
	double temp_hz{t,i,j|0<=i<N && 0<=j<M && 0<=t<TSTEPS};
let

	temp_ey[t,i,j] =  case
						{|t == 0} : [i]*[j]+2;
						{|t > 0 && 1<=i<N && 0 <=j<M}: temp_ey[t-1,i,j] - 0.5*(temp_hz[t-1,i,j]-temp_hz[t-1,i-1,j]);
						{|t > 0 && 0==i }: [t];  
					esac; 

	temp_ex[t,i,j] = case
						{|t == 0} : [i]*[j]+1;
						{|t > 0 && 0<=i<N && 1<=j<M}: temp_ex[t-1,i,j] - 0.5*(temp_hz[t-1,i,j]-temp_hz[t-1,i,j-1]);
						{|t > 0 && 0==j}: temp_ex[t-1,i,j];  
					esac; 
	temp_hz[t,i,j] = case
						{|t == 0} : [i]*[j]+3;
						{|t > 0 && 0<=i<N-1 && 0<=j<M-1}  : temp_hz[t-1,i,j] - 0.7*  (temp_ex[t,i,j+1] - temp_ex[t,i,j] +temp_ey[t,i+1,j] - temp_ey[t,i,j]);
						{|t > 0 && i==N-1 } || {|t > 0 && j==M-1 } : temp_hz[t-1,i,j];  
					esac; 

	ey[i,j] = temp_ey[TSTEPS-1,i,j];
	ex[i,j] = temp_ex[TSTEPS-1,i,j];
	hz[i,j] = temp_hz[TSTEPS-1,i,j];
.
*/
