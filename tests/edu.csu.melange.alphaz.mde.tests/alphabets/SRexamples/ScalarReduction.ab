affine ScalarReduction {N| N-3>= 0 }
input
	int A {i| i>= 0 && N-i-1>= 0 } ;
output
	int m { | } ;
local
	int S {i,j| -i+j>= 0 && i>= 0 && N-j-1>= 0 } ;
let
	m[] = reduce (max,[i,j],{ | -i+j>= 0 && N-j-1>= 0 && i>= 0 } : S);
	S[i,j] = case
		{|-i+j== 0   } :  reduce (+,[k],{ | -i+k== 0 } : A [k]) ;
		{|-i+j-1>= 0 } : (reduce (+,[k],{ | -j+k== 0 } : A [k]) + S [i,j-1]);
	esac;
.