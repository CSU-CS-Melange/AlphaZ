affine Jacobi1D {Nb,Tb,Nl,Tl,b|Tl==0 && Nl==0 && Nb>=2 && Tb>=1 && b>=6}
input
double A_bl {iBl,iLoc|Nb>=iBl+1 && iBl>=0 && b>=iLoc+1 && iLoc>=0};
output
double B_bl {iBl,iLoc|Nb>=iBl+1 && iBl>=0 && b>=iLoc+1 && iLoc>=0};
local
double temp_bl {iBl,tBl,iLoc,tLoc|Tb>=tBl && Nb+tBl>=iBl && iLoc>=b-2 && b>=tLoc+2 && tLoc>=0 && b>=iLoc+1 && Nb+Tb>=iBl+1 && tBl>=0 && iBl>=tBl} || {iBl,tBl,iLoc,tLoc|tLoc==0 && tBl>=0 && iBl>=tBl && Tb>=tBl && b>=iLoc+1 && iLoc>=0 && Nb+tBl>=iBl && Nb+Tb>=iBl+1} || {iBl,tBl,iLoc,tLoc|tLoc==b-1 && tBl>=0 && iBl>=tBl && Tb>=tBl && b>=iLoc+1 && iLoc>=0 && Nb+tBl>=iBl && Nb+Tb>=iBl+1};
double temp_bl_0 {iBl,tBl,iLoc,tLoc|tLoc==0 && tBl==0 && iBl==0};
double temp_bl_1 {iBl,tBl,iLoc,tLoc|tBl==0 && iBl==Nb-1 && Nb>=b-1 && b>=Nb} || {iBl,tBl,iLoc,tLoc|tLoc==0 && tBl==0 && iBl==Nb-1 && b>=Nb};
double temp_bl_2 {iBl,tBl,iLoc,tLoc|tBl==0 && b>=iBl+1 && iBl>=b-2 && Nb>=iBl+2} || {iBl,tBl,iLoc,tLoc|tLoc==0 && tBl==0 && b>=iBl+1 && iBl>=1 && Nb>=iBl+2};
double temp_bl_3 {iBl,tBl,iLoc,tLoc|tBl==Tb && iBl==Tb && b==Tb+2} || {iBl,tBl,iLoc,tLoc|tLoc==Tb && tBl==Tb && iBl==Tb && b==Tb+1};
double temp_bl_4 {iBl,tBl,iLoc,tLoc|tBl==b-2 && iBl==b-2 && Tb>=b-1} || {iBl,tBl,iLoc,tLoc|tLoc==b-1 && tBl==b-1 && iBl==b-1 && Tb>=b};
double temp_bl_5 {iBl,tBl,iLoc,tLoc|tBl==0 && iBl==Nb && Nb>=b-2 && b>=Nb+1} || {iBl,tBl,iLoc,tLoc|tLoc==0 && tBl==0 && iBl==Nb && b>=Nb+1};
double temp_bl_6 {iBl,tBl,iLoc,tLoc|Nb+tBl==iBl && b>=iBl+1 && iBl>=Nb+1 && iBl>=b-2 && Nb+Tb>=iBl+1};
double temp_bl_7 {iBl,tBl,iLoc,tLoc|tBl==1 && iBl==Nb && Tb==1 && b>=Nb+1 && Nb>=b-2};
double temp_bl_8 {iBl,tBl,iLoc,tLoc|tBl==1 && iBl==Nb && Tb>=2 && b>=Nb+1 && Nb>=b-2};
double temp_bl_9 {iBl,tBl,iLoc,tLoc|tBl==Tb && iBl==Nb+Tb-1 && Nb+Tb>=b-1 && Tb>=2 && b>=Nb+Tb};
double temp_bl_10 {iBl,tBl,iLoc,tLoc|Nb+tBl==iBl+1 && b>=iBl+1 && iBl>=Nb+1 && iBl>=b-2 && Nb+Tb>=iBl+2};
double temp_bl_11 {iBl,tBl,iLoc,tLoc|tBl==Tb && b>=iBl+1 && iBl>=Tb+1 && iBl>=b-2 && Nb+Tb>=iBl+2};
double temp_bl_12 {iBl,tBl,iLoc,tLoc|tBl>=1 && iBl>=tBl+1 && Tb>=tBl+1 && Nb+tBl>=iBl+2 && iBl>=b-2 && b>=iBl+1};
double B_bl_0 {iBl,iLoc|Nb>=iBl+1 && iBl>=0 && b>=iLoc+1 && iLoc>=0};
double B_bl_loc {iBl,iLoc|Nb>=iBl+1 && iBl>=0 && b>=iLoc+1 && iLoc>=0};
let
temp_bl[iBl,tBl,iLoc,tLoc] = case
{|tBl==0 && iBl==0} : temp_bl_0;
{|tBl==0 && iBl==Nb-1} : temp_bl_1;
{|tBl==0 && iBl>=1 && Nb>=iBl+2} : temp_bl_2;
{|tBl==Tb && iBl==Tb} : temp_bl_3;
{|tBl==iBl && iBl>=1 && Tb>=iBl+1} : temp_bl_4;
{|tBl==0 && iBl==Nb} : temp_bl_5;
{|Nb+tBl==iBl && iBl>=Nb+1} : temp_bl_6;
{|tBl==1 && iBl==Nb && Tb==1} : temp_bl_7;
{|tBl==1 && iBl==Nb && Tb>=2} : temp_bl_8;
{|tBl==Tb && iBl==Nb+Tb-1 && Tb>=2} : temp_bl_9;
{|Nb+tBl==iBl+1 && Nb+Tb>=iBl+2 && iBl>=Nb+1} : temp_bl_10;
{|tBl==Tb && Nb+Tb>=iBl+2 && iBl>=Tb+1} : temp_bl_11;
{|Nb+tBl>=iBl+2 && tBl>=1 && iBl>=tBl+1 && Tb>=tBl+1} : temp_bl_12;
esac;
B_bl_loc[iBl,iLoc] = case
{|} : B_bl_0;
esac;
B_bl[iBl,iLoc] = B_bl_loc;
use {iBl,tBl|tBl==0 && iBl==0 && Nb>=2 && Tb>=1} Jacobi1D_temp_bl_Tile_0[Nl,Tl,b] ((iBl,tBl,tBl->iBl-tBl,tBl)@A_bl) returns (temp_bl_0);
use {iBl,tBl|tBl==0 && iBl==Nb-1 && Nb>=2 && Tb>=1} Jacobi1D_temp_bl_Tile_1[Nl,Tl,b] ((iBl,tBl,tBl->iBl-tBl,tBl)@A_bl,(iBl,tBl,iLoc,tLoc->iBl-1,tBl,iLoc,tLoc)@temp_bl) returns (temp_bl_1);
use {iBl,tBl|tBl==0 && Tb>=1 && iBl>=1 && Nb>=iBl+2} Jacobi1D_temp_bl_Tile_2[Nl,Tl,b] ((iBl,tBl,tBl->iBl-tBl,tBl)@A_bl,(iBl,tBl,iLoc,tLoc->iBl-1,tBl,iLoc,tLoc)@temp_bl) returns (temp_bl_2);
use {iBl,tBl|tBl==Tb && iBl==Tb && Nb>=2 && Tb>=1} Jacobi1D_temp_bl_Tile_3[Nl,Tl,b] ((iBl,tBl,iLoc,tLoc->iBl-1,tBl-1,iLoc,tLoc)@temp_bl,(iBl,tBl,iLoc,tLoc->iBl,tBl-1,iLoc,tLoc)@temp_bl) returns (temp_bl_3);
use {iBl,tBl|tBl==iBl && Nb>=2 && iBl>=1 && Tb>=iBl+1} Jacobi1D_temp_bl_Tile_4[Nl,Tl,b] ((iBl,tBl,iLoc,tLoc->iBl-1,tBl-1,iLoc,tLoc)@temp_bl,(iBl,tBl,iLoc,tLoc->iBl,tBl-1,iLoc,tLoc)@temp_bl) returns (temp_bl_4);
use {iBl,tBl|tBl==0 && iBl==Nb && Nb>=2 && Tb>=1} Jacobi1D_temp_bl_Tile_5[Nl,Tl,b] ((iBl,tBl,iLoc,tLoc->iBl-1,tBl,iLoc,tLoc)@temp_bl) returns (temp_bl_5);
use {iBl,tBl|Nb+tBl==iBl && Nb>=2 && iBl>=Nb+1 && Nb+Tb>=iBl+1} Jacobi1D_temp_bl_Tile_6[Nl,Tl,b] ((iBl,tBl,iLoc,tLoc->iBl-1,tBl,iLoc,tLoc)@temp_bl) returns (temp_bl_6);
use {iBl,tBl|tBl==1 && iBl==Nb && Tb==1 && Nb>=2} Jacobi1D_temp_bl_Tile_7[Nl,Tl,b] ((iBl,tBl,iLoc,tLoc->iBl,tBl-1,iLoc,tLoc)@temp_bl,(iBl,tBl,iLoc,tLoc->iBl-1,tBl-1,iLoc,tLoc)@temp_bl) returns (temp_bl_7);
use {iBl,tBl|tBl==1 && iBl==Nb && Nb>=2 && Tb>=2} Jacobi1D_temp_bl_Tile_8[Nl,Tl,b] ((iBl,tBl,iLoc,tLoc->iBl,tBl-1,iLoc,tLoc)@temp_bl,(iBl,tBl,iLoc,tLoc->iBl-1,tBl-1,iLoc,tLoc)@temp_bl,(iBl,tBl,iLoc,tLoc->iBl-1,tBl,iLoc,tLoc)@temp_bl) returns (temp_bl_8);
use {iBl,tBl|tBl==Tb && iBl==Nb+Tb-1 && Nb>=2 && Tb>=2} Jacobi1D_temp_bl_Tile_9[Nl,Tl,b] ((iBl,tBl,iLoc,tLoc->iBl,tBl-1,iLoc,tLoc)@temp_bl,(iBl,tBl,iLoc,tLoc->iBl-1,tBl-1,iLoc,tLoc)@temp_bl) returns (temp_bl_9);
use {iBl,tBl|Nb+tBl==iBl+1 && Nb>=2 && iBl>=Nb+1 && Nb+Tb>=iBl+2} Jacobi1D_temp_bl_Tile_10[Nl,Tl,b] ((iBl,tBl,iLoc,tLoc->iBl,tBl-1,iLoc,tLoc)@temp_bl,(iBl,tBl,iLoc,tLoc->iBl-1,tBl-1,iLoc,tLoc)@temp_bl,(iBl,tBl,iLoc,tLoc->iBl-1,tBl,iLoc,tLoc)@temp_bl) returns (temp_bl_10);
use {iBl,tBl|tBl==Tb && Tb>=1 && iBl>=Tb+1 && Nb+Tb>=iBl+2} Jacobi1D_temp_bl_Tile_11[Nl,Tl,b] ((iBl,tBl,iLoc,tLoc->iBl-1,tBl-1,iLoc,tLoc)@temp_bl,(iBl,tBl,iLoc,tLoc->iBl,tBl-1,iLoc,tLoc)@temp_bl) returns (temp_bl_11);
use {iBl,tBl|tBl>=1 && iBl>=tBl+1 && Tb>=tBl+1 && Nb+tBl>=iBl+2} Jacobi1D_temp_bl_Tile_12[Nl,Tl,b] ((iBl,tBl,iLoc,tLoc->iBl-1,tBl-1,iLoc,tLoc)@temp_bl,(iBl,tBl,iLoc,tLoc->iBl,tBl-1,iLoc,tLoc)@temp_bl,(iBl,tBl,iLoc,tLoc->iBl-1,tBl,iLoc,tLoc)@temp_bl) returns (temp_bl_12);
use {iBl|Nb>=2 && Tb>=1 && iBl>=0 && Nb>=iBl+1} Jacobi1D_B_bl_Tile_0[Nl,Tl,b] ((iBl,i2,i3->iBl+Tb,Tb,i2,i3)@temp_bl) returns (B_bl_0);
.
affine Jacobi1D_temp_bl_Tile_0 {Nl,Tl,b|Tl==0 && Nl==0 && b>=6}
input
double A_bl_0 {tBl|tBl>=0 && b>=tBl+1};
output
double temp_bl_out {iLoc,tLoc|tLoc>=0 && b>=tLoc+2 && iLoc>=b-2 && b>=iLoc+1} || {iLoc,tLoc|tLoc==0 && iLoc>=0 && b>=iLoc+1} || {iLoc,tLoc|tLoc==b-1 && iLoc>=0 && b>=iLoc+1};
local
double temp_bl_loc {iLoc,tLoc|tLoc>=0 && iLoc>=tLoc && b>=iLoc+1};
let
temp_bl_loc[iLoc,tLoc] = case
{|tLoc==0} : A_bl_0[iLoc-tLoc];
{|tLoc==iLoc && iLoc>=1} : temp_bl_loc[iLoc-1,tLoc-1];
{|iLoc>=tLoc+1 && tLoc>=1} : (((temp_bl_loc[iLoc-2,tLoc-1] + temp_bl_loc[iLoc-1,tLoc-1]) + temp_bl_loc[iLoc,tLoc-1]) * 0.333333);
esac;
temp_bl_out[iLoc,tLoc] = case
{|tLoc==b-1 && b>=iLoc+2} : 0.0;
{|iLoc>=b-2 && iLoc>=tLoc} || {|tLoc==0} : temp_bl_loc;
esac;
.
affine Jacobi1D_temp_bl_Tile_1 {Nl,Tl,b|Tl==0 && Nl==0 && b>=6}
input
double A_bl_0 {tBl|tBl>=0 && b>=tBl+1};
double temp_bl_1 {iLoc,tLoc|tLoc>=0 && b>=tLoc+2 && iLoc>=b-2 && b>=iLoc+1};
output
double temp_bl_out {iLoc,tLoc|tLoc>=0 && b>=tLoc+2 && iLoc>=b-2 && b>=iLoc+1} || {iLoc,tLoc|tLoc==0 && iLoc>=0 && b>=iLoc+1} || {iLoc,tLoc|tLoc==b-1 && iLoc>=0 && b>=iLoc+1};
local
double temp_bl_loc {iLoc,tLoc|tLoc>=0 && b>=tLoc+1 && iLoc>=0 && b>=iLoc+1};
let
temp_bl_loc[iLoc,tLoc] = case
{|tLoc==0} : A_bl_0[iLoc-tLoc];
{|iLoc==0 && tLoc>=1} : (((temp_bl_1[iLoc+b-2,tLoc-1] + temp_bl_1[iLoc+b-1,tLoc-1]) + temp_bl_loc[iLoc,tLoc-1]) * 0.333333);
{|iLoc==1 && tLoc>=1} : (((temp_bl_1[iLoc+b-2,tLoc-1] + temp_bl_loc[iLoc-1,tLoc-1]) + temp_bl_loc[iLoc,tLoc-1]) * 0.333333);
{|iLoc>=2 && tLoc>=1} : (((temp_bl_loc[iLoc-2,tLoc-1] + temp_bl_loc[iLoc-1,tLoc-1]) + temp_bl_loc[iLoc,tLoc-1]) * 0.333333);
esac;
temp_bl_out[iLoc,tLoc] = temp_bl_loc;
.
affine Jacobi1D_temp_bl_Tile_2 {Nl,Tl,b|Tl==0 && Nl==0 && b>=6}
input
double A_bl_0 {tBl|tBl>=0 && b>=tBl+1};
double temp_bl_1 {iLoc,tLoc|tLoc>=0 && b>=tLoc+2 && iLoc>=b-2 && b>=iLoc+1};
output
double temp_bl_out {iLoc,tLoc|tLoc>=0 && b>=tLoc+2 && iLoc>=b-2 && b>=iLoc+1} || {iLoc,tLoc|tLoc==0 && iLoc>=0 && b>=iLoc+1} || {iLoc,tLoc|tLoc==b-1 && iLoc>=0 && b>=iLoc+1};
local
double temp_bl_loc {iLoc,tLoc|tLoc>=0 && b>=tLoc+1 && iLoc>=0 && b>=iLoc+1};
let
temp_bl_loc[iLoc,tLoc] = case
{|tLoc==0} : A_bl_0[iLoc-tLoc];
{|iLoc==0 && tLoc>=1} : (((temp_bl_1[iLoc+b-2,tLoc-1] + temp_bl_1[iLoc+b-1,tLoc-1]) + temp_bl_loc[iLoc,tLoc-1]) * 0.333333);
{|iLoc==1 && tLoc>=1} : (((temp_bl_1[iLoc+b-2,tLoc-1] + temp_bl_loc[iLoc-1,tLoc-1]) + temp_bl_loc[iLoc,tLoc-1]) * 0.333333);
{|iLoc>=2 && tLoc>=1} : (((temp_bl_loc[iLoc-2,tLoc-1] + temp_bl_loc[iLoc-1,tLoc-1]) + temp_bl_loc[iLoc,tLoc-1]) * 0.333333);
esac;
temp_bl_out[iLoc,tLoc] = temp_bl_loc;
.
affine Jacobi1D_temp_bl_Tile_3 {Nl,Tl,b|Tl==0 && Nl==0 && b>=6}
input
double temp_bl_0 {iLoc,tLoc|tLoc==b-1 && iLoc==b-1};
double temp_bl_1 {iLoc,tLoc|tLoc==b-1 && iLoc>=0 && b>=iLoc+1};
output
double temp_bl_out {iLoc,tLoc|tLoc>=0 && b>=tLoc+2 && iLoc>=b-2 && b>=iLoc+1} || {iLoc,tLoc|tLoc==0 && iLoc>=0 && b>=iLoc+1} || {iLoc,tLoc|tLoc==b-1 && iLoc>=0 && b>=iLoc+1};
local
double temp_bl_loc {iLoc,tLoc|tLoc==0 && iLoc>=0 && b>=iLoc+1};
let
temp_bl_loc[iLoc,tLoc] = case
{|iLoc==0} : temp_bl_0[iLoc+b-1,tLoc+b-1];
{|iLoc==1} : (((temp_bl_0[iLoc+b-2,tLoc+b-1] + temp_bl_1[iLoc-1,tLoc+b-1]) + temp_bl_1[iLoc,tLoc+b-1]) * 0.333333);
{|iLoc>=2} : (((temp_bl_1[iLoc-2,tLoc+b-1] + temp_bl_1[iLoc-1,tLoc+b-1]) + temp_bl_1[iLoc,tLoc+b-1]) * 0.333333);
esac;
temp_bl_out[iLoc,tLoc] = case
{|iLoc>=b-2 && tLoc>=1 && b>=tLoc+2} || {|tLoc==b-1} : 0.0;
{|tLoc==0} : temp_bl_loc;
esac;
.
affine Jacobi1D_temp_bl_Tile_4 {Nl,Tl,b|Tl==0 && Nl==0 && b>=6}
input
double temp_bl_0 {iLoc,tLoc|tLoc==b-1 && iLoc==b-1};
double temp_bl_1 {iLoc,tLoc|tLoc==b-1 && iLoc>=0 && b>=iLoc+1};
output
double temp_bl_out {iLoc,tLoc|tLoc>=0 && b>=tLoc+2 && iLoc>=b-2 && b>=iLoc+1} || {iLoc,tLoc|tLoc==0 && iLoc>=0 && b>=iLoc+1} || {iLoc,tLoc|tLoc==b-1 && iLoc>=0 && b>=iLoc+1};
local
double temp_bl_loc {iLoc,tLoc|tLoc>=0 && iLoc>=tLoc && b>=iLoc+1};
let
temp_bl_loc[iLoc,tLoc] = case
{|tLoc==0 && iLoc==0} : temp_bl_0[iLoc+b-1,tLoc+b-1];
{|tLoc==iLoc && iLoc>=1} : temp_bl_loc[iLoc-1,tLoc-1];
{|tLoc==0 && iLoc==1} : (((temp_bl_0[iLoc+b-2,tLoc+b-1] + temp_bl_1[iLoc-1,tLoc+b-1]) + temp_bl_1[iLoc,tLoc+b-1]) * 0.333333);
{|tLoc==0 && iLoc>=2} : (((temp_bl_1[iLoc-2,tLoc+b-1] + temp_bl_1[iLoc-1,tLoc+b-1]) + temp_bl_1[iLoc,tLoc+b-1]) * 0.333333);
{|iLoc>=tLoc+1 && tLoc>=1} : (((temp_bl_loc[iLoc-2,tLoc-1] + temp_bl_loc[iLoc-1,tLoc-1]) + temp_bl_loc[iLoc,tLoc-1]) * 0.333333);
esac;
temp_bl_out[iLoc,tLoc] = case
{|tLoc==b-1 && b>=iLoc+2} : 0.0;
{|iLoc>=b-2 && iLoc>=tLoc} || {|tLoc==0} : temp_bl_loc;
esac;
.
affine Jacobi1D_temp_bl_Tile_5 {Nl,Tl,b|Tl==0 && Nl==0 && b>=6}
input
double temp_bl_0 {iLoc,tLoc|iLoc+tLoc>=b-1 && b>=tLoc+2 && iLoc>=b-2 && b>=iLoc+1};
output
double temp_bl_out {iLoc,tLoc|tLoc>=0 && b>=tLoc+2 && iLoc>=b-2 && b>=iLoc+1} || {iLoc,tLoc|tLoc==0 && iLoc>=0 && b>=iLoc+1} || {iLoc,tLoc|tLoc==b-1 && iLoc>=0 && b>=iLoc+1};
local
double temp_bl_loc {iLoc,tLoc|tLoc>=iLoc+1 && b>=tLoc+1 && iLoc>=0};
let
temp_bl_loc[iLoc,tLoc] = case
{|tLoc==1 && iLoc==0} : temp_bl_0[iLoc+b-1,tLoc-1];
{|tLoc==iLoc+1 && iLoc>=1} : temp_bl_loc[iLoc-1,tLoc-1];
{|iLoc==0 && tLoc>=2} : (((temp_bl_0[iLoc+b-2,tLoc-1] + temp_bl_0[iLoc+b-1,tLoc-1]) + temp_bl_loc[iLoc,tLoc-1]) * 0.333333);
{|iLoc==1 && tLoc>=3} : (((temp_bl_0[iLoc+b-2,tLoc-1] + temp_bl_loc[iLoc-1,tLoc-1]) + temp_bl_loc[iLoc,tLoc-1]) * 0.333333);
{|tLoc>=iLoc+2 && iLoc>=2} : (((temp_bl_loc[iLoc-2,tLoc-1] + temp_bl_loc[iLoc-1,tLoc-1]) + temp_bl_loc[iLoc,tLoc-1]) * 0.333333);
esac;
temp_bl_out[iLoc,tLoc] = case
{|iLoc>=b-2 && iLoc>=tLoc} || {|tLoc==0} : 0.0;
{|tLoc==b-1 && b>=iLoc+2} : temp_bl_loc;
esac;
.
affine Jacobi1D_temp_bl_Tile_6 {Nl,Tl,b|Tl==0 && Nl==0 && b>=6}
input
double temp_bl_0 {iLoc,tLoc|iLoc+tLoc>=b-1 && b>=tLoc+2 && iLoc>=b-2 && b>=iLoc+1};
output
double temp_bl_out {iLoc,tLoc|tLoc>=0 && b>=tLoc+2 && iLoc>=b-2 && b>=iLoc+1} || {iLoc,tLoc|tLoc==0 && iLoc>=0 && b>=iLoc+1} || {iLoc,tLoc|tLoc==b-1 && iLoc>=0 && b>=iLoc+1};
local
double temp_bl_loc {iLoc,tLoc|tLoc>=iLoc+1 && b>=tLoc+1 && iLoc>=0};
let
temp_bl_loc[iLoc,tLoc] = case
{|tLoc==1 && iLoc==0} : temp_bl_0[iLoc+b-1,tLoc-1];
{|tLoc==iLoc+1 && iLoc>=1} : temp_bl_loc[iLoc-1,tLoc-1];
{|iLoc==0 && tLoc>=2} : (((temp_bl_0[iLoc+b-2,tLoc-1] + temp_bl_0[iLoc+b-1,tLoc-1]) + temp_bl_loc[iLoc,tLoc-1]) * 0.333333);
{|iLoc==1 && tLoc>=3} : (((temp_bl_0[iLoc+b-2,tLoc-1] + temp_bl_loc[iLoc-1,tLoc-1]) + temp_bl_loc[iLoc,tLoc-1]) * 0.333333);
{|tLoc>=iLoc+2 && iLoc>=2} : (((temp_bl_loc[iLoc-2,tLoc-1] + temp_bl_loc[iLoc-1,tLoc-1]) + temp_bl_loc[iLoc,tLoc-1]) * 0.333333);
esac;
temp_bl_out[iLoc,tLoc] = case
{|iLoc>=b-2 && iLoc>=tLoc} || {|tLoc==0} : 0.0;
{|tLoc==b-1 && b>=iLoc+2} : temp_bl_loc;
esac;
.
affine Jacobi1D_temp_bl_Tile_7 {Nl,Tl,b|Tl==0 && Nl==0 && b>=6}
input
double temp_bl_0 {iLoc,tLoc|tLoc==b-1 && iLoc>=0 && b>=iLoc+2};
double temp_bl_1 {iLoc,tLoc|tLoc==b-1 && iLoc>=b-2 && b>=iLoc+1};
output
double temp_bl_out {iLoc,tLoc|tLoc>=0 && b>=tLoc+2 && iLoc>=b-2 && b>=iLoc+1} || {iLoc,tLoc|tLoc==0 && iLoc>=0 && b>=iLoc+1} || {iLoc,tLoc|tLoc==b-1 && iLoc>=0 && b>=iLoc+1};
local
double temp_bl_loc {iLoc,tLoc|tLoc==0 && iLoc>=0 && b>=iLoc+1};
let
temp_bl_loc[iLoc,tLoc] = case
{|iLoc==b-1} : temp_bl_0[iLoc-1,tLoc+b-1];
{|iLoc==0} : (((temp_bl_1[iLoc+b-2,tLoc+b-1] + temp_bl_1[iLoc+b-1,tLoc+b-1]) + temp_bl_0[iLoc,tLoc+b-1]) * 0.333333);
{|iLoc==1} : (((temp_bl_1[iLoc+b-2,tLoc+b-1] + temp_bl_0[iLoc-1,tLoc+b-1]) + temp_bl_0[iLoc,tLoc+b-1]) * 0.333333);
{|iLoc>=2 && b>=iLoc+2} : (((temp_bl_0[iLoc-2,tLoc+b-1] + temp_bl_0[iLoc-1,tLoc+b-1]) + temp_bl_0[iLoc,tLoc+b-1]) * 0.333333);
esac;
temp_bl_out[iLoc,tLoc] = case
{|iLoc>=b-2 && tLoc>=1 && b>=tLoc+2} || {|tLoc==b-1} : 0.0;
{|tLoc==0} : temp_bl_loc;
esac;
.
affine Jacobi1D_temp_bl_Tile_8 {Nl,Tl,b|Tl==0 && Nl==0 && b>=6}
input
double temp_bl_0 {iLoc,tLoc|tLoc==b-1 && iLoc>=0 && b>=iLoc+2};
double temp_bl_1 {iLoc,tLoc|tLoc==b-1 && iLoc>=b-2 && b>=iLoc+1};
double temp_bl_2 {iLoc,tLoc|tLoc>=0 && b>=tLoc+2 && iLoc>=b-2 && b>=iLoc+1};
output
double temp_bl_out {iLoc,tLoc|tLoc>=0 && b>=tLoc+2 && iLoc>=b-2 && b>=iLoc+1} || {iLoc,tLoc|tLoc==0 && iLoc>=0 && b>=iLoc+1} || {iLoc,tLoc|tLoc==b-1 && iLoc>=0 && b>=iLoc+1};
local
double temp_bl_loc {iLoc,tLoc|tLoc>=0 && b>=tLoc+1 && iLoc>=0 && b>=iLoc+1};
let
temp_bl_loc[iLoc,tLoc] = case
{|tLoc==0 && iLoc==b-1} : temp_bl_0[iLoc-1,tLoc+b-1];
{|tLoc==0 && iLoc==0} : (((temp_bl_1[iLoc+b-2,tLoc+b-1] + temp_bl_1[iLoc+b-1,tLoc+b-1]) + temp_bl_0[iLoc,tLoc+b-1]) * 0.333333);
{|tLoc==0 && iLoc==1} : (((temp_bl_1[iLoc+b-2,tLoc+b-1] + temp_bl_0[iLoc-1,tLoc+b-1]) + temp_bl_0[iLoc,tLoc+b-1]) * 0.333333);
{|tLoc==0 && iLoc>=2 && b>=iLoc+2} : (((temp_bl_0[iLoc-2,tLoc+b-1] + temp_bl_0[iLoc-1,tLoc+b-1]) + temp_bl_0[iLoc,tLoc+b-1]) * 0.333333);
{|iLoc==0 && tLoc>=1} : (((temp_bl_2[iLoc+b-2,tLoc-1] + temp_bl_2[iLoc+b-1,tLoc-1]) + temp_bl_loc[iLoc,tLoc-1]) * 0.333333);
{|iLoc==1 && tLoc>=1} : (((temp_bl_2[iLoc+b-2,tLoc-1] + temp_bl_loc[iLoc-1,tLoc-1]) + temp_bl_loc[iLoc,tLoc-1]) * 0.333333);
{|iLoc>=2 && tLoc>=1} : (((temp_bl_loc[iLoc-2,tLoc-1] + temp_bl_loc[iLoc-1,tLoc-1]) + temp_bl_loc[iLoc,tLoc-1]) * 0.333333);
esac;
temp_bl_out[iLoc,tLoc] = temp_bl_loc;
.
affine Jacobi1D_temp_bl_Tile_9 {Nl,Tl,b|Tl==0 && Nl==0 && b>=6}
input
double temp_bl_0 {iLoc,tLoc|tLoc==b-1 && iLoc>=0 && b>=iLoc+2};
double temp_bl_1 {iLoc,tLoc|tLoc==b-1 && iLoc>=b-2 && b>=iLoc+1};
output
double temp_bl_out {iLoc,tLoc|tLoc>=0 && b>=tLoc+2 && iLoc>=b-2 && b>=iLoc+1} || {iLoc,tLoc|tLoc==0 && iLoc>=0 && b>=iLoc+1} || {iLoc,tLoc|tLoc==b-1 && iLoc>=0 && b>=iLoc+1};
local
double temp_bl_loc {iLoc,tLoc|tLoc==0 && iLoc>=0 && b>=iLoc+1};
let
temp_bl_loc[iLoc,tLoc] = case
{|iLoc==b-1} : temp_bl_0[iLoc-1,tLoc+b-1];
{|iLoc==0} : (((temp_bl_1[iLoc+b-2,tLoc+b-1] + temp_bl_1[iLoc+b-1,tLoc+b-1]) + temp_bl_0[iLoc,tLoc+b-1]) * 0.333333);
{|iLoc==1} : (((temp_bl_1[iLoc+b-2,tLoc+b-1] + temp_bl_0[iLoc-1,tLoc+b-1]) + temp_bl_0[iLoc,tLoc+b-1]) * 0.333333);
{|iLoc>=2 && b>=iLoc+2} : (((temp_bl_0[iLoc-2,tLoc+b-1] + temp_bl_0[iLoc-1,tLoc+b-1]) + temp_bl_0[iLoc,tLoc+b-1]) * 0.333333);
esac;
temp_bl_out[iLoc,tLoc] = case
{|iLoc>=b-2 && tLoc>=1 && b>=tLoc+2} || {|tLoc==b-1} : 0.0;
{|tLoc==0} : temp_bl_loc;
esac;
.
affine Jacobi1D_temp_bl_Tile_10 {Nl,Tl,b|Tl==0 && Nl==0 && b>=6}
input
double temp_bl_0 {iLoc,tLoc|tLoc==b-1 && iLoc>=0 && b>=iLoc+2};
double temp_bl_1 {iLoc,tLoc|tLoc==b-1 && iLoc>=b-2 && b>=iLoc+1};
double temp_bl_2 {iLoc,tLoc|tLoc>=0 && b>=tLoc+2 && iLoc>=b-2 && b>=iLoc+1};
output
double temp_bl_out {iLoc,tLoc|tLoc>=0 && b>=tLoc+2 && iLoc>=b-2 && b>=iLoc+1} || {iLoc,tLoc|tLoc==0 && iLoc>=0 && b>=iLoc+1} || {iLoc,tLoc|tLoc==b-1 && iLoc>=0 && b>=iLoc+1};
local
double temp_bl_loc {iLoc,tLoc|tLoc>=0 && b>=tLoc+1 && iLoc>=0 && b>=iLoc+1};
let
temp_bl_loc[iLoc,tLoc] = case
{|tLoc==0 && iLoc==b-1} : temp_bl_0[iLoc-1,tLoc+b-1];
{|tLoc==0 && iLoc==0} : (((temp_bl_1[iLoc+b-2,tLoc+b-1] + temp_bl_1[iLoc+b-1,tLoc+b-1]) + temp_bl_0[iLoc,tLoc+b-1]) * 0.333333);
{|tLoc==0 && iLoc==1} : (((temp_bl_1[iLoc+b-2,tLoc+b-1] + temp_bl_0[iLoc-1,tLoc+b-1]) + temp_bl_0[iLoc,tLoc+b-1]) * 0.333333);
{|tLoc==0 && iLoc>=2 && b>=iLoc+2} : (((temp_bl_0[iLoc-2,tLoc+b-1] + temp_bl_0[iLoc-1,tLoc+b-1]) + temp_bl_0[iLoc,tLoc+b-1]) * 0.333333);
{|iLoc==0 && tLoc>=1} : (((temp_bl_2[iLoc+b-2,tLoc-1] + temp_bl_2[iLoc+b-1,tLoc-1]) + temp_bl_loc[iLoc,tLoc-1]) * 0.333333);
{|iLoc==1 && tLoc>=1} : (((temp_bl_2[iLoc+b-2,tLoc-1] + temp_bl_loc[iLoc-1,tLoc-1]) + temp_bl_loc[iLoc,tLoc-1]) * 0.333333);
{|iLoc>=2 && tLoc>=1} : (((temp_bl_loc[iLoc-2,tLoc-1] + temp_bl_loc[iLoc-1,tLoc-1]) + temp_bl_loc[iLoc,tLoc-1]) * 0.333333);
esac;
temp_bl_out[iLoc,tLoc] = temp_bl_loc;
.
affine Jacobi1D_temp_bl_Tile_11 {Nl,Tl,b|Tl==0 && Nl==0 && b>=6}
input
double temp_bl_0 {iLoc,tLoc|tLoc==b-1 && iLoc>=b-2 && b>=iLoc+1};
double temp_bl_1 {iLoc,tLoc|tLoc==b-1 && iLoc>=0 && b>=iLoc+1};
output
double temp_bl_out {iLoc,tLoc|tLoc>=0 && b>=tLoc+2 && iLoc>=b-2 && b>=iLoc+1} || {iLoc,tLoc|tLoc==0 && iLoc>=0 && b>=iLoc+1} || {iLoc,tLoc|tLoc==b-1 && iLoc>=0 && b>=iLoc+1};
local
double temp_bl_loc {iLoc,tLoc|tLoc==0 && iLoc>=0 && b>=iLoc+1};
let
temp_bl_loc[iLoc,tLoc] = case
{|iLoc==0} : (((temp_bl_0[iLoc+b-2,tLoc+b-1] + temp_bl_0[iLoc+b-1,tLoc+b-1]) + temp_bl_1[iLoc,tLoc+b-1]) * 0.333333);
{|iLoc==1} : (((temp_bl_0[iLoc+b-2,tLoc+b-1] + temp_bl_1[iLoc-1,tLoc+b-1]) + temp_bl_1[iLoc,tLoc+b-1]) * 0.333333);
{|iLoc>=2} : (((temp_bl_1[iLoc-2,tLoc+b-1] + temp_bl_1[iLoc-1,tLoc+b-1]) + temp_bl_1[iLoc,tLoc+b-1]) * 0.333333);
esac;
temp_bl_out[iLoc,tLoc] = case
{|iLoc>=b-2 && tLoc>=1 && b>=tLoc+2} || {|tLoc==b-1} : 0.0;
{|tLoc==0} : temp_bl_loc;
esac;
.
affine Jacobi1D_temp_bl_Tile_12 {Nl,Tl,b|Tl==0 && Nl==0 && b>=6}
input
double temp_bl_0 {iLoc,tLoc|tLoc==b-1 && iLoc>=b-2 && b>=iLoc+1};
double temp_bl_1 {iLoc,tLoc|tLoc==b-1 && iLoc>=0 && b>=iLoc+1};
double temp_bl_2 {iLoc,tLoc|tLoc>=0 && b>=tLoc+2 && iLoc>=b-2 && b>=iLoc+1};
output
double temp_bl_out {iLoc,tLoc|tLoc>=0 && b>=tLoc+2 && iLoc>=b-2 && b>=iLoc+1} || {iLoc,tLoc|tLoc==0 && iLoc>=0 && b>=iLoc+1} || {iLoc,tLoc|tLoc==b-1 && iLoc>=0 && b>=iLoc+1};
local
double temp_bl_loc {iLoc,tLoc|tLoc>=0 && b>=tLoc+1 && iLoc>=0 && b>=iLoc+1};
let
temp_bl_loc[iLoc,tLoc] = case
{|tLoc==0 && iLoc==0} : (((temp_bl_0[iLoc+b-2,tLoc+b-1] + temp_bl_0[iLoc+b-1,tLoc+b-1]) + temp_bl_1[iLoc,tLoc+b-1]) * 0.333333);
{|tLoc==0 && iLoc==1} : (((temp_bl_0[iLoc+b-2,tLoc+b-1] + temp_bl_1[iLoc-1,tLoc+b-1]) + temp_bl_1[iLoc,tLoc+b-1]) * 0.333333);
{|tLoc==0 && iLoc>=2} : (((temp_bl_1[iLoc-2,tLoc+b-1] + temp_bl_1[iLoc-1,tLoc+b-1]) + temp_bl_1[iLoc,tLoc+b-1]) * 0.333333);
{|iLoc==0 && tLoc>=1} : (((temp_bl_2[iLoc+b-2,tLoc-1] + temp_bl_2[iLoc+b-1,tLoc-1]) + temp_bl_loc[iLoc,tLoc-1]) * 0.333333);
{|iLoc==1 && tLoc>=1} : (((temp_bl_2[iLoc+b-2,tLoc-1] + temp_bl_loc[iLoc-1,tLoc-1]) + temp_bl_loc[iLoc,tLoc-1]) * 0.333333);
{|iLoc>=2 && tLoc>=1} : (((temp_bl_loc[iLoc-2,tLoc-1] + temp_bl_loc[iLoc-1,tLoc-1]) + temp_bl_loc[iLoc,tLoc-1]) * 0.333333);
esac;
temp_bl_out[iLoc,tLoc] = temp_bl_loc;
.
affine Jacobi1D_B_bl_Tile_0 {Nl,Tl,b|Tl==0 && Nl==0 && b>=6}
input
double temp_bl_0 {i2,i3|i3==0 && i2>=0 && b>=i2+1};
output
double B_bl_out {iLoc|iLoc>=0 && b>=iLoc+1};
local
double B_bl_loc {iLoc|iLoc>=0 && b>=iLoc+1};
let
B_bl_loc[iLoc] = case
{|} : temp_bl_0[iLoc+Tl,Tl];
esac;
B_bl_out[iLoc] = B_bl_loc;
.
