affine ReductionOSP {N |2<= N}
given 
    int P {i | 0<=i<=N};
returns
    int FTable {i,j | 1<=i<=j<=N};
using
	int temp {i,j,k | 1<=i<=k<j<=N};
through
    FTable[i,j] = case
		{|i==j}: 0;
    	{|i<j} : temp[i,j,j-1];
	esac;
	temp[i,j,k] = case
		{|k==i} : FTable[i,k] + FTable[k+1,j] + P[i-1]*P[k]*P[j];
		{|i<k<j} : temp[i,j,k-1] min (FTable[i,k] + FTable[k+1,j] + P[i-1]*P[k]*P[j]);
	esac;
.


/*affine ReductionOSP {N |2<= N}
given 
    int P {i | 0<=i<=N};
returns
    int FTable {i,j | 1<=i<=j<=N};
using
through
    FTable[i,j] = case
		{|i==j}: 0;
    	{|i<j} : reduce(min, [k], FTable[i,k] + FTable[k+1,j] + P[i-1]*P[k]*P[j]);
	esac;
.*/

