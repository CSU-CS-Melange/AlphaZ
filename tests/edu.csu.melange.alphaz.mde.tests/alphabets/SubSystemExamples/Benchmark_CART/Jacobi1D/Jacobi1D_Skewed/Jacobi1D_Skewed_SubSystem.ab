// *** TILE A: iBl==tBl==0
affine Jacobi1DTileA {Nb,Tb,Nl,Tl,b|Tl==0 && Nl==0 && Nb-1>=0 && b-3>=0 && Tb>=0}
input
	double A_bl_loc {iLoc|iLoc>=0 && -iLoc+b-1>=0};
output
	double temp_bl_loc {iLoc,tLoc| 0<=tLoc<=iLoc<b};
let
	temp_bl_loc[iLoc,tLoc] = case
		{| tLoc==0 && 0<=iLoc<b } : A_bl_loc[iLoc];				// Case 1
		{| 1<=tLoc==iLoc<b } : temp_bl_loc[iLoc-1,tLoc-1];		// Case 2 - second polyhedron
		{| 1<=tLoc<iLoc<b } :
			(temp_bl_loc[iLoc-2,tLoc-1] + temp_bl_loc[iLoc-1,tLoc-1] + temp_bl_loc[iLoc,tLoc-1]) * 0.333333;	// Case 10 - second polyhedron
	esac;
.

// *** TILE B: tBl==0 && 0<iBl<Nb
affine Jacobi1DTileB {Nb,Tb,Nl,Tl,b|Tl==0 && Nl==0 && Nb-1>=0 && b-3>=0 && Tb>=0}
input
	double A_bl_loc {iLoc | 0<=iLoc<b};
	double temp_bl_left {iLoc,tLoc| b-2<=iLoc<b && 0<=tLoc<b-1};
output
	double temp_bl_loc {iLoc,tLoc| 0<=(tLoc,iLoc)<b};
let
	temp_bl_loc[iLoc,tLoc] = case
		{| tLoc==0 && 0<=iLoc<b} : A_bl_loc[iLoc];				// Case 1
		{| iLoc==1 && 1<=tLoc<b} : (temp_bl_left[b-1,tLoc-1] + temp_bl_loc[0,tLoc-1] + temp_bl_loc[1,tLoc-1]) * 0.333333;		// Case 7
		{| iLoc==0 && 1<=tLoc<b} : (temp_bl_left[b-2,tLoc-1] + temp_bl_left[b-1,tLoc-1] + temp_bl_loc[0,tLoc-1]) * 0.333333;	// Case 8
		{| 2<=iLoc<b && 1<=tLoc<b}: (temp_bl_loc[iLoc-2,tLoc-1] + temp_bl_loc[iLoc-1,tLoc-1] + temp_bl_loc[iLoc,tLoc-1]) * 0.333333;		// Case 10
	esac;
.

// *** TILE C: 0<tBl==iBl<Tb
affine Jacobi1DTileC {Nb,Tb,Nl,Tl,b|Tl==0 && Nl==0 && Nb-1>=0 && b-3>=0 && Tb>=0}
input
	double temp_bl_bottom_left {iLoc,tLoc | iLoc==tLoc==b-1};
	double temp_bl_bottom {iLoc,tLoc | 0<=iLoc<b && tLoc==b-1};
output
	double temp_bl_loc {iLoc,tLoc| 0<=tLoc<=iLoc<b};
let
	temp_bl_loc[iLoc,tLoc] = case
		{| 0<iLoc==tLoc<b} : temp_bl_loc[iLoc-1,tLoc-1];		// Case 2
		{| iLoc==tLoc==0} : temp_bl_bottom_left[b-1,b-1];		// Case 3
		{| 2<=iLoc<b && tLoc==0} : (temp_bl_bottom[iLoc-2,b+tLoc-1] + temp_bl_bottom[iLoc-1,b+tLoc-1] + temp_bl_bottom[iLoc,b+tLoc-1]) * 0.333333;		// Case 9
		{| 1<=tLoc<iLoc<b} : (temp_bl_loc[iLoc-2,tLoc-1] + temp_bl_loc[iLoc-1,tLoc-1] + temp_bl_loc[iLoc,tLoc-1]) * 0.333333;							// Case 10
		{| iLoc==1 && tLoc==0} : (temp_bl_bottom_left[b+iLoc-2,b+tLoc-1] + temp_bl_bottom[iLoc-1,b+tLoc-1] + temp_bl_bottom[iLoc,b+tLoc-1]) * 0.333333;	// Case 11
	esac;
.

// *** TILE D: 0<=tBl<Tb && tBl+Nb==iBl
affine Jacobi1DTileD {Nb,Tb,Nl,Tl,b|Tl==0 && Nl==0 && Nb-1>=0 && b-3>=0 && Tb>=0}
input
	double temp_bl_left {iLoc,tLoc| b-2<=iLoc<=b-1 && 0<=tLoc<b-1};
output
	double temp_bl_loc {iLoc,tLoc| 0<=iLoc<tLoc<b};
let
	temp_bl_loc[iLoc,tLoc] = case
		{| iLoc==0 && tLoc==1} : temp_bl_left[b+iLoc-1,tLoc-1];		// Case 4
		{| iLoc+1==tLoc && 1<=iLoc<b-1} : temp_bl_loc[iLoc-1,tLoc-1];	// Case 5
		{| iLoc==1 && 3<=tLoc<b} : (temp_bl_left[b+iLoc-2,tLoc-1] + temp_bl_loc[iLoc-1,tLoc-1] + temp_bl_loc[iLoc,tLoc-1]) * 0.333333;		// Case 7
		{| iLoc==0 && 2<=tLoc<b} : (temp_bl_left[b+iLoc-2,tLoc-1] + temp_bl_left[b+iLoc-1,tLoc-1] + temp_bl_loc[iLoc,tLoc-1]) * 0.333333;	// Case 8
		{| 2<=iLoc<b-1 && iLoc+1<tLoc<b} : (temp_bl_loc[iLoc-2,tLoc-1] + temp_bl_loc[iLoc-1,tLoc-1] + temp_bl_loc[iLoc,tLoc-1]) * 0.333333;	// Case 10
	esac;
.

// *** TILE E: 1<=tBl<Tb && tBl<iBl<tBl+Nb   (central tiles)
affine Jacobi1DTileE {Nb,Tb,Nl,Tl,b|Tl==0 && Nl==0 && Nb-1>=0 && b-3>=0 && Tb>=0}
input
	double temp_bl_left {iLoc,tLoc| b-2<=iLoc<=b-1 && 0<=tLoc<b-1};
	double temp_bl_left_bottom {iLoc,tLoc| b-2<=iLoc<=b-1 && tLoc==b-1};
	double temp_bl_bottom {iLoc,tLoc| 0<=iLoc<b && tLoc==b-1};
output
	double temp_bl_loc {iLoc,tLoc| 0<=(iLoc,tLoc)<b};
let
	temp_bl_loc[iLoc,tLoc] = case
		{| iLoc==1 && 1<=tLoc<b } : (temp_bl_left[b+iLoc-2,tLoc-1] + temp_bl_loc[iLoc-1,tLoc-1] + temp_bl_loc[iLoc,tLoc-1]) * 0.333333;						// Case 7
		{| iLoc==0 && 1<=tLoc<b } : (temp_bl_left[b+iLoc-2,tLoc-1] + temp_bl_left[b+iLoc-1,tLoc-1] + temp_bl_loc[iLoc,tLoc-1]) * 0.333333;					// Case 8
		{| 2<=iLoc<b && tLoc==0 } : (temp_bl_bottom[iLoc-2,b+tLoc-1] + temp_bl_bottom[iLoc-1,b+tLoc-1] + temp_bl_bottom[iLoc,b+tLoc-1]) * 0.333333;			// Case 9
		{| 2<=iLoc<b && 1<=tLoc<b } : (temp_bl_loc[iLoc-2,tLoc-1] + temp_bl_loc[iLoc-1,tLoc-1] + temp_bl_loc[iLoc,tLoc-1]) * 0.333333;						// Case 10
		{| iLoc==1 && tLoc==0 } : (temp_bl_left_bottom[b+iLoc-2,b+tLoc-1] + temp_bl_bottom[iLoc-1,b+tLoc-1] + temp_bl_bottom[iLoc,b+tLoc-1]) * 0.333333;	// Case 11
		{| iLoc==tLoc==0 } : (temp_bl_bottom[b+iLoc-2,b+tLoc-1] + temp_bl_bottom[b+iLoc-1,b+tLoc-1] + temp_bl_bottom[iLoc,b+tLoc-1]) * 0.333333;			// Case 12
	esac;
.

// *** TILE F: 1<=tBl<Tb && iBl==tBl+Nb (identical to central tile, except the right-bottom corner)
affine Jacobi1DTileF {Nb,Tb,Nl,Tl,b|Tl==0 && Nl==0 && Nb-1>=0 && b-3>=0 && Tb>=0}
input
	double temp_bl_left {iLoc,tLoc| b-2<=iLoc<=b-1 && 0<=tLoc<b-1};
	double temp_bl_left_bottom {iLoc,tLoc| b-2<=iLoc<=b-1 && tLoc==b-1};
	double temp_bl_bottom {iLoc,tLoc| 0<=iLoc<b-1 && tLoc==b-1};
output
	double temp_bl_loc {iLoc,tLoc| 0<=(iLoc,tLoc)<b};
let
	temp_bl_loc[iLoc,tLoc] = case
		{|iLoc==b-1 && tLoc==0}: temp_bl_bottom[iLoc-1,b+tLoc-1];																							// Case 6
		{| iLoc==1 && 1<=tLoc<b } : (temp_bl_left[b+iLoc-2,tLoc-1] + temp_bl_loc[iLoc-1,tLoc-1] + temp_bl_loc[iLoc,tLoc-1]) * 0.333333;						// Case 7
		{| iLoc==0 && 1<=tLoc<b } : (temp_bl_left[b+iLoc-2,tLoc-1] + temp_bl_left[b+iLoc-1,tLoc-1] + temp_bl_loc[iLoc,tLoc-1]) * 0.333333;					// Case 8
		{| 2<=iLoc<b-1 && tLoc==0 } : (temp_bl_bottom[iLoc-2,b+tLoc-1] + temp_bl_bottom[iLoc-1,b+tLoc-1] + temp_bl_bottom[iLoc,b+tLoc-1]) * 0.333333;		// Case 9
		{| 2<=iLoc<b && 1<=tLoc<b } : (temp_bl_loc[iLoc-2,tLoc-1] + temp_bl_loc[iLoc-1,tLoc-1] + temp_bl_loc[iLoc,tLoc-1]) * 0.333333;						// Case 10
		{| iLoc==1 && tLoc==0 } : (temp_bl_left_bottom[b+iLoc-2,b+tLoc-1] + temp_bl_bottom[iLoc-1,b+tLoc-1] + temp_bl_bottom[iLoc,b+tLoc-1]) * 0.333333;	// Case 11
		{| iLoc==tLoc==0 } : (temp_bl_left_bottom[b+iLoc-2,b+tLoc-1] + temp_bl_left_bottom[b+iLoc-1,b+tLoc-1] + temp_bl_bottom[iLoc,b+tLoc-1]) * 0.333333;	// Case 12
	esac;
.

// *** TILE G: tBl==Tb && iBl==tBl
affine Jacobi1DTileG {Nb,Tb,Nl,Tl,b|Tl==0 && Nl==0 && Nb-1>=0 && b-3>=0 && Tb>=0 && Nb>=2}
input
	double temp_bl_left_bottom {iLoc,tLoc| iLoc==b-1 && tLoc==b-1};
	double temp_bl_bottom {iLoc,tLoc| 0<=iLoc<b && tLoc==b-1};
output
	double temp_bl_loc {iLoc,tLoc| 0<=iLoc<b && tLoc==0};
let
	temp_bl_loc[iLoc,tLoc] = case
		{| iLoc==0 && tLoc==0}:  temp_bl_left_bottom[b+iLoc-1,b+tLoc-1];		// Case 3
		{| 2<=iLoc<b && tLoc==0}: (temp_bl_bottom[iLoc-2,b+tLoc-1] + temp_bl_bottom[iLoc-1,b+tLoc-1] + temp_bl_bottom[iLoc,b+tLoc-1]) * 0.333333;	// Case 9
		{| iLoc==1 && tLoc==0}: (temp_bl_left_bottom[b+iLoc-2,b+tLoc-1] + temp_bl_bottom[iLoc-1,b+tLoc-1] + temp_bl_bottom[iLoc,b+tLoc-1]) * 0.333333;// Case 11
	esac;
.

// *** TILE H: tBl==Tb && tBl<iBl<tBl+Nb
affine Jacobi1DTileH {Nb,Tb,Nl,Tl,b|Tl==0 && Nl==0 && Nb-1>=0 && b-3>=0 && Tb>=0}
input
	double temp_bl_left_bottom {iLoc,tLoc| b-2<=iLoc<=b-1 && tLoc==b-1};
	double temp_bl_bottom {iLoc,tLoc| 0<=iLoc<b && tLoc==b-1};
output
	double temp_bl_loc {iLoc,tLoc| 0<=iLoc<b && tLoc==0};
let
	temp_bl_loc[iLoc,tLoc] = case
		{| 2<=iLoc<b && tLoc==0}: (temp_bl_bottom[iLoc-2,b+tLoc-1] + temp_bl_bottom[iLoc-1,b+tLoc-1] + temp_bl_bottom[iLoc,b+tLoc-1]) * 0.333333;					// Case 9
		{| iLoc==1 && tLoc==0}: (temp_bl_left_bottom[b+iLoc-2,b+tLoc-1] + temp_bl_bottom[iLoc-1,b+tLoc-1] + temp_bl_bottom[iLoc,b+tLoc-1]) * 0.333333;				// Case 11
		{| iLoc==0 && tLoc==0}: (temp_bl_left_bottom[b+iLoc-2,b+tLoc-1] + temp_bl_left_bottom[b+iLoc-1,b+tLoc-1] + temp_bl_bottom[iLoc,b+tLoc-1]) * 0.333333;	// Case 12
	esac;
.

// *** TILE I: tBl==Tb && iBl==tBl+Nb
affine Jacobi1DTileI {Nb,Tb,Nl,Tl,b|Tl==0 && Nl==0 && Nb-1>=0 && b-3>=0 && Tb>=0 && Nb>=2}
input
	double temp_bl_left_bottom {iLoc,tLoc| b-2<=iLoc<=b-1 && tLoc==b-1};
	double temp_bl_bottom {iLoc,tLoc| 0<=iLoc<b-1 && tLoc==b-1};
output
	double temp_bl_loc {iLoc,tLoc| 0<=iLoc<b && tLoc==0};
let
	temp_bl_loc[iLoc,tLoc] = case
		{| iLoc==b-1 && tLoc==0}: temp_bl_bottom[iLoc-1,b+tLoc-1];						// Case 6
		{| 2<=iLoc<b-1 && tLoc==0}: (temp_bl_bottom[iLoc-2,b+tLoc-1] + temp_bl_bottom[iLoc-1,b+tLoc-1] + temp_bl_bottom[iLoc,b+tLoc-1]) * 0.333333;					// Case 9
		{| iLoc==1 && tLoc==0}: (temp_bl_left_bottom[b+iLoc-2,b+tLoc-1] + temp_bl_bottom[iLoc-1,b+tLoc-1] + temp_bl_bottom[iLoc,b+tLoc-1]) * 0.333333;				// Case 11
		{| iLoc==0 && tLoc==0}: (temp_bl_left_bottom[b+iLoc-2,b+tLoc-1] + temp_bl_left_bottom[b+iLoc-1,b+tLoc-1] + temp_bl_bottom[iLoc,b+tLoc-1]) * 0.333333;	// Case 12
	esac;
.

// *** TILE Omega: tBl==0 && 0<=iBl<Nb
affine Jacobi1DTileOmega {Nb,Tb,Nl,Tl,b|Tl==0 && Nl==0 && Nb-1>=0 && b-3>=0 && Tb==0}
input
	double A_bl_loc {iLoc|iLoc>=0 && -iLoc+b-1>=0};
output
	double temp_bl_loc {iLoc,tLoc| 0<=iLoc<b && tLoc==0};
let
	temp_bl_loc[iLoc,tLoc] = A_bl_loc[iLoc];	// Case 1
.

// *** TILE GI: tBl==Tb && iBl==0 && Nb==1
affine Jacobi1DTileGI{Nb,Tb,Nl,Tl,b|Tl==0 && Nl==0 && Nb-1>=0 && b-3>=0 && Nb==1 && Tb>0}
input
	double temp_bl_left_bottom {iLoc,tLoc| iLoc==b-1 && tLoc==b-1};
	double temp_bl_bottom {iLoc,tLoc| 0<=iLoc<b-1 && tLoc==b-1};
output
	double temp_bl_loc {iLoc,tLoc| 0<=iLoc<b && tLoc==0};
let
	temp_bl_loc[iLoc,tLoc] = case
		{| iLoc==0 && tLoc==0}:  temp_bl_left_bottom[b+iLoc-1,b+tLoc-1];		// Case 3
		{| iLoc==b-1 && tLoc==0}:  temp_bl_bottom[iLoc-1,b+tLoc-1];		// Case 6
		{| 2<=iLoc<b-1 && tLoc==0}: (temp_bl_bottom[iLoc-2,b+tLoc-1] + temp_bl_bottom[iLoc-1,b+tLoc-1] + temp_bl_bottom[iLoc,b+tLoc-1]) * 0.333333;	// Case 9
		{| iLoc==1 && tLoc==0}: (temp_bl_left_bottom[b+iLoc-2,b+tLoc-1] + temp_bl_bottom[iLoc-1,b+tLoc-1] + temp_bl_bottom[iLoc,b+tLoc-1]) * 0.333333;// Case 11
	esac;
.

// *** TILE CF: 0<iBl==tBl<Tb && Nb==1 && Tb>0
affine Jacobi1DTileCF {Nb,Tb,Nl,Tl,b|Tl==0 && Nl==0 && Nb-1>=0 && b-3>=0 && Tb>0 && Nb==1}
input
	double temp_bl_bottom_left {iLoc,tLoc | iLoc==tLoc==b-1};
	double temp_bl_bottom {iLoc,tLoc | 0<=iLoc<b-1 && tLoc==b-1};
output
	double temp_bl_loc {iLoc,tLoc| 0<=tLoc<=iLoc<b};
let
	temp_bl_loc[iLoc,tLoc] = case
		{| 0<iLoc==tLoc<b} : temp_bl_loc[iLoc-1,tLoc-1];		// Case 2
		{| iLoc==tLoc==0} : temp_bl_bottom_left[b-1,b-1];		// Case 3
		{|iLoc==b-1 && tLoc==0}: temp_bl_bottom[iLoc-1,b+tLoc-1];																						// Case 6
		{| 2<=iLoc<b-1 && tLoc==0} : (temp_bl_bottom[iLoc-2,b+tLoc-1] + temp_bl_bottom[iLoc-1,b+tLoc-1] + temp_bl_bottom[iLoc,b+tLoc-1]) * 0.333333;		// Case 9
		{| 1<=tLoc<iLoc<b} : (temp_bl_loc[iLoc-2,tLoc-1] + temp_bl_loc[iLoc-1,tLoc-1] + temp_bl_loc[iLoc,tLoc-1]) * 0.333333;							// Case 10
		{| iLoc==1 && tLoc==0} : (temp_bl_bottom_left[b+iLoc-2,b+tLoc-1] + temp_bl_bottom[iLoc-1,b+tLoc-1] + temp_bl_bottom[iLoc,b+tLoc-1]) * 0.333333;	// Case 11
	esac;
.



// *** MAIN SYSTEM
affine Jacobi1DGeneral {Nb,Tb,Nl,Tl,b|Tl==0 && Nl==0 && Nb-1>=0 && b-3>=0 && Tb>=0}
input
	double A_bl {iBl,iLoc|iBl>=0 && iLoc>=0 && -iLoc+b-1>=0 && -iBl+Nb-1>=0 && Nb-1>=0};
output
	double B_bl {iBl,iLoc|iBl>=0 && iLoc>=0 && -iLoc+b-1>=0 && -iBl+Nb-1>=0 && Nb-1>=0};
local
	double temp_bl {iBl,tBl,iLoc,tLoc|0<=tBl<Tb && tBl<iBl<tBl+Nb && 0<=(iLoc,tLoc)<b}
				|| {iBl,tBl,iLoc,tLoc|1<=Nb<=iBl==tBl+Nb<Nb+Tb && 0<=iLoc<tLoc<b}
				|| {iBl,tBl,iLoc,tLoc|tLoc==0 && tBl==Tb && -iBl+Nb+Tb-1>=0 && iBl-Tb>=0 && 0<=iLoc<b}
				|| {iBl,tBl,iLoc,tLoc|0<=iBl==tBl<Tb && 0<=tLoc<=iLoc<b};
	double temp_bl_A {iBl,tBl,iLoc,tLoc|iBl==tBl==0 && 0<=tLoc<=iLoc<b && Tb>0};
	double temp_bl_B {iBl,tBl,iLoc,tLoc|0<iBl<Nb && tBl==0 && 0<=(tLoc,iLoc)<b && Tb>0};
	double temp_bl_C {iBl,tBl,iLoc,tLoc|0<iBl==tBl<Tb && Nb>=2 && 0<=tLoc<=iLoc<b};
	double temp_bl_D {iBl,tBl,iLoc,tLoc|0<=tBl<Tb && tBl+Nb==iBl && 0<=iLoc<tLoc<b};
	double temp_bl_E {iBl,tBl,iLoc,tLoc|1<=tBl<Tb && tBl<iBl<tBl+Nb-1 && 0<=(tLoc,iLoc)<b};
	double temp_bl_F {iBl,tBl,iLoc,tLoc|1<=tBl<Tb && 1<iBl==tBl+Nb-1 && 0<=(tLoc,iLoc)<b && Nb>=2};
	double temp_bl_G {iBl,tBl,iLoc,tLoc|tBl==Tb>0 && iBl==tBl && Nb>=2 && 0<=iLoc<b && tLoc==0};
	double temp_bl_H {iBl,tBl,iLoc,tLoc|tBl==Tb>0 && tBl<iBl<tBl+Nb-1 && 0<=iLoc<b && tLoc==0};
	double temp_bl_I {iBl,tBl,iLoc,tLoc|tBl==Tb>0 && iBl==tBl+Nb-1 && 0<=iLoc<b && tLoc==0 && Nb>=2};
	double temp_bl_Omega {iBl,tBl,iLoc,tLoc|Tb==0 && 0<=iBl<Nb && tBl==0 && 0<=iLoc<b && tLoc==0};
	double temp_bl_GI {iBl,tBl,iLoc,tLoc|tBl==Tb && iBl==tBl && Nb==1 && Tb>0 && 0<=iLoc<b && tLoc==0};
	double temp_bl_CF {iBl,tBl,iLoc,tLoc|0<iBl==tBl<Tb && Nb==1 && Tb>0 && 0<=tLoc<=iLoc<b};
let
	temp_bl[iBl,tBl,iLoc,tLoc] = case
			{|iBl==tBl==0 && Tb>0}: temp_bl_A;
			{|0<iBl<Nb && tBl==0 && Tb>0}: temp_bl_B;
			{|0<iBl==tBl<Tb && Nb>=2}: temp_bl_C;
			{|0<=tBl<Tb && tBl+Nb==iBl} : temp_bl_D;
			{|1<=tBl<Tb && tBl<iBl<tBl+Nb-1} : temp_bl_E;
			{|1<=tBl<Tb && 1<iBl==tBl+Nb-1 && Nb>=2} : temp_bl_F;
			{|tBl==Tb>0 && iBl==tBl && Nb>=2} : temp_bl_G;
			{|tBl==Tb>0 && tBl<iBl<tBl+Nb-1} : temp_bl_H;
			{|tBl==Tb>0 && iBl==tBl+Nb-1 && Nb>=2} : temp_bl_I;
			{|Tb==0 && 0<=iBl<Nb && tBl==0} : temp_bl_Omega;
			{|tBl==Tb && iBl==tBl && Nb==1 && Tb>0} : temp_bl_GI;
			{|0<iBl==tBl<Tb && Nb==1 && Tb>0} : temp_bl_CF;
		esac;
	use {iBl,tBl|iBl==tBl==0 && Tb>0} Jacobi1DTileA[Nb,Tb,Nl,Tl,b] ((iBl,tBl,iLoc->iBl,iLoc)@A_bl) returns (temp_bl_A);
	use {iBl,tBl|0<iBl<Nb && tBl==0 && Tb>0} Jacobi1DTileB[Nb,Tb,Nl,Tl,b] ((iBl,tBl,iLoc->iBl,iLoc)@A_bl,
																	(iBl,tBl,iLoc,tLoc->iBl-1,tBl,iLoc,tLoc)@temp_bl) returns (temp_bl_B);
	use {iBl,tBl|0<iBl==tBl<Tb && Nb>1} Jacobi1DTileC[Nb,Tb,Nl,Tl,b] ((iBl,tBl,iLoc,tLoc->iBl-1,tBl-1,iLoc,tLoc)@temp_bl,
																(iBl,tBl,iLoc,tLoc->iBl,tBl-1,iLoc,tLoc)@temp_bl) returns (temp_bl_C);
	use {iBl,tBl|0<=tBl<Tb && tBl+Nb==iBl} Jacobi1DTileD[Nb,Tb,Nl,Tl,b] ((iBl,tBl,iLoc,tLoc->iBl-1,tBl,iLoc,tLoc)@temp_bl) returns (temp_bl_D);
	use {iBl,tBl|1<=tBl<Tb && tBl<iBl<tBl+Nb-1} Jacobi1DTileE[Nb,Tb,Nl,Tl,b] ((iBl,tBl,iLoc,tLoc->iBl-1,tBl,iLoc,tLoc)@temp_bl,
																			(iBl,tBl,iLoc,tLoc->iBl-1,tBl-1,iLoc,tLoc)@temp_bl,
																			(iBl,tBl,iLoc,tLoc->iBl,tBl-1,iLoc,tLoc)@temp_bl) returns (temp_bl_E);
	use {iBl,tBl|1<=tBl<Tb && 1<iBl==tBl+Nb-1 && Nb>=2} Jacobi1DTileF[Nb,Tb,Nl,Tl,b] ((iBl,tBl,iLoc,tLoc->iBl-1,tBl,iLoc,tLoc)@temp_bl,
																			(iBl,tBl,iLoc,tLoc->iBl-1,tBl-1,iLoc,tLoc)@temp_bl,
																			(iBl,tBl,iLoc,tLoc->iBl,tBl-1,iLoc,tLoc)@temp_bl) returns (temp_bl_F);
	use {iBl,tBl|tBl==Tb>0 && iBl==tBl && Nb>=2} Jacobi1DTileG[Nb,Tb,Nl,Tl,b] ((iBl,tBl,iLoc,tLoc->iBl-1,tBl-1,iLoc,tLoc)@temp_bl,
																			(iBl,tBl,iLoc,tLoc->iBl,tBl-1,iLoc,tLoc)@temp_bl) returns (temp_bl_G);
	use {iBl,tBl|tBl==Tb>0 && tBl<iBl<tBl+Nb-1} Jacobi1DTileH[Nb,Tb,Nl,Tl,b] ((iBl,tBl,iLoc,tLoc->iBl-1,tBl-1,iLoc,tLoc)@temp_bl,
																			(iBl,tBl,iLoc,tLoc->iBl,tBl-1,iLoc,tLoc)@temp_bl) returns (temp_bl_H);
	use {iBl,tBl|tBl==Tb>0 && iBl==tBl+Nb-1 && Nb>=2} Jacobi1DTileI[Nb,Tb,Nl,Tl,b] ((iBl,tBl,iLoc,tLoc->iBl-1,tBl-1,iLoc,tLoc)@temp_bl,
																			(iBl,tBl,iLoc,tLoc->iBl,tBl-1,iLoc,tLoc)@temp_bl) returns (temp_bl_I);
	use {iBl,tBl|Tb==0 && 0<=iBl<Nb && tBl==0} Jacobi1DTileOmega[Nb,Tb,Nl,Tl,b] ((iBl,tBl,iLoc->iBl,iLoc)@A_bl) returns (temp_bl_Omega);
	use {iBl,tBl|tBl==Tb && iBl==tBl && Nb==1 && Tb>0} Jacobi1DTileGI[Nb,Tb,Nl,Tl,b] ((iBl,tBl,iLoc,tLoc->iBl-1,tBl-1,iLoc,tLoc)@temp_bl,
																			(iBl,tBl,iLoc,tLoc->iBl,tBl-1,iLoc,tLoc)@temp_bl) returns (temp_bl_GI);
	use {iBl,tBl|0<iBl==tBl<Tb && Nb==1} Jacobi1DTileCF[Nb,Tb,Nl,Tl,b] ((iBl,tBl,iLoc,tLoc->iBl-1,tBl-1,iLoc,tLoc)@temp_bl,
																(iBl,tBl,iLoc,tLoc->iBl,tBl-1,iLoc,tLoc)@temp_bl) returns (temp_bl_CF);
	
	B_bl[iBl,iLoc] = temp_bl[Tb+iBl,Tb,Tl+iLoc,Tl];
.


/* OLD EQUATIONS
affine Jacobi1DTimeSkewed {Nb,Tb,Nl,Tl,b|Tl==0 && Nl==0 && Nb-1>=0 && b-3>=0 && Tb>=0}
input
	double A_bl {iBl,iLoc|iBl>=0 && iLoc>=0 && -iLoc+b-1>=0 && -iBl+Nb-1>=0 && Nb-1>=0};
output
	double B_bl {iBl,iLoc|iBl>=0 && iLoc>=0 && -iLoc+b-1>=0 && -iBl+Nb-1>=0 && Nb-1>=0};
local
	double temp_bl {iBl,tBl,iLoc,tLoc|0<=tBl<Tb && tBl<iBl<tBl+Nb && 0<=(iLoc,tLoc)<b}
				|| {iBl,tBl,iLoc,tLoc|1<=Nb<= iBl==tBl+Nb<Nb+Tb && 0<=iLoc<tLoc<b}
				|| {iBl,tBl,iLoc,tLoc|tLoc==0 && tBl==Tb && -iBl+Nb+Tb-1>=0 && iBl-Tb>=0 && 0<=iLoc<b}
				|| {iBl,tBl,iLoc,tLoc|0<=iBl==tBl<Tb && 0<=tLoc<=iLoc<b};
let
temp_bl[iBl,tBl,iLoc,tLoc] = case
	{|tLoc==0 && tBl==0 && iLoc>=0 && -iLoc+b-1>=0 && Nb-1>=0} : A_bl[iBl-tBl,iLoc-tLoc];															// CASE 1
	{|-iLoc+tLoc==0 && -iBl+tBl==0 && iLoc-1>=0 && -iLoc+b-1>=0 && iBl-1>=0 && Nb-1>=0}
		|| {|-iLoc+tLoc==0 && tBl==0 && iBl==0 && iLoc-1>=0 && -iLoc+b-1>=0 && Nb-1>=0} : temp_bl[iBl,tBl,iLoc-1,tLoc-1];							// CASE 2
	{|tLoc==0 && iLoc==0 && -iBl+tBl==0 && Nb-1>=0 && iBl-1>=0} : temp_bl[iBl-1,tBl-1,b+iLoc-1,b+tLoc-1];											// CASE 3
	{|tLoc-1==0 && iLoc==0 && -iBl+tBl+Nb==0 && Nb-1>=0 && iBl-Nb>=0} : temp_bl[iBl-1,tBl,b+iLoc-1,tLoc-1];											// CASE 4
	{|-iLoc+tLoc-1==0 && -iBl+tBl+Nb==0 && iLoc-1>=0 && -iLoc+b-2>=0 && iBl-Nb>=0 && Nb-1>=0} : temp_bl[iBl,tBl,iLoc-1,tLoc-1];						// CASE 5
	{|tLoc==0 && iLoc-b+1==0 && -iBl+tBl+Nb-1==0 && iBl-Nb>=0 && Nb-1>=0} : temp_bl[iBl,tBl-1,iLoc-1,b+tLoc-1];										// CASE 6
	{|0<=tBl<iBl && 2<=tBl+Nb && iLoc==1 && 1<=tLoc<b}
		|| {|tBl==0 && 1<=iBl && iLoc==1 && 1<=tLoc<b && Nb==1} :
				(temp_bl[iBl-1,tBl,b+iLoc-2,tLoc-1] + temp_bl[iBl,tBl,iLoc-1,tLoc-1] + temp_bl[iBl,tBl,iLoc,tLoc-1]) * 0.333333;					// CASE 7
	{|iLoc==0 && tLoc-1>=0 && tBl+Nb-2>=0 && -tLoc+b-1>=0 && iBl-tBl-1>=0 && Nb-1>=0 && tBl>=0}
		|| {|iLoc==0 && tBl==0 && Nb-1==0 && tLoc-1>=0 && iBl-1>=0 && -tLoc+b-1>=0} :
				(((temp_bl[iBl-1,tBl,b+iLoc-2,tLoc-1] + temp_bl[iBl-1,tBl,b+iLoc-1,tLoc-1]) + temp_bl[iBl,tBl,iLoc,tLoc-1]) * 0.333333);			// CASE 8
	{|tLoc==0 && -iLoc+b-1>=0 && tBl+Nb-2>=0 && iLoc-2>=0 && iBl-tBl-1>=0 && Nb-1>=0 && tBl-1>=0}
		|| {|tLoc==0 && -iBl+tBl==0 && iBl-1>=0 && Nb-1>=0 && iLoc-2>=0 && -iLoc+b-1>=0 && b-3>=0} :
				(((temp_bl[iBl,tBl-1,iLoc-2,b+tLoc-1] + temp_bl[iBl,tBl-1,iLoc-1,b+tLoc-1]) + temp_bl[iBl,tBl-1,iLoc,b+tLoc-1]) * 0.333333);		// CASE 9
	{|-iLoc+b-1>=0 && tLoc-1>=0 && tBl+Nb-2>=0 && iLoc-2>=0 && iBl-tBl-1>=0 && Nb-1>=0 && tBl>=0 && tBl+tLoc-1>=0 && -tLoc+b-1>=0}
		|| {|tBl==0 && iBl==0 && tLoc-1>=0 && iLoc-tLoc-1>=0 && Nb-1>=0 && -iLoc+b-1>=0 && iLoc-2>=0 && -tLoc+b-1>=0}
		|| {|tBl==0 && Nb-1==0 && tLoc-1>=0 && iLoc-2>=0 && -iLoc+b-1>=0 && -tLoc+b-1>=0 && iBl-1>=0}
		|| {|-iBl+tBl==0 && iBl-1>=0 && Nb-1>=0 && tLoc-1>=0 && -iLoc+b-1>=0 && iLoc-tLoc-1>=0 && iLoc-2>=0 && -tLoc+b-1>=0} :
				(((temp_bl[iBl,tBl,iLoc-2,tLoc-1] + temp_bl[iBl,tBl,iLoc-1,tLoc-1]) + temp_bl[iBl,tBl,iLoc,tLoc-1]) * 0.333333);					// CASE 10
	{|tLoc==0 && iLoc-1==0 && Nb-1>=0 && tBl+Nb-2>=0 && tBl-1>=0 && iBl-tBl-1>=0}
		|| {|tLoc==0 && iLoc-1==0 && -iBl+tBl==0 && iBl-1>=0 && Nb-1>=0 && b-3>=0} :
				(((temp_bl[iBl-1,tBl-1,b+iLoc-2,b+tLoc-1] + temp_bl[iBl,tBl-1,iLoc-1,b+tLoc-1]) + temp_bl[iBl,tBl-1,iLoc,b+tLoc-1]) * 0.333333);	// CASE 11
	{|tLoc==0 && iLoc==0 && Nb-1>=0 && tBl+Nb-2>=0 && tBl-1>=0 && iBl-tBl-1>=0} :
				(((temp_bl[iBl-1,tBl-1,b+iLoc-2,b+tLoc-1] + temp_bl[iBl-1,tBl-1,b+iLoc-1,b+tLoc-1]) + temp_bl[iBl,tBl-1,iLoc,b+tLoc-1]) * 0.333333);// CASE 12
	esac;
B_bl[iBl,iLoc] = {|iLoc>=0 && -iLoc+b-1>=0} : temp_bl[Tb+iBl,Tb,Tl+iLoc,Tl];
.
*/