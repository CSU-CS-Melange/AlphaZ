double sqrt(double);
affine cholesky_withReduce {N|N>2}
input
	double A {i,j| 0<=(i,j)<N};
output
	double L {i,j| 0<=j<=i<N};
local // No local variables
let
L[i,j] =
case
	{|i==0 && j==0} :sqrt(A[i,j]);
	{|i>0 && j==0} : A[i,j]/L[j,j];
	//{|i>0 && j>0} : L[j,i];
   	{|i==j} :sqrt(A[j,j] - reduce(+, [k], {|0<=k<j}: L[j,k]*L[j,k]));
    {|j<i && j>0} : (A[i,j]-reduce(+, [k], {|0<=k<j}: L[i,k]*L[j,k]))/L[j,j];
esac;
.
