affine SW2D { NX, NY | NX>1 && NY>1}
input
	double planeX0 {y|0<=y<NY};
	double planeY0 {x|0<=x<NX};
output
	double score {|};
local 
	double temp {x,y|0<=x<NX && 0<=y<NY};
let
	temp[x,y] = case
				{|x == 0} : planeX0[y];
				{|x>0 && y == 0} : planeY0[x];
				{|x > 0 && y > 0} : (temp[x-1,y]+temp[x,y-1])*0.5;	// Arbitrary function (mult in this case)
			esac;
	score[] = temp[NX-1,NY-1];
.
