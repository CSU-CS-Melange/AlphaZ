affine TilingWithReduction {N |N>0}
input
	int X {i, j | 0 <= i < N && 0 <= j < N};
output
	int Final {i | 0 <= i < N};
local	
	int RX {i,j | 0 <= i < N && 0 <= j < N};
let
	RX[i,j] = case
		{|j == 0}: X[i,j];
		{|j > 0}: RX[i, j - 1] + X[i,j];
		esac;
	//Final = reduce(+, (i,j->i),RX);
	Final = reduce(+, (i,j->i), RX);
.
