affine RestrictExpr {N | N > 1}
input
	int A {i | 0 <= i < 3N};
output
	int C {i | 0 <= i < N};
	int D {i, j| 0 <= i < N && 0 <= j < N};
let
	C[i] = {| 0 <= i < N}: ({|0 <= i < 2N}:A[i]);
	D[i,j] = (i, j -> j, i)@({|0 <= i < N}:A[i]);
.