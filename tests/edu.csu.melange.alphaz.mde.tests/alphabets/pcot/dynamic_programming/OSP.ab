affine OSP {N| N>0}
input
	int A {i | 0<=i<=N};
output
	int C  {i,j | 1<=i<=j<=N};
local // No local variables
let
   C[i,j] = case
	{| i==j}: 0;
//	{| i<j}: reduce(min, [k], {|k<j}: C[i,k]+ C[k+1,j] + A[i-1]*A[k]*A[j]);
	{| i<j}: reduce(min, [k], {|k<j}: C[i,k]+ C[k+1,j] + i*k*j); //TODO add &7
	esac;
.
