affine jacobi_1d {TSTEPS,N | TSTEPS > 2 && N > 5}
given
    double A {i|0<=i<N};
returns
    double B {t,i|0<=i<N && t==TSTEPS};
using
    double temp_B {t,i|0<=i<N && 0<=t<TSTEPS};
through

    temp_B[t,i] = case
                        {|t == 0} : A[i];
                        {|t > 0 && 1<=i<N-1}  : (temp_B[t-1,i-1] + temp_B[t-1,i] + temp_B[t-1,i+1])*0.33333;
                        {|t > 0 && 0==i } || {|t > 0 && i==N-1 } : temp_B[t-1,i]; 
                    esac;

    B[t,i] = temp_B[t-1,i];
.