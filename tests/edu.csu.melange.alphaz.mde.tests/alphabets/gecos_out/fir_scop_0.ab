affine fir_scop_0 {INF,N| INF-1>=0 && N-1>=0 }
	input
		float buff {i0| -i0+N-2>=0 && i0>=0 && INF-2>=0 } ;
		float coef {i0| -i0+N-1>=0 && i0>=0 && INF-2>=0 } ;
		float in {i0| i0-1>=0 && -i0+INF-1>=0 } ;
		float noise__buff_0 { | } ;
		float noise__in_0 { | } ;
	output
		float S5 {n| n-1>=0 && -n+INF-1>=0 } ;
	let
		S5[n] = case
			{ | N-1==0 } : reduce (+,(n,i->n),{n,i| i==0 } : (n,i->i) @ coef * (n,i->i) @ coef * (n,i->) @ noise__in_0) ;
			{ | n-1==0 && N-2>=0 } : reduce (+,(n,i->n),{n,i| i-1>=0 && -i+N-1>=0 } : (n,i->i) @ coef * (n,i->i) @ coef *
			(n,i->) @ noise__buff_0) + reduce (+,(n,i->n),{n,i| i==0 } : (n,i->i) @ coef * (n,i->i) @ coef * (n,i->) @
			noise__in_0) ;
			{ | n-N>=0 && N-2>=0 } : reduce (+,(n,i->n),{n,i| i-1>=0 && -i+N-1>=0 } : (n,i->i) @ coef * (n,i->i) @ coef *
			(n,i->) @ noise__in_0) + reduce (+,(n,i->n),{n,i| i==0 } : (n,i->i) @ coef * (n,i->i) @ coef * (n,i->) @
			noise__in_0) ;
			{ | n-2>=0 && -n+N-1>=0 } : reduce (+,(n,i->n),{n,i| n-i-1>=0 && i-1>=0 } : (n,i->i) @ coef * (n,i->i) @ coef *
			(n,i->) @ noise__in_0) + (reduce (+,(n,i->n),{n,i| -n+i>=0 && -i+N-1>=0 } : (n,i->i) @ coef * (n,i->i) @ coef *
			(n,i->) @ noise__buff_0) + reduce (+,(n,i->n),{n,i| i==0 } : (n,i->i) @ coef * (n,i->i) @ coef * (n,i->) @
			noise__in_0)) ;
		esac;
.