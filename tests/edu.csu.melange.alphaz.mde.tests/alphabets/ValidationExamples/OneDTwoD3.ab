affine OneDTwoD3 {N,TMAX | N>0 && TMAX>0}
input
    float A {i| 0<=i<=N};
output
    float B {t, i| 0<=i<=N && t==TMAX-1};
local
    float Local {t,i | 0<=i<=N && 0<=t<TMAX};
let
   Local =
     case
       {t,i|t==0}: (t,i->N+1)@ A;
     //  {|t==0}: (t,i->i)A;
       {t,i|t>0 && i==0}: (t,i -> t-1,i)@Local;
       {t,i|t>0 && i==N}: (t,i -> t-1,i)@Local;
       {t,i|t>0 && 0<i<N}: 0.5 * ((t,i -> t, i-1)@Local + (t,i -> t-1,i+1)@Local) + (t,i->N+1)@ A;
     esac;
   B[t,i] = Local[t,i];
.
