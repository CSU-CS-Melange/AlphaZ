float sqrt(float);
affine Cholesky {N| N>2} 
input
	float A {i,j | 0<=j<=i<N};
output
    float L {i,j | 0<=j<=i<N};
local
let
    L[i,j] = case
    	{|i==j==0}: sqrt(A);
    	{|i==j>0} : sqrt(A - reduce(+, [k], {|k<j} : L[i,k]*L[j,k])); 
    	{|i>j==0} : A / L[j,j];
    	{|i>j>0}  : (A - reduce(+, [k], {|k<j} : L[i,k]*L[j,k])) / L[j,j];
		esac;
.
