affine MotivatingExample {N|N-3>= 0}
input
int X {j,k|j>= 0 && k>= 0 && 2N-j>= 0 && 3N-k>= 0};
output
int Y {i|N-i>= 0 && i>= 0};
local
int Z {i,j|3i-j>= 0 && N-i>= 0 && -2i+j>= 0};
let
Y[i] = reduce(max, (i,x->i), Z);
Z[i,j] = case
{|2i-j+1>= 0} || {|-N+i== 0 && -2N+j-2>= 0} : reduce(max, (i,j,k->i,j+k), {|-i+j== 0} || {|-i+k== 0 && -i+j-1>= 0} || {|-N+i== 0 && -N+k-1>= 0 && -N+j-1>= 0} : X[j,k]);
{|N-i-1>= 0 && -2i+j-2>= 0} : (reduce(max, (i,j,k->i,j+k), {|-i+j== 0} || {|-i+k== 0} : X[j,k]) max Z[i+1,j]);
esac;
.
