affine FinalExample {N|N-1>= 0}
input
int A {i,x|N-i-1>= 0 && x>= 0 && i>= 0 && 2N-x-1>= 0};
int B {k,j|N-k-1>= 0 && j>= 0 && N-j-1>= 0 && k>= 0};
output
int Y {i|N-i-1>= 0 && i>= 0};
local
int Z {i,j|N-i-1>= 0 && j>= 0 && 2i-j>= 0};
let
Y[i] = reduce(+, (i,x->i), (Z * A));
Z[i,j] = case
{|-2i+j+1>= 0} : reduce(+, (i,j,k->i,j+k), {|-i+j== 0} || {|-i+k== 0 && -i+j+1== 0} : B[k,j]);
{|i-j-1>= 0} : Z[i-1,j];
{|2i-j-2>= 0 && -i+j>= 0} : (reduce(+, (i,j,k->i,j+k), {|-i+j== 0} || {|-i+k== 0} : B[k,j]) + Z[i-1,j]);
esac;
.
