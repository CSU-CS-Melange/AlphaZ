package fr.irisa.cairn.jnimap.cloog.jni;

import java.util.AbstractMap;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;

import fr.irisa.cairn.jnimap.runtime.JNIObject;


/*** PROTECTED REGION ID(ClastBinary_userImport) ENABLED START ***/
	/*
		Put you custom import here ....
	*/
/*** PROTECTED REGION END ***/

/**
 *  Automatically generated by jnimap 
 * @generated
 */
public class JNIClastBinary extends JNIClastExpr {
	
	
	/* @generated */
	protected JNIClastBinary(long ptr) {
		/*** PROTECTED REGION ID(ClastBinary_Constructor) DISABLED START ***/
		super(ptr);
		/*** PROTECTED REGION END ***/
	}
	
	
		public Object accept(IClastExprVisitor visitor, Object arg) {
			return visitor.visitJNIClastBinary(this, arg);
		}
	
	
	/*** PROTECTED REGION ID(ClastBinary_userCode) ENABLED START ***/
	/*** PROTECTED REGION END ***/

	/*************************************** 
	 *	     Struct Field Accessors        * 
	 ***************************************/
	/*************************************************************
	 *	type : JNIClastBinType
	 *************************************************************/
	public JNIClastBinType getType() {
		return JNIClastBinType.getFromInt(CloogNative.clast_binary_get_type(getNativePtr(this)));
	}
	/*************************************************************
	 *	type : JNIClastBinType
	 *************************************************************/
	public void setType(JNIClastBinType object) {
		CloogNative.clast_binary_set_type(getNativePtr(this), object.getValue());
	}
	/*************************************************************
	 * Test if Ttype is NULL
	 *************************************************************/
	public boolean testType() {
		return CloogNative.clast_binary_test_type(getNativePtr(this)) != 0;
	}
	/*************************************************************
	 *	LHS : JNIClastExpr
	 *************************************************************/
	public JNIClastExpr getLHS() {
		return JNIClastExpr.build(CloogNative.clast_binary_get_LHS(getNativePtr(this)));
	}
	/*************************************************************
	 *	LHS : JNIClastExpr
	 *************************************************************/
	public void setLHS(JNIClastExpr object) {
		CloogNative.clast_binary_set_LHS(getNativePtr(this), getNativePtr(object));
	}
	/*************************************************************
	 * Test if TLHS is NULL
	 *************************************************************/
	public boolean testLHS() {
		return CloogNative.clast_binary_test_LHS(getNativePtr(this)) != 0;
	}

	
	/*************************************** 
	 *	         Static Methods            * 
	 ***************************************/
	
	/*************************************** 
	 *	         Member Methods            * 
	 ***************************************/
	/**
	 * clast_binary_get_value 
	 * 
	 * @generated
	**/
	public int getRHS() {
		/*** PROTECTED REGION ID(clast_binary_get_value) DISABLED START ***/
		int res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = CloogNative.clast_binary_get_value(getNativePtr(this));
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	
	public String toString() {
		/*** PROTECTED REGION ID(ClastBinary_toString) DISABLED START ***/
			return CloogPrettyPrinter.asString(this);
		/*** PROTECTED REGION END ***/
	}
}
