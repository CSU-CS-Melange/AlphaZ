package fr.irisa.cairn.jnimap.cloog.jni;

import java.util.AbstractMap;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;

import fr.irisa.cairn.jnimap.runtime.JNIObject;


/*** PROTECTED REGION ID(ClastExpr_userImport) ENABLED START ***/
	/*
		Put you custom import here ....
	*/
/*** PROTECTED REGION END ***/

/**
 *  Automatically generated by jnimap 
 * @generated
 */
public class JNIClastExpr extends JNIObject {
	
	
	/* @generated */
	protected JNIClastExpr(long ptr) {
		/*** PROTECTED REGION ID(ClastExpr_Constructor) DISABLED START ***/
		super(ptr);
		/*** PROTECTED REGION END ***/
	}
	
	
	/* @generated */
	static JNIClastExpr build(long ptr) {
		if (isJNIClastBinary(ptr)) {
			return new JNIClastBinary(ptr);
		} else 
		if (isJNIClastName(ptr)) {
			return new JNIClastName(ptr);
		} else 
		if (isJNIClastReduction(ptr)) {
			return new JNIClastReduction(ptr);
		} else 
		if (isJNIClastTerm(ptr)) {
			return new JNIClastTerm(ptr);
		} else 
		{
			return new JNIClastExpr(ptr);
		}
	}
	
	/* @generated */
	private static boolean isJNIClastBinary(long ptr) {
		if (CloogNative.is_clast_expr_binary(ptr) != 0) {
			return true;
		} else {
			return false;
		}
	}
	
	/* @generated */
	public boolean isJNIClastBinary() {
		return isJNIClastBinary(getNativePtr(this));
	}
	
	/* @generated */
	private static boolean isJNIClastName(long ptr) {
		if (CloogNative.is_clast_expr_name(ptr) != 0) {
			return true;
		} else {
			return false;
		}
	}
	
	/* @generated */
	public boolean isJNIClastName() {
		return isJNIClastName(getNativePtr(this));
	}
	
	/* @generated */
	private static boolean isJNIClastReduction(long ptr) {
		if (CloogNative.is_clast_expr_reduction(ptr) != 0) {
			return true;
		} else {
			return false;
		}
	}
	
	/* @generated */
	public boolean isJNIClastReduction() {
		return isJNIClastReduction(getNativePtr(this));
	}
	
	/* @generated */
	private static boolean isJNIClastTerm(long ptr) {
		if (CloogNative.is_clast_expr_term(ptr) != 0) {
			return true;
		} else {
			return false;
		}
	}
	
	/* @generated */
	public boolean isJNIClastTerm() {
		return isJNIClastTerm(getNativePtr(this));
	}
	
	
	public Object accept(IClastExprVisitor visitor, Object arg) {
		return visitor.visitJNIClastExpr(this, arg);
	}
	
	
	/*** PROTECTED REGION ID(ClastExpr_userCode) ENABLED START ***/
	/*** PROTECTED REGION END ***/

	/*************************************** 
	 *	     Struct Field Accessors        * 
	 ***************************************/

	
	/*************************************** 
	 *	         Static Methods            * 
	 ***************************************/
	
	/*************************************** 
	 *	         Member Methods            * 
	 ***************************************/
	
	public String toString() {
		/*** PROTECTED REGION ID(ClastExpr_toString) DISABLED START ***/
			return CloogPrettyPrinter.asString(this);
		/*** PROTECTED REGION END ***/
	}
}
