package fr.irisa.cairn.jnimap.cloog.jni;

import java.util.AbstractMap;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;

import fr.irisa.cairn.jnimap.runtime.JNIObject;


/*** PROTECTED REGION ID(ClastUserStmt_userImport) ENABLED START ***/
	/*
		Put you custom import here ....
	*/
/*** PROTECTED REGION END ***/

/**
 *  Automatically generated by jnimap 
 * @generated
 */
public class JNIClastUserStmt extends JNIClastStmt {
	
	
	/* @generated */
	protected JNIClastUserStmt(long ptr) {
		/*** PROTECTED REGION ID(ClastUserStmt_Constructor) DISABLED START ***/
		super(ptr);
		/*** PROTECTED REGION END ***/
	}
	
	
		public Object accept(IClastStmtVisitor visitor, Object arg) {
			return visitor.visitJNIClastUserStmt(this, arg);
		}
	
	
	/*** PROTECTED REGION ID(ClastUserStmt_userCode) ENABLED START ***/
	/*** PROTECTED REGION END ***/

	/*************************************** 
	 *	     Struct Field Accessors        * 
	 ***************************************/
	/*************************************************************
	 *	statement : JNICloogStatement
	 *************************************************************/
	public JNICloogStatement getStatement() {
		return JNICloogStatement.build(CloogNative.clast_user_stmt_get_statement(getNativePtr(this)));
	}
	/*************************************************************
	 *	statement : JNICloogStatement
	 *************************************************************/
	public void setStatement(JNICloogStatement object) {
		CloogNative.clast_user_stmt_set_statement(getNativePtr(this), getNativePtr(object));
	}
	/*************************************************************
	 * Test if Tstatement is NULL
	 *************************************************************/
	public boolean testStatement() {
		return CloogNative.clast_user_stmt_test_statement(getNativePtr(this)) != 0;
	}
	/*************************************************************
	 *	substitutions : JNIClastStmt
	 *************************************************************/
	public JNIClastStmt getSubstitutions() {
		return JNIClastStmt.build(CloogNative.clast_user_stmt_get_substitutions(getNativePtr(this)));
	}
	/*************************************************************
	 *	substitutions : JNIClastStmt
	 *************************************************************/
	public void setSubstitutions(JNIClastStmt object) {
		CloogNative.clast_user_stmt_set_substitutions(getNativePtr(this), getNativePtr(object));
	}
	/*************************************************************
	 * Test if Tsubstitutions is NULL
	 *************************************************************/
	public boolean testSubstitutions() {
		return CloogNative.clast_user_stmt_test_substitutions(getNativePtr(this)) != 0;
	}

	
	/*************************************** 
	 *	         Static Methods            * 
	 ***************************************/
	
	/*************************************** 
	 *	         Member Methods            * 
	 ***************************************/
	/**
	 * clast_user_stmt_get_cloog_domain 
	 * 
	 * @generated
	**/
	public String getCloogDomain() {
		/*** PROTECTED REGION ID(clast_user_stmt_get_cloog_domain) DISABLED START ***/
		String res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = CloogNative.clast_user_stmt_get_cloog_domain(getNativePtr(this));
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	
	public String toString() {
		/*** PROTECTED REGION ID(ClastUserStmt_toString) DISABLED START ***/
			return CloogPrettyPrinter.asString(this);
		/*** PROTECTED REGION END ***/
	}
}
