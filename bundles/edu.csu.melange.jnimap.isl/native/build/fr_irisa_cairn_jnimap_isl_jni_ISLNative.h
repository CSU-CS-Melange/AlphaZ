/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class fr_irisa_cairn_jnimap_isl_jni_ISLNative */

#ifndef _Included_fr_irisa_cairn_jnimap_isl_jni_ISLNative
#define _Included_fr_irisa_cairn_jnimap_isl_jni_ISLNative
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    derefPointer
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_derefPointer
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ctx_options
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ctx_1options
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ctx_alloc
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ctx_1alloc
  (JNIEnv *, jclass);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ctx_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ctx_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    record_stdout_start
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_record_1stdout_1start
  (JNIEnv *, jclass);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    record_stdout_end
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_record_1stdout_1end
  (JNIEnv *, jclass);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    record_stderr_start
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_record_1stderr_1start
  (JNIEnv *, jclass);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    record_stderr_end
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_record_1stderr_1end
  (JNIEnv *, jclass);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_zero
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1zero
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_int_from_si
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1int_1from_1si
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_read_from_str
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1read_1from_1str
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_copy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1copy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_set_si
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1set_1si
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_get_num_si
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1get_1num_1si
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_get_den_si
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1get_1den_1si
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_get_d
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1get_1d
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_sgn
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1sgn
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_is_zero
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1is_1zero
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_is_one
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1is_1one
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_is_negone
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1is_1negone
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_is_nonneg
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1is_1nonneg
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_is_nonpos
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1is_1nonpos
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_is_pos
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1is_1pos
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_is_neg
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1is_1neg
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_is_int
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1is_1int
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_is_rat
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1is_1rat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_is_nan
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1is_1nan
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_is_infty
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1is_1infty
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_is_neginfty
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1is_1neginfty
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_lt
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1lt
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_le
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1le
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_gt
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1gt
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_ge
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1ge
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_eq
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1eq
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_ne
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1ne
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_is_divisible_by
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1is_1divisible_1by
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_cmp_si
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1cmp_1si
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_abs
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1abs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_neg
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1neg
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_floor
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1floor
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_ceil
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1ceil
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_trunc
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1trunc
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_min
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1min
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_max
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1max
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_add
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1add
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_sub
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1sub
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_mul
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1mul
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_div
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1div
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_mod
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1mod
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_gcd
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1gcd
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_to_string
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1to_1string
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_val_from_val_list
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1val_1from_1val_1list
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_val_zero
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1val_1zero
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_val_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1val_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_val_get_space
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1val_1get_1space
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_val_copy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1val_1copy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_val_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1val_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_val_dim
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1val_1dim
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_val_get_val
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1val_1get_1val
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_val_set_val
 * Signature: (JIJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1val_1set_1val
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_val_set_dim_name
 * Signature: (JIILjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1val_1set_1dim_1name
  (JNIEnv *, jclass, jlong, jint, jint, jstring);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_val_get_tuple_name
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1val_1get_1tuple_1name
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_val_set_tuple_name
 * Signature: (JILjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1val_1set_1tuple_1name
  (JNIEnv *, jclass, jlong, jint, jstring);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_val_has_tuple_id
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1val_1has_1tuple_1id
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_val_range_is_wrapping
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1val_1range_1is_1wrapping
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_val_insert_dims
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1val_1insert_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_val_add_dims
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1val_1add_1dims
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_val_drop_dims
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1val_1drop_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_val_align_params
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1val_1align_1params
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_val_from_range
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1val_1from_1range
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_val_range_splice
 * Signature: (JIJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1val_1range_1splice
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_val_range_product
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1val_1range_1product
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_val_range_factor_domain
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1val_1range_1factor_1domain
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_val_range_factor_range
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1val_1range_1factor_1range
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_val_product
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1val_1product
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_val_add_val
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1val_1add_1val
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_val_mod_val
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1val_1mod_1val
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_val_scale_val
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1val_1scale_1val
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_val_scale_multi_val
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1val_1scale_1multi_1val
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_val_scale_down_multi_val
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1val_1scale_1down_1multi_1val
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_val_to_string
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1val_1to_1string
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_id_alloc
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1id_1alloc
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_id_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1id_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_id_get_name
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1id_1get_1name
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_id_get_user
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1id_1get_1user
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_id_copy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1id_1copy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_id_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1id_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_id_to_string
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1id_1to_1string
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_alloc
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1alloc
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_params_alloc
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1params_1alloc
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_set_alloc
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1set_1alloc
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_copy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1copy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_dim
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1dim
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_is_params
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1is_1params
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_is_set
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1is_1set
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_is_map
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1is_1map
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_is_equal
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1is_1equal
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_is_domain
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1is_1domain
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_is_range
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1is_1range
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_set_dim_name
 * Signature: (JIILjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1set_1dim_1name
  (JNIEnv *, jclass, jlong, jint, jint, jstring);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_get_dim_name
 * Signature: (JII)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1get_1dim_1name
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_has_dim_name
 * Signature: (JII)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1has_1dim_1name
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_find_dim_by_name
 * Signature: (JILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1find_1dim_1by_1name
  (JNIEnv *, jclass, jlong, jint, jstring);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_set_tuple_name
 * Signature: (JILjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1set_1tuple_1name
  (JNIEnv *, jclass, jlong, jint, jstring);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_get_tuple_name
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1get_1tuple_1name
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_has_tuple_name
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1has_1tuple_1name
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_is_wrapping
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1is_1wrapping
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_domain_is_wrapping
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1domain_1is_1wrapping
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_range_is_wrapping
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1range_1is_1wrapping
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_domain
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1domain
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_from_domain
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1from_1domain
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_range
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1range
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_from_range
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1from_1range
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_domain_map
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1domain_1map
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_range_map
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1range_1map
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_params
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1params
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_set_from_params
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1set_1from_1params
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_reverse
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1reverse
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_join
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1join
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_align_params
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1align_1params
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_insert_dims
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1insert_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_add_dims
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1add_1dims
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_drop_dims
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1drop_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_move_dims
 * Signature: (JIIIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1move_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_map_from_set
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1map_1from_1set
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_map_from_domain_and_range
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1map_1from_1domain_1and_1range
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_wrap
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1wrap
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_unwrap
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1unwrap
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_space_product
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1space_1product
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_lex_lt
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1lex_1lt
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_lex_le
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1lex_1le
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_lex_gt
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1lex_1gt
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_lex_ge
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1lex_1ge
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_lex_lt_first
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1lex_1lt_1first
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_lex_le_first
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1lex_1le_1first
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_lex_gt_first
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1lex_1gt_1first
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_lex_ge_first
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1lex_1ge_1first
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_local_space_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1local_1space_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_local_space_get_space
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1local_1space_1get_1space
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_local_space_copy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1local_1space_1copy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_local_space_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1local_1space_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_local_space_is_set
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1local_1space_1is_1set
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_local_space_dim
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1local_1space_1dim
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_local_space_has_dim_name
 * Signature: (JII)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1local_1space_1has_1dim_1name
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_local_space_get_dim_name
 * Signature: (JII)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1local_1space_1get_1dim_1name
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_local_space_set_dim_name
 * Signature: (JIILjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1local_1space_1set_1dim_1name
  (JNIEnv *, jclass, jlong, jint, jint, jstring);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_local_space_get_div
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1local_1space_1get_1div
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_local_space_is_equal
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1local_1space_1is_1equal
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_local_space_domain
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1local_1space_1domain
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_local_space_range
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1local_1space_1range
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_local_space_from_domain
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1local_1space_1from_1domain
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_local_space_flatten_domain
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1local_1space_1flatten_1domain
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_local_space_flatten_range
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1local_1space_1flatten_1range
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_local_space_lifting
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1local_1space_1lifting
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_local_space_add_dims
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1local_1space_1add_1dims
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_local_space_insert_dims
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1local_1space_1insert_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_local_space_drop_dims
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1local_1space_1drop_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_local_space_intersect
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1local_1space_1intersect
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_local_space_from_space
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1local_1space_1from_1space
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_options_new_with_defaults
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1options_1new_1with_1defaults
  (JNIEnv *, jclass);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_options_get_coalesce_bounded_wrapping
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1options_1get_1coalesce_1bounded_1wrapping
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_options_set_coalesce_bounded_wrapping
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1options_1set_1coalesce_1bounded_1wrapping
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_read_from_str
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1read_1from_1str
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_from_set
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1from_1set
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_from_params
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1from_1params
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_from_set
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1from_1set
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_list_from_set
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1list_1from_1set
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_empty
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1empty
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_universe
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1universe
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_nat_universe
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1nat_1universe
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_get_space
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1get_1space
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_copy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1copy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_add_constraint
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1add_1constraint
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_n_basic_set
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1n_1basic_1set
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_make_disjoint
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1make_1disjoint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_compute_divs
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1compute_1divs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_remove_divs
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1remove_1divs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_remove_unknown_divs
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1remove_1unknown_1divs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_remove_divs_involving_dims
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1remove_1divs_1involving_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_dim
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1dim
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_get_tuple_name
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1get_1tuple_1name
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_set_tuple_name
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1set_1tuple_1name
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_get_dim_name
 * Signature: (JII)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1get_1dim_1name
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_set_dim_name
 * Signature: (JIILjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1set_1dim_1name
  (JNIEnv *, jclass, jlong, jint, jint, jstring);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_has_tuple_name
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1has_1tuple_1name
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_has_dim_name
 * Signature: (JII)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1has_1dim_1name
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_find_dim_by_name
 * Signature: (JILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1find_1dim_1by_1name
  (JNIEnv *, jclass, jlong, jint, jstring);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_involves_dims
 * Signature: (JIII)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1involves_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_get_tuple_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1get_1tuple_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_get_dim_id
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1get_1dim_1id
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_has_tuple_id
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1has_1tuple_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_has_dim_id
 * Signature: (JII)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1has_1dim_1id
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_set_tuple_id
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1set_1tuple_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_set_dim_id
 * Signature: (JIIJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1set_1dim_1id
  (JNIEnv *, jclass, jlong, jint, jint, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_find_dim_by_id
 * Signature: (JIJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1find_1dim_1by_1id
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_reset_tuple_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1reset_1tuple_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_dim_has_upper_bound
 * Signature: (JII)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1dim_1has_1upper_1bound
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_dim_has_lower_bound
 * Signature: (JII)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1dim_1has_1lower_1bound
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_dim_has_any_upper_bound
 * Signature: (JII)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1dim_1has_1any_1upper_1bound
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_dim_has_any_lower_bound
 * Signature: (JII)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1dim_1has_1any_1lower_1bound
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_plain_is_empty
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1plain_1is_1empty
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_is_empty
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1is_1empty
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_plain_is_universe
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1plain_1is_1universe
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_is_singleton
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1is_1singleton
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_is_params
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1is_1params
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_is_wrapping
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1is_1wrapping
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_sample_point
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1sample_1point
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_plain_is_equal
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1plain_1is_1equal
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_is_equal
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1is_1equal
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_plain_is_disjoint
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1plain_1is_1disjoint
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_is_disjoint
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1is_1disjoint
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_is_subset
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1is_1subset
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_is_strict_subset
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1is_1strict_1subset
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_params
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1params
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_complement
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1complement
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_project_out
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1project_1out
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_eliminate
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1eliminate
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_fix_si
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1fix_1si
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_fix_val
 * Signature: (JIIJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1fix_1val
  (JNIEnv *, jclass, jlong, jint, jint, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_lower_bound_si
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1lower_1bound_1si
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_lower_bound_val
 * Signature: (JIIJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1lower_1bound_1val
  (JNIEnv *, jclass, jlong, jint, jint, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_upper_bound_si
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1upper_1bound_1si
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_upper_bound_val
 * Signature: (JIIJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1upper_1bound_1val
  (JNIEnv *, jclass, jlong, jint, jint, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_equate
 * Signature: (JIIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1equate
  (JNIEnv *, jclass, jlong, jint, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_identity
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1identity
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_coalesce
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1coalesce
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_detect_equalities
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1detect_1equalities
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_remove_redundancies
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1remove_1redundancies
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_convex_hull
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1convex_1hull
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_affine_hull
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1affine_1hull
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_polyhedral_hull
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1polyhedral_1hull
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_simple_hull
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1simple_1hull
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_unshifted_simple_hull
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1unshifted_1simple_1hull
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_drop_constraints_involving_dims
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1drop_1constraints_1involving_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_sample
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1sample
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_unwrap
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1unwrap
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_flatten
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1flatten
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_flatten_map
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1flatten_1map
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_lift
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1lift
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_align_params
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1align_1params
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_add_dims
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1add_1dims
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_insert_dims
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1insert_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_move_dims
 * Signature: (JIIIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1move_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_intersect_params
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1intersect_1params
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_intersect
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1intersect
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_union
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1union
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_subtract
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1subtract
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_apply
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1apply
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_preimage_multi_aff
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1preimage_1multi_1aff
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_preimage_pw_multi_aff
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1preimage_1pw_1multi_1aff
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_preimage_multi_pw_aff
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1preimage_1multi_1pw_1aff
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_product
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1product
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_flat_product
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1flat_1product
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_gist
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1gist
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_gist_params
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1gist_1params
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_partial_lexmin
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1partial_1lexmin
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_partial_lexmax
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1partial_1lexmax
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_lexmin
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1lexmin
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_lexmax
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1lexmax
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_lexmin_pw_multi_aff
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1lexmin_1pw_1multi_1aff
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_lexmax_pw_multi_aff
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1lexmax_1pw_1multi_1aff
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_n_dim
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1n_1dim
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_n_param
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1n_1param
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_get_basic_set_at
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1get_1basic_1set_1at
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_numberof_points
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1numberof_1points
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_get_point_at
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1get_1point_1at
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_to_string
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1to_1string
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    lex_next
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_lex_1next
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    lex_next_power
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_lex_1next_1power
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    lex_pred
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_lex_1pred
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    lex_pred_power
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_lex_1pred_1power
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    clear_tuple_name
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_clear_1tuple_1name
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_read_from_str
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1read_1from_1str
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_from_basic_set
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1from_1basic_1set
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_from_basic_set
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1from_1basic_1set
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_from_params
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1from_1params
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_list_from_basic_set
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1list_1from_1basic_1set
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_empty
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1empty
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_universe
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1universe
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_nat_universe
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1nat_1universe
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_get_space
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1get_1space
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_get_local_space
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1get_1local_1space
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_copy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1copy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_add_constraint
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1add_1constraint
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_n_constraint
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1n_1constraint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_dim
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1dim
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_set_dim_name
 * Signature: (JIILjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1set_1dim_1name
  (JNIEnv *, jclass, jlong, jint, jint, jstring);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_set_tuple_id
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1set_1tuple_1id
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_set_tuple_name
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1set_1tuple_1name
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_involves_dims
 * Signature: (JIII)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1involves_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_get_dim_id
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1get_1dim_1id
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_get_dim_name
 * Signature: (JII)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1get_1dim_1name
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_get_tuple_name
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1get_1tuple_1name
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_remove_divs
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1remove_1divs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_remove_unknown_divs
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1remove_1unknown_1divs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_remove_divs_involving_dims
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1remove_1divs_1involving_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_from_constraint_matrices
 * Signature: (JJJIIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1from_1constraint_1matrices
  (JNIEnv *, jclass, jlong, jlong, jlong, jint, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_equalities_matrix
 * Signature: (JIIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1equalities_1matrix
  (JNIEnv *, jclass, jlong, jint, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_inequalities_matrix
 * Signature: (JIIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1inequalities_1matrix
  (JNIEnv *, jclass, jlong, jint, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_plain_is_empty
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1plain_1is_1empty
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_is_empty
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1is_1empty
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_is_universe
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1is_1universe
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_is_wrapping
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1is_1wrapping
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_sample_point
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1sample_1point
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_plain_is_equal
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1plain_1is_1equal
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_is_equal
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1is_1equal
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_is_disjoint
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1is_1disjoint
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_is_subset
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1is_1subset
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_params
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1params
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_project_out
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1project_1out
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_eliminate
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1eliminate
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_fix_si
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1fix_1si
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_fix_val
 * Signature: (JIIJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1fix_1val
  (JNIEnv *, jclass, jlong, jint, jint, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_detect_equalities
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1detect_1equalities
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_remove_redundancies
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1remove_1redundancies
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_affine_hull
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1affine_1hull
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_coefficients
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1coefficients
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_drop_constraints_involving_dims
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1drop_1constraints_1involving_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_drop_constraints_not_involving_dims
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1drop_1constraints_1not_1involving_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_sample
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1sample
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_unwrap
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1unwrap
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_flatten
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1flatten
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_lift
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1lift
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_align_params
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1align_1params
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_add_dims
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1add_1dims
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_insert_dims
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1insert_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_move_dims
 * Signature: (JIIIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1move_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_intersect_params
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1intersect_1params
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_intersect
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1intersect
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_union
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1union
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_apply
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1apply
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_preimage_multi_aff
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1preimage_1multi_1aff
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_flat_product
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1flat_1product
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_gist
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1gist
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_partial_lexmin
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1partial_1lexmin
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_partial_lexmax
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1partial_1lexmax
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_lexmin
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1lexmin
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_lexmax
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1lexmax
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_partial_lexmin_pw_multi_aff
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1partial_1lexmin_1pw_1multi_1aff
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_partial_lexmax_pw_multi_aff
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1partial_1lexmax_1pw_1multi_1aff
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_compute_vertices
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1compute_1vertices
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_to_string
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1to_1string
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_get_constraint_at
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1get_1constraint_1at
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_read_from_str
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1read_1from_1str
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_from_union_set
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1from_1union_1set
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_multi_aff_from_union_set
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1multi_1aff_1from_1union_1set
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_empty
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1empty
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_universe
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1universe
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_from_domain_and_range
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1from_1domain_1and_1range
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_get_space
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1get_1space
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_copy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1copy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_n_set
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1n_1set
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_compute_divs
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1compute_1divs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_extract_set
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1extract_1set
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_is_empty
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1is_1empty
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_is_params
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1is_1params
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_is_equal
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1is_1equal
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_is_disjoint
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1is_1disjoint
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_is_subset
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1is_1subset
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_is_strict_subset
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1is_1strict_1subset
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_project_out
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1project_1out
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_params
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1params
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_identity
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1identity
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_coalesce
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1coalesce
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_detect_equalities
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1detect_1equalities
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_remove_redundancies
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1remove_1redundancies
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_affine_hull
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1affine_1hull
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_polyhedral_hull
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1polyhedral_1hull
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_unwrap
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1unwrap
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_lift
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1lift
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_add_set
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1add_1set
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_intersect_params
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1intersect_1params
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_intersect
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1intersect
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_union
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1union
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_subtract
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1subtract
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_apply
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1apply
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_preimage_multi_aff
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1preimage_1multi_1aff
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_preimage_pw_multi_aff
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1preimage_1pw_1multi_1aff
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_preimage_union_pw_multi_aff
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1preimage_1union_1pw_1multi_1aff
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_product
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1product
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_gist
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1gist
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_gist_params
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1gist_1params
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_lexmin
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1lexmin
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_lexmax
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1lexmax
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_to_string
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1to_1string
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_set_get_set_at
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1set_1get_1set_1at
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_read_from_str
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1read_1from_1str
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_from_map
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1from_1map
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_from_map
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1from_1map
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_empty
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1empty
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_universe
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1universe
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_nat_universe
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1nat_1universe
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_identity
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1identity
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_get_space
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1get_1space
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_copy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1copy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_add_constraint
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1add_1constraint
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_make_disjoint
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1make_1disjoint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_compute_divs
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1compute_1divs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_remove_divs
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1remove_1divs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_remove_unknown_divs
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1remove_1unknown_1divs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_remove_divs_involving_dims
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1remove_1divs_1involving_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_dim
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1dim
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_get_tuple_name
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1get_1tuple_1name
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_set_tuple_name
 * Signature: (JILjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1set_1tuple_1name
  (JNIEnv *, jclass, jlong, jint, jstring);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_get_dim_name
 * Signature: (JII)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1get_1dim_1name
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_set_dim_name
 * Signature: (JIILjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1set_1dim_1name
  (JNIEnv *, jclass, jlong, jint, jint, jstring);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_has_tuple_name
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1has_1tuple_1name
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_has_dim_name
 * Signature: (JII)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1has_1dim_1name
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_find_dim_by_name
 * Signature: (JILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1find_1dim_1by_1name
  (JNIEnv *, jclass, jlong, jint, jstring);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_involves_dims
 * Signature: (JIII)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1involves_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_is_empty
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1is_1empty
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_is_bijective
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1is_1bijective
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_is_injective
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1is_1injective
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_is_single_valued
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1is_1single_1valued
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_domain_is_wrapping
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1domain_1is_1wrapping
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_range_is_wrapping
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1range_1is_1wrapping
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_can_curry
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1can_1curry
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_can_uncurry
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1can_1uncurry
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_can_zip
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1can_1zip
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_plain_is_empty
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1plain_1is_1empty
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_plain_is_injective
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1plain_1is_1injective
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_plain_is_single_valued
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1plain_1is_1single_1valued
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_is_equal
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1is_1equal
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_is_disjoint
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1is_1disjoint
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_is_subset
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1is_1subset
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_is_strict_subset
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1is_1strict_1subset
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_plain_is_equal
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1plain_1is_1equal
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_from_domain
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1from_1domain
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_from_range
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1from_1range
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_from_domain_and_range
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1from_1domain_1and_1range
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_params
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1params
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_complement
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1complement
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_reverse
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1reverse
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_project_out
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1project_1out
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_domain
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1domain
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_range
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1range
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_domain_map
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1domain_1map
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_range_map
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1range_1map
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_eliminate
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1eliminate
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_fix_si
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1fix_1si
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_fix_val
 * Signature: (JIIJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1fix_1val
  (JNIEnv *, jclass, jlong, jint, jint, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_lower_bound_si
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1lower_1bound_1si
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_upper_bound_si
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1upper_1bound_1si
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_equate
 * Signature: (JIIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1equate
  (JNIEnv *, jclass, jlong, jint, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_oppose
 * Signature: (JIIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1oppose
  (JNIEnv *, jclass, jlong, jint, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_order_ge
 * Signature: (JIIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1order_1ge
  (JNIEnv *, jclass, jlong, jint, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_order_gt
 * Signature: (JIIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1order_1gt
  (JNIEnv *, jclass, jlong, jint, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_order_le
 * Signature: (JIIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1order_1le
  (JNIEnv *, jclass, jlong, jint, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_order_lt
 * Signature: (JIIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1order_1lt
  (JNIEnv *, jclass, jlong, jint, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_deltas
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1deltas
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_deltas_map
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1deltas_1map
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_coalesce
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1coalesce
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_detect_equalities
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1detect_1equalities
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_remove_redundancies
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1remove_1redundancies
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_convex_hull
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1convex_1hull
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_affine_hull
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1affine_1hull
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_polyhedral_hull
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1polyhedral_1hull
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_simple_hull
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1simple_1hull
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_unshifted_simple_hull
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1unshifted_1simple_1hull
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_drop_constraints_involving_dims
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1drop_1constraints_1involving_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_sample
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1sample
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_fixed_power_val
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1fixed_1power_1val
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_power
 * Signature: (JLfr/irisa/cairn/jnimap/isl/jni/JNIPtrBoolean;)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1power
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_transitive_closure
 * Signature: (JLfr/irisa/cairn/jnimap/isl/jni/JNIPtrBoolean;)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1transitive_1closure
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_reaching_path_lengths
 * Signature: (JLfr/irisa/cairn/jnimap/isl/jni/JNIPtrBoolean;)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1reaching_1path_1lengths
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_wrap
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1wrap
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_flatten
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1flatten
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_flatten_domain
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1flatten_1domain
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_flatten_range
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1flatten_1range
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_zip
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1zip
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_curry
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1curry
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_uncurry
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1uncurry
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_align_params
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1align_1params
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_add_dims
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1add_1dims
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_insert_dims
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1insert_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_move_dims
 * Signature: (JIIIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1move_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_intersect_params
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1intersect_1params
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_intersect_domain
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1intersect_1domain
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_intersect_range
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1intersect_1range
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_intersect
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1intersect
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_union
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1union
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_subtract
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1subtract
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_subtract_domain
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1subtract_1domain
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_subtract_range
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1subtract_1range
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_apply_domain
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1apply_1domain
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_apply_range
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1apply_1range
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_preimage_domain_multi_aff
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1preimage_1domain_1multi_1aff
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_preimage_domain_pw_multi_aff
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1preimage_1domain_1pw_1multi_1aff
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_preimage_domain_multi_pw_aff
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1preimage_1domain_1multi_1pw_1aff
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_preimage_range_multi_aff
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1preimage_1range_1multi_1aff
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_preimage_range_pw_multi_aff
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1preimage_1range_1pw_1multi_1aff
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_product
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1product
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_domain_product
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1domain_1product
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_range_product
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1range_1product
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_flat_product
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1flat_1product
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_gist
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1gist
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_gist_params
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1gist_1params
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_gist_domain
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1gist_1domain
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_gist_range
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1gist_1range
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_partial_lexmin
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1partial_1lexmin
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_partial_lexmax
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1partial_1lexmax
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_lexmin
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1lexmin
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_lexmax
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1lexmax
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_lexmin_pw_multi_aff
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1lexmin_1pw_1multi_1aff
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_lexmax_pw_multi_aff
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1lexmax_1pw_1multi_1aff
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_get_basic_map_at
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1get_1basic_1map_1at
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_numberof_basic_map
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1numberof_1basic_1map
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_to_string
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1to_1string
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    clear_in_tuple_name
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_clear_1in_1tuple_1name
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    clear_out_tuple_name
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_clear_1out_1tuple_1name
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_read_from_str
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1read_1from_1str
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_from_basic_map
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1from_1basic_1map
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_from_basic_map
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1from_1basic_1map
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_empty
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1empty
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_universe
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1universe
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_nat_universe
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1nat_1universe
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_identity
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1identity
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_get_space
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1get_1space
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_copy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1copy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_add_constraint
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1add_1constraint
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_dim
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1dim
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_get_tuple_name
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1get_1tuple_1name
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_set_tuple_name
 * Signature: (JILjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1set_1tuple_1name
  (JNIEnv *, jclass, jlong, jint, jstring);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_get_dim_name
 * Signature: (JII)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1get_1dim_1name
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_set_dim_name
 * Signature: (JIILjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1set_1dim_1name
  (JNIEnv *, jclass, jlong, jint, jint, jstring);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_involves_dims
 * Signature: (JIII)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1involves_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_has_dim_id
 * Signature: (JII)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1has_1dim_1id
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_remove_divs
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1remove_1divs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_remove_divs_involving_dims
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1remove_1divs_1involving_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_from_constraint_matrices
 * Signature: (JJJIIIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1from_1constraint_1matrices
  (JNIEnv *, jclass, jlong, jlong, jlong, jint, jint, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_equalities_matrix
 * Signature: (JIIIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1equalities_1matrix
  (JNIEnv *, jclass, jlong, jint, jint, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_inequalities_matrix
 * Signature: (JIIIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1inequalities_1matrix
  (JNIEnv *, jclass, jlong, jint, jint, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_plain_is_empty
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1plain_1is_1empty
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_is_empty
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1is_1empty
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_is_universe
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1is_1universe
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_is_single_valued
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1is_1single_1valued
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_can_curry
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1can_1curry
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_can_uncurry
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1can_1uncurry
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_can_zip
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1can_1zip
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_is_equal
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1is_1equal
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_is_disjoint
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1is_1disjoint
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_is_subset
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1is_1subset
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_is_strict_subset
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1is_1strict_1subset
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_reverse
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1reverse
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_project_out
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1project_1out
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_domain
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1domain
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_range
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1range
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_domain_map
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1domain_1map
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_range_map
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1range_1map
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_eliminate
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1eliminate
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_fix_si
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1fix_1si
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_fix_val
 * Signature: (JIIJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1fix_1val
  (JNIEnv *, jclass, jlong, jint, jint, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_lower_bound_si
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1lower_1bound_1si
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_upper_bound_si
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1upper_1bound_1si
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_equate
 * Signature: (JIIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1equate
  (JNIEnv *, jclass, jlong, jint, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_order_ge
 * Signature: (JIIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1order_1ge
  (JNIEnv *, jclass, jlong, jint, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_order_gt
 * Signature: (JIIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1order_1gt
  (JNIEnv *, jclass, jlong, jint, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_deltas
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1deltas
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_deltas_map
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1deltas_1map
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_detect_equalities
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1detect_1equalities
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_remove_redundancies
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1remove_1redundancies
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_affine_hull
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1affine_1hull
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_drop_constraints_involving_dims
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1drop_1constraints_1involving_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_sample
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1sample
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_wrap
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1wrap
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_flatten
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1flatten
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_flatten_domain
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1flatten_1domain
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_flatten_range
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1flatten_1range
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_zip
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1zip
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_curry
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1curry
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_uncurry
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1uncurry
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_align_params
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1align_1params
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_insert_dims
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1insert_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_move_dims
 * Signature: (JIIIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1move_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_intersect_domain
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1intersect_1domain
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_intersect_range
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1intersect_1range
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_intersect
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1intersect
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_union
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1union
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_apply_domain
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1apply_1domain
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_apply_range
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1apply_1range
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_preimage_domain_multi_aff
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1preimage_1domain_1multi_1aff
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_preimage_range_multi_aff
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1preimage_1range_1multi_1aff
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_gist
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1gist
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_partial_lexmin
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1partial_1lexmin
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_partial_lexmax
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1partial_1lexmax
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_lexmin
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1lexmin
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_lexmax
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1lexmax
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_lexmin_pw_multi_aff
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1lexmin_1pw_1multi_1aff
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_partial_lexmin_pw_multi_aff
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1partial_1lexmin_1pw_1multi_1aff
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_partial_lexmax_pw_multi_aff
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1partial_1lexmax_1pw_1multi_1aff
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_numberof_constraint
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1numberof_1constraint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_get_constraint_at
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1get_1constraint_1at
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_to_string
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1to_1string
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_read_from_str
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1read_1from_1str
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_from_union_map
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1from_1union_1map
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_empty
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1empty
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_universe
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1universe
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_get_space
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1get_1space
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_copy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1copy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_n_map
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1n_1map
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_compute_divs
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1compute_1divs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_extract_map
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1extract_1map
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_dim
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1dim
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_is_empty
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1is_1empty
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_is_bijective
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1is_1bijective
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_is_injective
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1is_1injective
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_is_single_valued
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1is_1single_1valued
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_is_equal
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1is_1equal
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_is_subset
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1is_1subset
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_is_strict_subset
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1is_1strict_1subset
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_params
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1params
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_reverse
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1reverse
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_project_out
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1project_1out
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_domain
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1domain
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_range
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1range
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_domain_map
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1domain_1map
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_range_map
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1range_1map
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_deltas
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1deltas
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_deltas_map
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1deltas_1map
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_coalesce
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1coalesce
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_detect_equalities
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1detect_1equalities
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_affine_hull
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1affine_1hull
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_polyhedral_hull
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1polyhedral_1hull
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_simple_hull
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1simple_1hull
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_power
 * Signature: (JLfr/irisa/cairn/jnimap/isl/jni/JNIPtrBoolean;)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1power
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_fixed_power_val
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1fixed_1power_1val
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_transitive_closure
 * Signature: (JLfr/irisa/cairn/jnimap/isl/jni/JNIPtrBoolean;)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1transitive_1closure
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_wrap
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1wrap
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_zip
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1zip
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_curry
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1curry
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_uncurry
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1uncurry
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_add_map
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1add_1map
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_intersect_params
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1intersect_1params
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_intersect_domain
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1intersect_1domain
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_intersect_range
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1intersect_1range
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_intersect
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1intersect
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_union
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1union
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_subtract
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1subtract
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_subtract_domain
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1subtract_1domain
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_subtract_range
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1subtract_1range
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_apply_domain
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1apply_1domain
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_apply_range
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1apply_1range
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_preimage_domain_multi_aff
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1preimage_1domain_1multi_1aff
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_preimage_domain_pw_multi_aff
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1preimage_1domain_1pw_1multi_1aff
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_preimage_domain_union_pw_multi_aff
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1preimage_1domain_1union_1pw_1multi_1aff
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_preimage_range_multi_aff
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1preimage_1range_1multi_1aff
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_preimage_range_pw_multi_aff
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1preimage_1range_1pw_1multi_1aff
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_preimage_range_union_pw_multi_aff
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1preimage_1range_1union_1pw_1multi_1aff
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_gist
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1gist
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_gist_params
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1gist_1params
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_gist_domain
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1gist_1domain
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_gist_range
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1gist_1range
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_lexmin
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1lexmin
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_lexmax
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1lexmax
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_lex_lt_union_map
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1lex_1lt_1union_1map
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_lex_le_union_map
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1lex_1le_1union_1map
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_lex_gt_union_map
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1lex_1gt_1union_1map
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_lex_ge_union_map
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1lex_1ge_1union_1map
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_to_string
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1to_1string
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_get_map_at
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1get_1map_1at
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_from_constraint
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1from_1constraint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_from_constraint
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1from_1constraint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_equality_alloc
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1equality_1alloc
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_inequality_alloc
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1inequality_1alloc
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_constraint_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1constraint_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_constraint_get_space
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1constraint_1get_1space
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_constraint_get_local_space
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1constraint_1get_1local_1space
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_constraint_copy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1constraint_1copy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_constraint_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1constraint_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_constraint_set_constant_si
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1constraint_1set_1constant_1si
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_constraint_set_constant_val
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1constraint_1set_1constant_1val
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_constraint_set_coefficient_si
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1constraint_1set_1coefficient_1si
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_constraint_set_coefficient_val
 * Signature: (JIIJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1constraint_1set_1coefficient_1val
  (JNIEnv *, jclass, jlong, jint, jint, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_constraint_is_equal
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1constraint_1is_1equal
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_constraint_is_equality
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1constraint_1is_1equality
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_constraint_is_div_constraint
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1constraint_1is_1div_1constraint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_constraint_is_lower_bound
 * Signature: (JII)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1constraint_1is_1lower_1bound
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_constraint_is_upper_bound
 * Signature: (JII)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1constraint_1is_1upper_1bound
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_constraint_get_constant_val
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1constraint_1get_1constant_1val
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_constraint_get_coefficient_val
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1constraint_1get_1coefficient_1val
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_constraint_involves_dims
 * Signature: (JIII)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1constraint_1involves_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_constraint_get_div
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1constraint_1get_1div
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_constraint_get_dim_name
 * Signature: (JII)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1constraint_1get_1dim_1name
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_constraint_get_bound
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1constraint_1get_1bound
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_constraint_get_aff
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1constraint_1get_1aff
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_constraint_to_string
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1constraint_1to_1string
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_term_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1term_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_term_copy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1term_1copy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_term_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1term_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_term_dim
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1term_1dim
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_term_get_coefficient_val
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1term_1get_1coefficient_1val
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_term_get_exp
 * Signature: (JII)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1term_1get_1exp
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_term_get_div
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1term_1get_1div
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_from_qpolynomial
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1from_1qpolynomial
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_fold_alloc
 * Signature: (IJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1fold_1alloc
  (JNIEnv *, jclass, jint, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_get_space
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1get_1space
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_get_domain_space
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1get_1domain_1space
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_copy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1copy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_dim
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1dim
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_involves_dims
 * Signature: (JIII)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1involves_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_get_constant_val
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1get_1constant_1val
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_set_dim_name
 * Signature: (JIILjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1set_1dim_1name
  (JNIEnv *, jclass, jlong, jint, jint, jstring);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_zero_on_domain
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1zero_1on_1domain
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_one_on_domain
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1one_1on_1domain
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_infty_on_domain
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1infty_1on_1domain
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_neginfty_on_domain
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1neginfty_1on_1domain
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_nan_on_domain
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1nan_1on_1domain
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_val_on_domain
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1val_1on_1domain
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_from_aff
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1from_1aff
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_var_on_domain
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1var_1on_1domain
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_plain_is_equal
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1plain_1is_1equal
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_is_zero
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1is_1zero
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_is_nan
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1is_1nan
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_is_infty
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1is_1infty
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_is_neginfty
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1is_1neginfty
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_sgn
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1sgn
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_neg
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1neg
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_add
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1add
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_sub
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1sub
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_mul
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1mul
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_pow
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1pow
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_scale_val
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1scale_1val
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_insert_dims
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1insert_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_add_dims
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1add_1dims
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_move_dims
 * Signature: (JIIIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1move_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_drop_dims
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1drop_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_align_params
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1align_1params
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_gist
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1gist
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_get_exp_at
 * Signature: (JIII)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1get_1exp_1at
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_numberof_terms
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1numberof_1terms
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_get_term_at
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1get_1term_1at
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_to_string
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1to_1string
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_read_from_str
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1read_1from_1str
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_get_space
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1get_1space
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_get_domain_space
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1get_1domain_1space
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_copy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1copy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_plain_is_equal
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1plain_1is_1equal
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_zero
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1zero
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_alloc
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1alloc
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_is_zero
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1is_1zero
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_reset_domain_space
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1reset_1domain_1space
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_dim
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1dim
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_involves_dims
 * Signature: (JIII)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1involves_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_has_equal_space
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1has_1equal_1space
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_set_dim_name
 * Signature: (JIILjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1set_1dim_1name
  (JNIEnv *, jclass, jlong, jint, jint, jstring);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_domain
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1domain
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_intersect_domain
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1intersect_1domain
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_intersect_params
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1intersect_1params
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_project_domain_on_params
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1project_1domain_1on_1params
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_drop_dims
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1drop_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_split_dims
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1split_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_add
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1add
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_sub
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1sub
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_add_disjoint
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1add_1disjoint
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_neg
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1neg
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_mul
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1mul
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_scale_val
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1scale_1val
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_pow
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1pow
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_insert_dims
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1insert_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_add_dims
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1add_1dims
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_move_dims
 * Signature: (JIIIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1move_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_eval
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1eval
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_max
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1max
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_min
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1min
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_bound
 * Signature: (JILfr/irisa/cairn/jnimap/isl/jni/JNIPtrBoolean;)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1bound
  (JNIEnv *, jclass, jlong, jint, jobject);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_coalesce
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1coalesce
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_gist
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1gist
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_numberof_piece
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1numberof_1piece
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_get_piece_at
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1get_1piece_1at
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_numberof_lifted_piece
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1numberof_1lifted_1piece
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_get_lifted_piece_at
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1get_1lifted_1piece_1at
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_to_string
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1to_1string
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_qpolynomial_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1qpolynomial_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_qpolynomial_get_space
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1qpolynomial_1get_1space
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_qpolynomial_copy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1qpolynomial_1copy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_qpolynomial_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1qpolynomial_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_qpolynomial_plain_is_equal
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1qpolynomial_1plain_1is_1equal
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_qpolynomial_zero
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1qpolynomial_1zero
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_qpolynomial_add_pw_qpolynomial
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1qpolynomial_1add_1pw_1qpolynomial
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_qpolynomial_add
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1qpolynomial_1add
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_qpolynomial_sub
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1qpolynomial_1sub
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_qpolynomial_mul
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1qpolynomial_1mul
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_qpolynomial_scale_val
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1qpolynomial_1scale_1val
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_qpolynomial_domain
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1qpolynomial_1domain
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_qpolynomial_intersect_domain
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1qpolynomial_1intersect_1domain
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_qpolynomial_intersect_params
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1qpolynomial_1intersect_1params
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_qpolynomial_eval
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1qpolynomial_1eval
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_qpolynomial_coalesce
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1qpolynomial_1coalesce
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_qpolynomial_gist
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1qpolynomial_1gist
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_qpolynomial_gist_params
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1qpolynomial_1gist_1params
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_qpolynomial_align_params
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1qpolynomial_1align_1params
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_qpolynomial_to_string
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1qpolynomial_1to_1string
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_fold_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1fold_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_fold_get_space
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1fold_1get_1space
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_fold_copy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1fold_1copy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_fold_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1fold_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_fold_get_type
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1fold_1get_1type
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_fold_empty
 * Signature: (IJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1fold_1empty
  (JNIEnv *, jclass, jint, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_fold_gist
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1fold_1gist
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_fold_number_of_qpolynomial
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1fold_1number_1of_1qpolynomial
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_fold_get_qpolynomial_at
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1fold_1get_1qpolynomial_1at
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_fold_to_string
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1fold_1to_1string
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_fold_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1fold_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_fold_get_space
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1fold_1get_1space
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_fold_get_domain_space
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1fold_1get_1domain_1space
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_fold_copy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1fold_1copy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_fold_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1fold_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_fold_plain_is_equal
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1fold_1plain_1is_1equal
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_fold_is_zero
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1fold_1is_1zero
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_fold_reset_space
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1fold_1reset_1space
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_fold_dim
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1fold_1dim
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_fold_has_equal_space
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1fold_1has_1equal_1space
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_fold_zero
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1fold_1zero
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_fold_set_dim_name
 * Signature: (JIILjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1fold_1set_1dim_1name
  (JNIEnv *, jclass, jlong, jint, jint, jstring);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_fold_domain
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1fold_1domain
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_fold_intersect_domain
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1fold_1intersect_1domain
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_fold_intersect_params
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1fold_1intersect_1params
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_fold_add
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1fold_1add
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_fold_fold
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1fold_1fold
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_fold_add_disjoint
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1fold_1add_1disjoint
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_fold_scale_val
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1fold_1scale_1val
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_fold_project_domain_on_params
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1fold_1project_1domain_1on_1params
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_fold_drop_dims
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1fold_1drop_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_fold_move_dims
 * Signature: (JIIIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1fold_1move_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_fold_coalesce
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1fold_1coalesce
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_fold_gist
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1fold_1gist
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_fold_gist_params
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1fold_1gist_1params
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_fold_numberof_piece
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1fold_1numberof_1piece
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_fold_get_piece_at
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1fold_1get_1piece_1at
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_fold_numberof_lifted_piece
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1fold_1numberof_1lifted_1piece
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_fold_get_lifted_piece_at
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1fold_1get_1lifted_1piece_1at
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_qpolynomial_fold_to_string
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1qpolynomial_1fold_1to_1string
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_qpolynomial_fold_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1qpolynomial_1fold_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_qpolynomial_fold_get_space
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1qpolynomial_1fold_1get_1space
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_qpolynomial_fold_copy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1qpolynomial_1fold_1copy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_qpolynomial_fold_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1qpolynomial_1fold_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_qpolynomial_fold_gist
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1qpolynomial_1fold_1gist
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_qpolynomial_fold_coalesce
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1qpolynomial_1fold_1coalesce
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_qpolynomial_fold_domain
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1qpolynomial_1fold_1domain
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_qpolynomial_fold_intersect_domain
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1qpolynomial_1fold_1intersect_1domain
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_qpolynomial_fold_intersect_params
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1qpolynomial_1fold_1intersect_1params
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_qpolynomial_fold_to_string
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1qpolynomial_1fold_1to_1string
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_read_from_str
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1read_1from_1str
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_aff_from_aff
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1aff_1from_1aff
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_equality_from_aff
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1equality_1from_1aff
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_inequality_from_aff
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1inequality_1from_1aff
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_zero_on_domain
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1zero_1on_1domain
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_get_space
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1get_1space
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_get_local_space
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1get_1local_1space
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_copy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1copy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_get_domain_space
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1get_1domain_1space
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_get_domain_local_space
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1get_1domain_1local_1space
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_align_params
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1align_1params
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_dim
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1dim
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_involves_dims
 * Signature: (JIII)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1involves_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_insert_dims
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1insert_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_add_dims
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1add_1dims
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_move_dims
 * Signature: (JIIIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1move_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_drop_dims
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1drop_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_get_dim_name
 * Signature: (JII)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1get_1dim_1name
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_set_dim_name
 * Signature: (JIILjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1set_1dim_1name
  (JNIEnv *, jclass, jlong, jint, jint, jstring);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_get_constant_val
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1get_1constant_1val
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_get_coefficient_val
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1get_1coefficient_1val
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_get_denominator_val
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1get_1denominator_1val
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_set_constant_si
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1set_1constant_1si
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_set_constant_val
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1set_1constant_1val
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_set_coefficient_si
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1set_1coefficient_1si
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_set_coefficient_val
 * Signature: (JIIJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1set_1coefficient_1val
  (JNIEnv *, jclass, jlong, jint, jint, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_is_cst
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1is_1cst
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_plain_is_equal
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1plain_1is_1equal
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_plain_is_zero
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1plain_1is_1zero
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_is_nan
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1is_1nan
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_get_div
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1get_1div
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_neg
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1neg
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_ceil
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1ceil
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_floor
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1floor
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_add
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1add
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_sub
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1sub
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_mul
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1mul
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_div
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1div
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_scale_val
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1scale_1val
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_mod_val
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1mod_1val
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_gist
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1gist
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_pullback_aff
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1pullback_1aff
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_pullback_multi_aff
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1pullback_1multi_1aff
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_to_string
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1to_1string
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_list_alloc
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1list_1alloc
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_list_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1list_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_list_copy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1list_1copy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_list_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1list_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_list_n_aff
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1list_1n_1aff
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_list_get_aff
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1list_1get_1aff
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_list_set_aff
 * Signature: (JIJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1list_1set_1aff
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_list_insert
 * Signature: (JIJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1list_1insert
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_list_add
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1list_1add
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_list_drop
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1list_1drop
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_list_concat
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1list_1concat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_aff_list_to_string
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1aff_1list_1to_1string
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_map_from_multi_aff
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1map_1from_1multi_1aff
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_from_multi_aff
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1from_1multi_1aff
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_pw_aff_from_multi_aff
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1pw_1aff_1from_1multi_1aff
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_union_pw_aff_from_multi_aff
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1union_1pw_1aff_1from_1multi_1aff
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_aff_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1aff_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_aff_get_space
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1aff_1get_1space
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_aff_copy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1aff_1copy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_aff_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1aff_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_aff_get_domain_space
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1aff_1get_1domain_1space
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_aff_align_params
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1aff_1align_1params
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_aff_read_from_str
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1aff_1read_1from_1str
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_aff_zero
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1aff_1zero
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_aff_identity
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1aff_1identity
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_aff_domain_map
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1aff_1domain_1map
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_aff_range_map
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1aff_1range_1map
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_aff_project_out_map
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1aff_1project_1out_1map
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_aff_from_aff_list
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1aff_1from_1aff_1list
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_aff_dim
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1aff_1dim
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_aff_involves_dims
 * Signature: (JIII)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1aff_1involves_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_aff_insert_dims
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1aff_1insert_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_aff_add_dims
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1aff_1add_1dims
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_aff_drop_dims
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1aff_1drop_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_aff_move_dims
 * Signature: (JIIIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1aff_1move_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_aff_set_dim_name
 * Signature: (JIILjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1aff_1set_1dim_1name
  (JNIEnv *, jclass, jlong, jint, jint, jstring);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_aff_get_aff
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1aff_1get_1aff
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_aff_set_aff
 * Signature: (JIJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1aff_1set_1aff
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_aff_plain_is_equal
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1aff_1plain_1is_1equal
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_aff_neg
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1aff_1neg
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_aff_floor
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1aff_1floor
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_aff_flatten_domain
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1aff_1flatten_1domain
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_aff_flatten_range
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1aff_1flatten_1range
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_aff_add
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1aff_1add
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_aff_sub
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1aff_1sub
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_aff_product
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1aff_1product
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_aff_gist_params
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1aff_1gist_1params
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_aff_gist
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1aff_1gist
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_aff_pullback_multi_aff
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1aff_1pullback_1multi_1aff
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_aff_flat_range_product
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1aff_1flat_1range_1product
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_aff_to_string
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1aff_1to_1string
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_pw_aff_from_pw_aff
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1pw_1aff_1from_1pw_1aff
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_from_pw_aff
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1from_1pw_1aff
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_from_pw_aff
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1from_1pw_1aff
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_from_pw_aff
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1from_1pw_1aff
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_get_space
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1get_1space
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_get_domain_space
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1get_1domain_1space
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_copy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1copy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_read_from_str
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1read_1from_1str
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_alloc
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1alloc
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_empty
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1empty
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_zero_on_domain
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1zero_1on_1domain
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_var_on_domain
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1var_1on_1domain
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_nan_on_domain
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1nan_1on_1domain
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_get_dim_name
 * Signature: (JII)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1get_1dim_1name
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_is_empty
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1is_1empty
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_involves_nan
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1involves_1nan
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_plain_is_equal
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1plain_1is_1equal
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_is_equal
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1is_1equal
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_dim
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1dim
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_involves_dims
 * Signature: (JIII)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1involves_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_is_cst
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1is_1cst
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_align_params
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1align_1params
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_params
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1params
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_domain
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1domain
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_from_range
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1from_1range
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_min
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1min
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_max
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1max
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_mul
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1mul
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_div
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1div
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_add
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1add
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_sub
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1sub
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_neg
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1neg
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_ceil
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1ceil
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_floor
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1floor
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_mod_val
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1mod_1val
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_union_min
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1union_1min
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_union_max
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1union_1max
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_union_add
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1union_1add
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_intersect_params
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1intersect_1params
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_intersect_domain
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1intersect_1domain
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_scale_val
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1scale_1val
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_scale_down_val
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1scale_1down_1val
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_insert_dims
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1insert_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_add_dims
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1add_1dims
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_move_dims
 * Signature: (JIIIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1move_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_drop_dims
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1drop_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_coalesce
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1coalesce
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_gist
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1gist
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_n_piece
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1n_1piece
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_to_string
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1to_1string
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_list_alloc
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1list_1alloc
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_list_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1list_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_list_copy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1list_1copy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_list_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1list_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_list_n_pw_aff
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1list_1n_1pw_1aff
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_list_get_pw_aff
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1list_1get_1pw_1aff
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_list_set_pw_aff
 * Signature: (JIJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1list_1set_1pw_1aff
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_list_insert
 * Signature: (JIJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1list_1insert
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_list_add
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1list_1add
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_list_drop
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1list_1drop
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_list_concat
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1list_1concat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_aff_list_to_string
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1aff_1list_1to_1string
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_from_multi_pw_aff
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1from_1multi_1pw_1aff
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_from_multi_pw_aff
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1from_1multi_1pw_1aff
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_from_multi_pw_aff
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1from_1multi_1pw_1aff
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_union_pw_aff_from_multi_pw_aff
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1union_1pw_1aff_1from_1multi_1pw_1aff
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_pw_aff_read_from_str
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1pw_1aff_1read_1from_1str
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_pw_aff_identity
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1pw_1aff_1identity
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_pw_aff_from_pw_aff_list
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1pw_1aff_1from_1pw_1aff_1list
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_pw_aff_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1pw_1aff_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_pw_aff_get_space
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1pw_1aff_1get_1space
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_pw_aff_get_domain_space
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1pw_1aff_1get_1domain_1space
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_pw_aff_copy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1pw_1aff_1copy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_pw_aff_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1pw_1aff_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_pw_aff_intersect_params
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1pw_1aff_1intersect_1params
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_pw_aff_intersect_domain
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1pw_1aff_1intersect_1domain
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_pw_aff_domain
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1pw_1aff_1domain
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_pw_aff_coalesce
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1pw_1aff_1coalesce
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_pw_aff_gist
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1pw_1aff_1gist
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_pw_aff_is_equal
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1pw_1aff_1is_1equal
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_pw_aff_move_dims
 * Signature: (JIIIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1pw_1aff_1move_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_pw_aff_to_string
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1pw_1aff_1to_1string
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_from_union_pw_aff
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1from_1union_1pw_1aff
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_multi_aff_from_union_pw_aff
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1multi_1aff_1from_1union_1pw_1aff
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_union_pw_aff_from_union_pw_aff
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1union_1pw_1aff_1from_1union_1pw_1aff
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_aff_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1aff_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_aff_get_space
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1aff_1get_1space
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_aff_copy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1aff_1copy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_aff_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1aff_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_aff_empty
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1aff_1empty
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_aff_list_alloc
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1aff_1list_1alloc
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_aff_list_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1aff_1list_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_aff_list_copy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1aff_1list_1copy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_aff_list_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1aff_1list_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_aff_list_n_union_pw_aff
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1aff_1list_1n_1union_1pw_1aff
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_aff_list_get_union_pw_aff
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1aff_1list_1get_1union_1pw_1aff
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_aff_list_set_union_pw_aff
 * Signature: (JIJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1aff_1list_1set_1union_1pw_1aff
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_aff_list_insert
 * Signature: (JIJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1aff_1list_1insert
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_aff_list_add
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1aff_1list_1add
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_aff_list_drop
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1aff_1list_1drop
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_aff_list_concat
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1aff_1list_1concat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_union_pw_aff_read_from_str
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1union_1pw_1aff_1read_1from_1str
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_union_pw_aff_zero
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1union_1pw_1aff_1zero
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_union_pw_aff_multi_val_on_domain
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1union_1pw_1aff_1multi_1val_1on_1domain
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_union_pw_aff_multi_aff_on_domain
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1union_1pw_1aff_1multi_1aff_1on_1domain
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_union_pw_aff_from_union_pw_aff_list
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1union_1pw_1aff_1from_1union_1pw_1aff_1list
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_union_pw_aff_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1union_1pw_1aff_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_union_pw_aff_get_space
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1union_1pw_1aff_1get_1space
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_union_pw_aff_copy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1union_1pw_1aff_1copy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_union_pw_aff_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1union_1pw_1aff_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_multi_pw_aff_from_pw_multi_aff
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1multi_1pw_1aff_1from_1pw_1multi_1aff
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_map_from_pw_multi_aff
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1map_1from_1pw_1multi_1aff
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_from_pw_multi_aff
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1from_1pw_1multi_1aff
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_get_space
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1get_1space
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_get_domain_space
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1get_1domain_1space
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_copy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1copy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_read_from_str
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1read_1from_1str
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_alloc
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1alloc
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_zero
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1zero
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_identity
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1identity
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_empty
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1empty
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_from_domain
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1from_1domain
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_dim
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1dim
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_get_pw_aff
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1get_1pw_1aff
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_set_pw_aff
 * Signature: (JIJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1set_1pw_1aff
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_has_tuple_name
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1has_1tuple_1name
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_get_tuple_name
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1get_1tuple_1name
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_get_dim_name
 * Signature: (JII)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1get_1dim_1name
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_drop_dims
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1drop_1dims
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_domain
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1domain
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_plain_is_equal
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1plain_1is_1equal
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_union_add
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1union_1add
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_add
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1add
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_sub
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1sub
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_scale_val
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1scale_1val
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_scale_multi_val
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1scale_1multi_1val
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_union_lexmin
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1union_1lexmin
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_union_lexmax
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1union_1lexmax
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_range_product
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1range_1product
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_flat_range_product
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1flat_1range_1product
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_product
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1product
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_intersect_params
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1intersect_1params
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_intersect_domain
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1intersect_1domain
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_project_domain_on_params
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1project_1domain_1on_1params
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_align_params
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1align_1params
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_coalesce
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1coalesce
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_gist
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1gist
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_numberof_piece
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1numberof_1piece
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_get_piece_at
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1get_1piece_1at
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_to_string
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1to_1string
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_multi_aff_read_from_str
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1multi_1aff_1read_1from_1str
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_map_from_union_pw_multi_aff
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1map_1from_1union_1pw_1multi_1aff
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_multi_aff_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1multi_1aff_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_multi_aff_get_space
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1multi_1aff_1get_1space
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_multi_aff_copy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1multi_1aff_1copy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_multi_aff_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1multi_1aff_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_multi_aff_empty
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1multi_1aff_1empty
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_multi_aff_from_domain
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1multi_1aff_1from_1domain
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_multi_aff_add_pw_multi_aff
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1multi_1aff_1add_1pw_1multi_1aff
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_multi_aff_add
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1multi_1aff_1add
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_multi_aff_sub
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1multi_1aff_1sub
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_union_pw_multi_aff_to_string
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1union_1pw_1multi_1aff_1to_1string
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_point_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1point_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_point_get_space
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1point_1get_1space
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_point_copy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1point_1copy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_point_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1point_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_point_zero
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1point_1zero
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_point_get_coordinate_val
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1point_1get_1coordinate_1val
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_point_set_coordinate_val
 * Signature: (JIIJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1point_1set_1coordinate_1val
  (JNIEnv *, jclass, jlong, jint, jint, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_point_add_ui
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1point_1add_1ui
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_point_sub_ui
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1point_1sub_1ui
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_mat_alloc
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1mat_1alloc
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_mat_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1mat_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_mat_copy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1mat_1copy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_mat_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1mat_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_mat_rows
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1mat_1rows
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_mat_cols
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1mat_1cols
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_mat_get_element_val
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1mat_1get_1element_1val
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_mat_set_element_si
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1mat_1set_1element_1si
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_mat_set_element_val
 * Signature: (JIIJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1mat_1set_1element_1val
  (JNIEnv *, jclass, jlong, jint, jint, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_mat_right_inverse
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1mat_1right_1inverse
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_mat_right_kernel
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1mat_1right_1kernel
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_vec_alloc
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1vec_1alloc
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_vec_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1vec_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_vec_copy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1vec_1copy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_vec_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1vec_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_vec_size
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1vec_1size
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_vec_get_element_val
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1vec_1get_1element_1val
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_vec_set_element_si
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1vec_1set_1element_1si
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_vec_set_element_val
 * Signature: (JIJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1vec_1set_1element_1val
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_array_dataflow_analysis
 * Signature: (JJJJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1array_1dataflow_1analysis
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_dataflow_analysis_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1dataflow_1analysis_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    compute_ADA
 * Signature: (JJJJI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_compute_1ADA
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    compute_ADA_custom
 * Signature: (JJJJIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_compute_1ADA_1custom
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    compute_ADA_custom_rar
 * Signature: (JJJJIIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_compute_1ADA_1custom_1rar
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jint, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_schedule_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1schedule_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_schedule_get_map
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1schedule_1get_1map
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_compute_schedule
 * Signature: (JJJJIIIIIIII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1compute_1schedule
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jint, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_schedule_to_string
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1schedule_1to_1string
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_vertices_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1vertices_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_vertices_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1vertices_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_vertices_get_n_vertices
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1vertices_1get_1n_1vertices
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_vertices_numberof_vertex
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1vertices_1numberof_1vertex
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_vertices_get_vertex_at
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1vertices_1get_1vertex_1at
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_vertices_numberof_cell
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1vertices_1numberof_1cell
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_vertices_get_cell_at
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1vertices_1get_1cell_1at
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_cell_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1cell_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_cell_get_domain
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1cell_1get_1domain
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_cell_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1cell_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_cell_numberof_vertex
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1cell_1numberof_1vertex
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_cell_get_vertex_at
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1cell_1get_1vertex_1at
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_vertex_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1vertex_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_vertex_get_id
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1vertex_1get_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_vertex_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1vertex_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_vertex_get_domain
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1vertex_1get_1domain
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_vertex_get_expr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1vertex_1get_1expr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_build_from_context
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1build_1from_1context
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_build_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1build_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_build_copy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1build_1copy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_build_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1build_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_build_set_options
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1build_1set_1options
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_build_get_schedule
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1build_1get_1schedule
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_build_get_schedule_space
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1build_1get_1schedule_1space
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_build_restrict
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1build_1restrict
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_build_set_iterators
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1build_1set_1iterators
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_options_set_ast_build_exploit_nested_bounds
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1options_1set_1ast_1build_1exploit_1nested_1bounds
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_options_get_ast_build_exploit_nested_bounds
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1options_1get_1ast_1build_1exploit_1nested_1bounds
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_options_set_ast_build_atomic_upper_bound
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1options_1set_1ast_1build_1atomic_1upper_1bound
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_options_get_ast_build_atomic_upper_bound
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1options_1get_1ast_1build_1atomic_1upper_1bound
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_options_set_ast_build_separation_bounds
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1options_1set_1ast_1build_1separation_1bounds
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_options_get_ast_build_separation_bounds
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1options_1get_1ast_1build_1separation_1bounds
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_build_node_from_schedule_map
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1build_1node_1from_1schedule_1map
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_build_node_from_schedule
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1build_1node_1from_1schedule
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_build_node_from_schedule_map_EX
 * Signature: (JJLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1build_1node_1from_1schedule_1map_1EX
  (JNIEnv *, jclass, jlong, jlong, jstring);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_build_node_from_schedule_EX
 * Signature: (JJLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1build_1node_1from_1schedule_1EX
  (JNIEnv *, jclass, jlong, jlong, jstring);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_build_ast_from_schedule
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1build_1ast_1from_1schedule
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_node_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1node_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_node_copy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1node_1copy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_node_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1node_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_node_get_type
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1node_1get_1type
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_node_set_annotation
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1node_1set_1annotation
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_node_get_annotation
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1node_1get_1annotation
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_node_to_string
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1node_1to_1string
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_node_for_get_iterator
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1node_1for_1get_1iterator
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_node_for_get_init
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1node_1for_1get_1init
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_node_for_get_cond
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1node_1for_1get_1cond
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_node_for_get_inc
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1node_1for_1get_1inc
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_node_for_get_body
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1node_1for_1get_1body
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_node_for_is_degenerate
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1node_1for_1is_1degenerate
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_node_is_for
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1node_1is_1for
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_node_if_get_cond
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1node_1if_1get_1cond
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_node_if_get_then
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1node_1if_1get_1then
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_node_if_has_else
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1node_1if_1has_1else
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_node_if_get_else
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1node_1if_1get_1else
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_node_is_if
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1node_1is_1if
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_node_block_get_children
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1node_1block_1get_1children
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_node_is_block
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1node_1is_1block
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_node_user_get_expr
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1node_1user_1get_1expr
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_node_is_user
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1node_1is_1user
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_node_user_get_schedule
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1node_1user_1get_1schedule
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_node_is_unscanned
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1node_1is_1unscanned
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_node_list_n_ast_node
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1node_1list_1n_1ast_1node
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_node_list_get_ast_node
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1node_1list_1get_1ast_1node
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_expr_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1expr_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_expr_to_string
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1expr_1to_1string
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_expr_get_type
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1expr_1get_1type
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_expr_get_id
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1expr_1get_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_expr_is_id
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1expr_1is_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_expr_get_val
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1expr_1get_1val
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_expr_is_literal
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1expr_1is_1literal
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_expr_get_op_type
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1expr_1get_1op_1type
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_expr_get_op_n_arg
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1expr_1get_1op_1n_1arg
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_expr_get_op_arg
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1expr_1get_1op_1arg
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_ast_expr_is_operation
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1ast_1expr_1is_1operation
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_list_alloc
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1list_1alloc
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_list_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1list_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_list_copy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1list_1copy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_list_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1list_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_list_n_val
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1list_1n_1val
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_list_get_val
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1list_1get_1val
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_list_set_val
 * Signature: (JIJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1list_1set_1val
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_list_insert
 * Signature: (JIJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1list_1insert
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_list_add
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1list_1add
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_list_drop
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1list_1drop
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_list_concat
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1list_1concat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_val_list_to_string
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1val_1list_1to_1string
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_id_list_alloc
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1id_1list_1alloc
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_id_list_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1id_1list_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_id_list_copy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1id_1list_1copy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_id_list_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1id_1list_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_id_list_n_id
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1id_1list_1n_1id
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_id_list_get_id
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1id_1list_1get_1id
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_id_list_set_id
 * Signature: (JIJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1id_1list_1set_1id
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_id_list_insert
 * Signature: (JIJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1id_1list_1insert
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_id_list_add
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1id_1list_1add
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_id_list_drop
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1id_1list_1drop
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_id_list_concat
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1id_1list_1concat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_id_list_to_string
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1id_1list_1to_1string
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_list_alloc
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1list_1alloc
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_list_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1list_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_list_copy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1list_1copy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_list_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1list_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_list_n_set
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1list_1n_1set
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_list_get_set
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1list_1get_1set
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_list_set_set
 * Signature: (JIJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1list_1set_1set
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_list_insert
 * Signature: (JIJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1list_1insert
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_list_add
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1list_1add
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_list_drop
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1list_1drop
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_list_concat
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1list_1concat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_set_list_to_string
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1set_1list_1to_1string
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_list_alloc
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1list_1alloc
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_list_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1list_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_list_copy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1list_1copy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_list_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1list_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_list_n_basic_set
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1list_1n_1basic_1set
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_list_get_basic_set
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1list_1get_1basic_1set
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_list_set_basic_set
 * Signature: (JIJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1list_1set_1basic_1set
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_list_insert
 * Signature: (JIJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1list_1insert
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_list_add
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1list_1add
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_list_drop
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1list_1drop
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_list_concat
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1list_1concat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_basic_set_list_to_string
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1basic_1set_1list_1to_1string
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_constraint_list_alloc
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1constraint_1list_1alloc
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_constraint_list_get_ctx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1constraint_1list_1get_1ctx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_constraint_list_copy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1constraint_1list_1copy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_constraint_list_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1constraint_1list_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_constraint_list_n_constraint
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1constraint_1list_1n_1constraint
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_constraint_list_get_constraint
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1constraint_1list_1get_1constraint
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_constraint_list_set_constraint
 * Signature: (JIJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1constraint_1list_1set_1constraint
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_constraint_list_insert
 * Signature: (JIJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1constraint_1list_1insert
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_constraint_list_add
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1constraint_1list_1add
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_constraint_list_drop
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1constraint_1list_1drop
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_constraint_list_concat
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1constraint_1list_1concat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_constraint_list_to_string
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1constraint_1list_1to_1string
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_piece_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1piece_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_fold_piece_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1fold_1piece_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_piece_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1piece_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_piece_get_set
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1piece_1get_1set
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_piece_test_set
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1piece_1test_1set
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_piece_set_set
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1piece_1set_1set
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_piece_get_qp
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1piece_1get_1qp
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_piece_test_qp
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1piece_1test_1qp
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_piece_set_qp
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1piece_1set_1qp
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_fold_piece_get_set
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1fold_1piece_1get_1set
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_fold_piece_test_set
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1fold_1piece_1test_1set
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_fold_piece_set_set
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1fold_1piece_1set_1set
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_fold_piece_get_fold
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1fold_1piece_1get_1fold
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_fold_piece_test_fold
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1fold_1piece_1test_1fold
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_qpolynomial_fold_piece_set_fold
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1qpolynomial_1fold_1piece_1set_1fold
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_dataflow_analysis_get_must_dep
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1dataflow_1analysis_1get_1must_1dep
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_dataflow_analysis_test_must_dep
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1dataflow_1analysis_1test_1must_1dep
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_dataflow_analysis_set_must_dep
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1dataflow_1analysis_1set_1must_1dep
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_dataflow_analysis_get_may_dep
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1dataflow_1analysis_1get_1may_1dep
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_dataflow_analysis_test_may_dep
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1dataflow_1analysis_1test_1may_1dep
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_dataflow_analysis_set_may_dep
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1dataflow_1analysis_1set_1may_1dep
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_dataflow_analysis_get_must_no_source
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1dataflow_1analysis_1get_1must_1no_1source
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_dataflow_analysis_test_must_no_source
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1dataflow_1analysis_1test_1must_1no_1source
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_dataflow_analysis_set_must_no_source
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1dataflow_1analysis_1set_1must_1no_1source
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_dataflow_analysis_get_may_no_source
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1dataflow_1analysis_1get_1may_1no_1source
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_dataflow_analysis_test_may_no_source
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1dataflow_1analysis_1test_1may_1no_1source
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_dataflow_analysis_set_may_no_source
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1dataflow_1analysis_1set_1may_1no_1source
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_piece_get_set
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1piece_1get_1set
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_piece_test_set
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1piece_1test_1set
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_piece_set_set
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1piece_1set_1set
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_piece_get_maff
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1piece_1get_1maff
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_piece_test_maff
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1piece_1test_1maff
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fr_irisa_cairn_jnimap_isl_jni_ISLNative
 * Method:    isl_pw_multi_aff_piece_set_maff
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_fr_irisa_cairn_jnimap_isl_jni_ISLNative_isl_1pw_1multi_1aff_1piece_1set_1maff
  (JNIEnv *, jclass, jlong, jlong);

#ifdef __cplusplus
}
#endif
#endif
#define GECOS_PTRSIZE (long)
