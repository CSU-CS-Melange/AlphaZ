package fr.irisa.cairn.jnimap.isl.jni;

import java.util.AbstractMap;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;

import fr.irisa.cairn.jnimap.runtime.JNIObject;


/*** PROTECTED REGION ID(ISLDataflowAnalysis_userImport) ENABLED START ***/
	/*
		Put you custom import here ....
	*/
/*** PROTECTED REGION END ***/

/**
 *  Automatically generated by jnimap 
 * @generated
 */
public class JNIISLDataflowAnalysis extends JNIObject {
	
	
	/* @generated */
	protected JNIISLDataflowAnalysis(long ptr) {
		/*** PROTECTED REGION ID(ISLDataflowAnalysis_Constructor) DISABLED START ***/
		super(ptr);
		/*** PROTECTED REGION END ***/
	}
	
	
	/* @generated */
	static JNIISLDataflowAnalysis build(long ptr) {
		{
			return new JNIISLDataflowAnalysis(ptr);
		}
	}
	
	
	
	
	/*** PROTECTED REGION ID(ISLDataflowAnalysis_userCode) ENABLED START ***/
	public static JNIISLUnionMap computeValueBasedADA(JNIISLUnionSet domains,
			JNIISLUnionMap writes, JNIISLUnionMap reads,
			JNIISLUnionMap idSchedule) {
		return _computeADA(domains, writes, reads, idSchedule, false);
	}

	public static JNIISLUnionMap computeMemoryBasedADA(JNIISLUnionSet domains,
			JNIISLUnionMap writes, JNIISLUnionMap reads,
			JNIISLUnionMap idSchedule) {
		return _computeADA(domains, writes, reads, idSchedule, true);
	}

	public static JNIISLUnionMap computeWAWMemoryBasedADA(JNIISLUnionSet domains,
			JNIISLUnionMap writes, JNIISLUnionMap reads,
			JNIISLUnionMap idSchedule) {
		return _computeADA(domains, writes, reads, idSchedule, false, true, false, false);
	}

	public static JNIISLUnionMap computeRAWMemoryBasedADA(JNIISLUnionSet domains,
			JNIISLUnionMap writes, JNIISLUnionMap reads,
			JNIISLUnionMap idSchedule) {
		return _computeADA(domains, writes, reads, idSchedule, true, false, false, false);
	}
	public static JNIISLUnionMap computeWARMemoryBasedADA(JNIISLUnionSet domains,
			JNIISLUnionMap writes, JNIISLUnionMap reads,
			JNIISLUnionMap idSchedule) {
		return _computeADA(domains, writes, reads, idSchedule, false, false, true, false);
	}

	/*** PROTECTED REGION END ***/

	/*************************************** 
	 *	     Struct Field Accessors        * 
	 ***************************************/
	/*************************************************************
	 *	must_dep : JNIISLUnionMap
	 *************************************************************/
	public JNIISLUnionMap getMust_dep() {
		return JNIISLUnionMap.build(ISLNative.isl_dataflow_analysis_get_must_dep(getNativePtr(this)));
	}
	/*************************************************************
	 *	must_dep : JNIISLUnionMap
	 *************************************************************/
	public void setMust_dep(JNIISLUnionMap object) {
		ISLNative.isl_dataflow_analysis_set_must_dep(getNativePtr(this), getNativePtr(object));
	}
	/*************************************************************
	 * Test if Tmust_dep is NULL
	 *************************************************************/
	public boolean testMust_dep() {
		return ISLNative.isl_dataflow_analysis_test_must_dep(getNativePtr(this)) != 0;
	}
	/*************************************************************
	 *	may_dep : JNIISLUnionMap
	 *************************************************************/
	public JNIISLUnionMap getMay_dep() {
		return JNIISLUnionMap.build(ISLNative.isl_dataflow_analysis_get_may_dep(getNativePtr(this)));
	}
	/*************************************************************
	 *	may_dep : JNIISLUnionMap
	 *************************************************************/
	public void setMay_dep(JNIISLUnionMap object) {
		ISLNative.isl_dataflow_analysis_set_may_dep(getNativePtr(this), getNativePtr(object));
	}
	/*************************************************************
	 * Test if Tmay_dep is NULL
	 *************************************************************/
	public boolean testMay_dep() {
		return ISLNative.isl_dataflow_analysis_test_may_dep(getNativePtr(this)) != 0;
	}
	/*************************************************************
	 *	must_no_source : JNIISLUnionMap
	 *************************************************************/
	public JNIISLUnionMap getMust_no_source() {
		return JNIISLUnionMap.build(ISLNative.isl_dataflow_analysis_get_must_no_source(getNativePtr(this)));
	}
	/*************************************************************
	 *	must_no_source : JNIISLUnionMap
	 *************************************************************/
	public void setMust_no_source(JNIISLUnionMap object) {
		ISLNative.isl_dataflow_analysis_set_must_no_source(getNativePtr(this), getNativePtr(object));
	}
	/*************************************************************
	 * Test if Tmust_no_source is NULL
	 *************************************************************/
	public boolean testMust_no_source() {
		return ISLNative.isl_dataflow_analysis_test_must_no_source(getNativePtr(this)) != 0;
	}
	/*************************************************************
	 *	may_no_source : JNIISLUnionMap
	 *************************************************************/
	public JNIISLUnionMap getMay_no_source() {
		return JNIISLUnionMap.build(ISLNative.isl_dataflow_analysis_get_may_no_source(getNativePtr(this)));
	}
	/*************************************************************
	 *	may_no_source : JNIISLUnionMap
	 *************************************************************/
	public void setMay_no_source(JNIISLUnionMap object) {
		ISLNative.isl_dataflow_analysis_set_may_no_source(getNativePtr(this), getNativePtr(object));
	}
	/*************************************************************
	 * Test if Tmay_no_source is NULL
	 *************************************************************/
	public boolean testMay_no_source() {
		return ISLNative.isl_dataflow_analysis_test_may_no_source(getNativePtr(this)) != 0;
	}

	
	/*************************************** 
	 *	         Static Methods            * 
	 ***************************************/
	/**
	 * isl_array_dataflow_analysis 
	 * 
	@take sink must_source may_source identity_schedule
	 * @generated
	**/
	 public static JNIISLDataflowAnalysis compute(JNIISLUnionMap sink, JNIISLUnionMap must_source, JNIISLUnionMap may_source, JNIISLUnionMap identity_schedule) { 
		/*** PROTECTED REGION ID(static_isl_array_dataflow_analysis) DISABLED START ***/
		JNIISLDataflowAnalysis res;
		
		synchronized(LOCK) {
			checkParameters(sink, must_source, may_source, identity_schedule);
			try {
				res = JNIISLDataflowAnalysis.build(ISLNative.isl_array_dataflow_analysis(getNativePtr(sink), getNativePtr(must_source), getNativePtr(may_source), getNativePtr(identity_schedule)));
			} finally {
				taken(sink);
				taken(must_source);
				taken(may_source);
				taken(identity_schedule);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * compute_ADA 
	 * 
	@take domains writes reads idSchedule
	 * @generated
	**/
	 public static JNIISLUnionMap _computeADA(JNIISLUnionSet domains, JNIISLUnionMap writes, JNIISLUnionMap reads, JNIISLUnionMap idSchedule, boolean memoryBased) { 
		/*** PROTECTED REGION ID(static_compute_ADA) DISABLED START ***/
		JNIISLUnionMap res;
		
		synchronized(LOCK) {
			checkParameters(domains, writes, reads, idSchedule);
			try {
				res = JNIISLUnionMap.build(ISLNative.compute_ADA(getNativePtr(domains), getNativePtr(writes), getNativePtr(reads), getNativePtr(idSchedule), toInt(memoryBased)));
			} finally {
				taken(domains);
				taken(writes);
				taken(reads);
				taken(idSchedule);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * compute_ADA_custom 
	 * 
	@take domains writes reads idSchedule
	 * @generated
	**/
	 public static JNIISLUnionMap _computeADA(JNIISLUnionSet domains, JNIISLUnionMap writes, JNIISLUnionMap reads, JNIISLUnionMap idSchedule, boolean RAW, boolean WAW, boolean WAR) { 
		/*** PROTECTED REGION ID(static_compute_ADA_custom) DISABLED START ***/
		JNIISLUnionMap res;
		
		synchronized(LOCK) {
			checkParameters(domains, writes, reads, idSchedule);
			try {
				res = JNIISLUnionMap.build(ISLNative.compute_ADA_custom(getNativePtr(domains), getNativePtr(writes), getNativePtr(reads), getNativePtr(idSchedule), toInt(RAW), toInt(WAW), toInt(WAR)));
			} finally {
				taken(domains);
				taken(writes);
				taken(reads);
				taken(idSchedule);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * compute_ADA_custom_rar 
	 * 
	@take domains writes reads idSchedule
	 * @generated
	**/
	 public static JNIISLUnionMap _computeADA(JNIISLUnionSet domains, JNIISLUnionMap writes, JNIISLUnionMap reads, JNIISLUnionMap idSchedule, boolean RAW, boolean WAW, boolean WAR, boolean RAR) { 
		/*** PROTECTED REGION ID(static_compute_ADA_custom_rar) DISABLED START ***/
		JNIISLUnionMap res;
		
		synchronized(LOCK) {
			checkParameters(domains, writes, reads, idSchedule);
			try {
				res = JNIISLUnionMap.build(ISLNative.compute_ADA_custom_rar(getNativePtr(domains), getNativePtr(writes), getNativePtr(reads), getNativePtr(idSchedule), toInt(RAW), toInt(WAW), toInt(WAR), toInt(RAR)));
			} finally {
				taken(domains);
				taken(writes);
				taken(reads);
				taken(idSchedule);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	
	/*************************************** 
	 *	         Member Methods            * 
	 ***************************************/
	/**
	 * isl_dataflow_analysis_free 
	 * 
	 * @take this
	 * @generated
	**/
	public void free() {
		/*** PROTECTED REGION ID(isl_dataflow_analysis_free) DISABLED START ***/
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				ISLNative.isl_dataflow_analysis_free(getNativePtr(this));
			} finally {
				taken(this);
			}
		}
		
		/*** PROTECTED REGION END ***/
	}
	
	
	public String toString() {
		/*** PROTECTED REGION ID(ISLDataflowAnalysis_toString) DISABLED START ***/
			return ISLPrettyPrinter.asString(this);
		/*** PROTECTED REGION END ***/
	}
}
