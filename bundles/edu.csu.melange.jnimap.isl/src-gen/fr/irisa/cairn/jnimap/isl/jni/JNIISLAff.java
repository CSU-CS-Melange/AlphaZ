package fr.irisa.cairn.jnimap.isl.jni;

import java.util.AbstractMap;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;

import fr.irisa.cairn.jnimap.runtime.JNIObject;


/*** PROTECTED REGION ID(ISLAff_userImport) ENABLED START ***/
	/*
		Put you custom import here ....
	*/
/*** PROTECTED REGION END ***/

/**
 *  Automatically generated by jnimap 
 * @generated
 */
public class JNIISLAff extends JNIObject {
	
	/* @generated */
	protected JNIISLAff(long ptr) {
		/*** PROTECTED REGION ID(ISLAff_Constructor) DISABLED START ***/
		super(ptr);
		/*** PROTECTED REGION END ***/
	}
	
	/* @generated */
	protected static JNIISLAff build(long ptr) {
		return new JNIISLAff(ptr);
	}
	
	/*** PROTECTED REGION ID(ISLAff_userCode) ENABLED START ***/
			@Deprecated
			/**
			 * @take ls
			 * 
			 * @param ls
			 */
			public JNIISLAff(JNIISLLocalSpace ls) {
				this(ISLNative.isl_aff_zero_on_domain(getNativePtr(ls)));
			}

			@Deprecated
			public JNIISLAff AffAdd(JNIISLAff aff) {
				return add(aff);
			}

			@Deprecated
			public boolean constant() {
				return isConstant();
			}
			
			@Deprecated
			public JNIISLAff getDivAt(int pos) {
				return getDiv(pos);
			}

			@Deprecated
			public int getNbDim(JNIISLDimType type) {
				return getNbDims(type);
			}
			
			@Deprecated
			public long getCoefficientAt(JNIISLDimType dType, int pos) {
				return getCoefficientVal(dType, pos).asLong();
			}
			
			public long getNumerator(JNIISLDimType dType, int pos) {
				return getCoefficientVal(dType, pos).getNumerator();
			}

			public long getConstant() {
				return getConstantVal().asLong();
			}

			/**
			 * This is the common denominator for the entire qAff expression
			 * 
			 * @return
			 */
			public long getDenominator() {
				return getDenominatorVal().asLong();
			}
			
			public JNIISLAff scale(long v) {
				JNIISLVal val = JNIISLVal.buildFromLong(getContext(), v);
				return scale(val);
			}
			
			private JNIISLAff buildFromLong(long v) {
				JNIISLVal val = JNIISLVal.buildFromLong(getContext(), v);
				int nbParams = getNbDims(JNIISLDimType.isl_dim_param);
				int nbSets = getNbDims(JNIISLDimType.isl_dim_set);
				JNIISLAff aff = JNIISLAff.buildZero(JNIISLSpace.allocSet(nbParams, nbSets).toLocalSpace());
				
				return aff.setConstant(val);
			}
			public JNIISLAff add(long v) {
				return add(buildFromLong(v));
			}
			public JNIISLAff sub(long v) {
				return sub(buildFromLong(v));
			}
			public JNIISLAff div(long v) {
				return div(buildFromLong(v));
			}
			public JNIISLAff mod(long v) {
				return mod(JNIISLVal.buildFromLong(getContext(), v));
			}
			
			static boolean lvl0 = true;
			public String javaPrint() {

				boolean is_lvl_0 = lvl0;
				lvl0 = false;

				String javaPrint = "";
				boolean first = true;

				//common denominator
				long commonD = getDenominator();
				
				JNIISLVal constant = getConstantVal();
				long cst = (constant.getNumerator() * commonD) / constant.getDenominator();
				if (cst != 0) {
					first = false;
					javaPrint += cst;
				}

				JNIISLSpace dims = this.getSpace();

				JNIISLDimType dimType = JNIISLDimType.isl_dim_in;
				int n = getNbDims(dimType);
				for (int i = 0; i < n; i++) {
					JNIISLVal coefficient = getCoefficientVal(dimType, i);
					long coef = (coefficient.getNumerator() * commonD) / coefficient.getDenominator();
					if (coef != 0) {
						if (!first) {
							if (coef < 0)
								javaPrint += " - ";
							else
								javaPrint += " + ";
						} else {
							if (coef < 0)
								javaPrint += "-";
						}
						first = false;
						if (Math.abs(coef) != 1)
							javaPrint += Math.abs(coef);
						String name = dims.getName(dimType, i);
						if (name == null)
							name = "i" + i;
						javaPrint += name;
					}
				}

				//		dimType = JNIISLDimType.isl_dim_out;
				//		n = this.getNbDims(dimType);
				//		for (int i = 0; i < n; i++) {
				//			int coef = this.getCoefficientAt(dimType, i);
				//			if (coef != 0) {
				//				if (!first) {
				//					if (coef < 0)
				//						javaPrint += " - ";
				//					else 
				//						javaPrint += " + ";
				//				} else {
				//					if (coef < 0)
				//						javaPrint += "-";
				//				}
				//				first = false;
				//				if (Math.abs(coef) != 1)
				//					javaPrint += Math.abs(coef);
				//				String name = dims.getName(dimType, i);
				//				if (name == null) name = "o"+i;
				//				javaPrint += name;
				//			}
				//		}

				dimType = JNIISLDimType.isl_dim_param;
				n = getNbDims(dimType);
				for (int i = 0; i < n; i++) {
					JNIISLVal coefficient = getCoefficientVal(dimType, i);
					long coef = (coefficient.getNumerator() * commonD) / coefficient.getDenominator();
					
					if (coef != 0) {
						if (!first) {
							if (coef < 0)
								javaPrint += " - ";
							else
								javaPrint += " + ";
						} else {
							if (coef < 0)
								javaPrint += "-";
						}
						first = false;
						if (Math.abs(coef) != 1)
							javaPrint += Math.abs(coef);
						String name = dims.getName(dimType, i);
						if (name == null)
							name = "p" + i;
						javaPrint += name;
					}
				}

				dimType = JNIISLDimType.isl_dim_div;
				n = this.getNbDims(dimType);
				for (int i = 0; i < n; i++) {
					JNIISLVal coefficient = getCoefficientVal(dimType, i);
					long coef = (coefficient.getNumerator() * commonD) / coefficient.getDenominator();
					
					if (coef != 0) {
						if (!first) {
							if (coef < 0)
								javaPrint += " - ";
							else
								javaPrint += " + ";
						} else {
							if (coef < 0)
								javaPrint += "-";
						}
						first = false;
						if (Math.abs(coef) != 1)
							javaPrint += Math.abs(coef) + "*";

						JNIISLAff div = getDiv(i);
//						javaPrint += "floor[" + div.javaPrint() + "]";
						javaPrint += "floor(" + div.javaPrint() + ")";
					}
				}
				javaPrint = "(" + javaPrint + ")";
				if (commonD != 1)
					javaPrint += "/" + commonD;
				if (javaPrint.length() == 2)
					javaPrint = "[(0)]";
				else {
					if (is_lvl_0) {
						javaPrint = "[" + javaPrint + "]";
					}
				}
				if (is_lvl_0)
					lvl0 = true;
				return javaPrint;
			}
	/*** PROTECTED REGION END ***/


	
	/*************************************** 
	 *	         Static Methods            * 
	 ***************************************/
	/**
	 * isl_aff_read_from_str 
	 * 
	 * @generated
	**/
	 public static JNIISLAff buildFromString(JNIISLContext ctx, String str) { 
		/*** PROTECTED REGION ID(static_isl_aff_read_from_str) DISABLED START ***/
		JNIISLAff res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = JNIISLAff.build(ISLNative.isl_aff_read_from_str(getNativePtr(ctx), str));
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_aff_zero_on_domain 
	 * 
	@take ls
	 * @generated
	**/
	 public static JNIISLAff buildZero(JNIISLLocalSpace ls) { 
		/*** PROTECTED REGION ID(static_isl_aff_zero_on_domain) DISABLED START ***/
		JNIISLAff res;
		
		synchronized(LOCK) {
			checkParameters(ls);
			try {
				res = JNIISLAff.build(ISLNative.isl_aff_zero_on_domain(getNativePtr(ls)));
			} finally {
				taken(ls);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_aff_to_string 
	 * 
	 * @generated
	**/
	 public static String _toString(JNIISLAff aff, int format) { 
		/*** PROTECTED REGION ID(static_isl_aff_to_string) DISABLED START ***/
		String res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = ISLNative.isl_aff_to_string(getNativePtr(aff), format);
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	
	/*************************************** 
	 *	         Member Methods            * 
	 ***************************************/
	/**
	 * isl_multi_aff_from_aff 
	 * 
	 * @take this
	 * @generated
	**/
	public JNIISLMultiAff toMultiAff() {
		/*** PROTECTED REGION ID(isl_multi_aff_from_aff) DISABLED START ***/
		JNIISLMultiAff res;
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				res = JNIISLMultiAff.build(ISLNative.isl_multi_aff_from_aff(getNativePtr(this)));
			} finally {
				taken(this);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_equality_from_aff 
	 * 
	 * @take this
	 * @generated
	**/
	public JNIISLConstraint toEqualityConstraint() {
		/*** PROTECTED REGION ID(isl_equality_from_aff) DISABLED START ***/
		JNIISLConstraint res;
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				res = JNIISLConstraint.build(ISLNative.isl_equality_from_aff(getNativePtr(this)));
			} finally {
				taken(this);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_inequality_from_aff 
	 * 
	 * @take this
	 * @generated
	**/
	public JNIISLConstraint toInequalityConstraint() {
		/*** PROTECTED REGION ID(isl_inequality_from_aff) DISABLED START ***/
		JNIISLConstraint res;
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				res = JNIISLConstraint.build(ISLNative.isl_inequality_from_aff(getNativePtr(this)));
			} finally {
				taken(this);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_aff_get_ctx 
	 * 
	 * @generated
	**/
	public JNIISLContext getContext() {
		/*** PROTECTED REGION ID(isl_aff_get_ctx) DISABLED START ***/
		JNIISLContext res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = JNIISLContext.build(ISLNative.isl_aff_get_ctx(getNativePtr(this)));
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_aff_get_space 
	 * 
	 * @generated
	**/
	public JNIISLSpace getSpace() {
		/*** PROTECTED REGION ID(isl_aff_get_space) DISABLED START ***/
		JNIISLSpace res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = JNIISLSpace.build(ISLNative.isl_aff_get_space(getNativePtr(this)));
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_aff_get_local_space 
	 * 
	 * @generated
	**/
	public JNIISLLocalSpace getLocalSpace() {
		/*** PROTECTED REGION ID(isl_aff_get_local_space) DISABLED START ***/
		JNIISLLocalSpace res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = JNIISLLocalSpace.build(ISLNative.isl_aff_get_local_space(getNativePtr(this)));
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_aff_copy 
	 * 
	 * @generated
	**/
	public JNIISLAff copy() {
		/*** PROTECTED REGION ID(isl_aff_copy) DISABLED START ***/
		JNIISLAff res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = JNIISLAff.build(ISLNative.isl_aff_copy(getNativePtr(this)));
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_aff_free 
	 * 
	 * @take this
	 * @generated
	**/
	public void free() {
		/*** PROTECTED REGION ID(isl_aff_free) DISABLED START ***/
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				ISLNative.isl_aff_free(getNativePtr(this));
			} finally {
				taken(this);
			}
		}
		
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_aff_get_domain_space 
	 * 
	 * @generated
	**/
	public JNIISLSpace getDomainSpace() {
		/*** PROTECTED REGION ID(isl_aff_get_domain_space) DISABLED START ***/
		JNIISLSpace res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = JNIISLSpace.build(ISLNative.isl_aff_get_domain_space(getNativePtr(this)));
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_aff_get_domain_local_space 
	 * 
	 * @generated
	**/
	public JNIISLLocalSpace getDomainLocalSpace() {
		/*** PROTECTED REGION ID(isl_aff_get_domain_local_space) DISABLED START ***/
		JNIISLLocalSpace res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = JNIISLLocalSpace.build(ISLNative.isl_aff_get_domain_local_space(getNativePtr(this)));
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_aff_align_params 
	 * 
	 * @take this model
	 * @generated
	**/
	public JNIISLAff alignParams(JNIISLSpace model) {
		/*** PROTECTED REGION ID(isl_aff_align_params) DISABLED START ***/
		JNIISLAff res;
		
		synchronized(LOCK) {
			checkParameters(this, model);
			try {
				res = JNIISLAff.build(ISLNative.isl_aff_align_params(getNativePtr(this), getNativePtr(model)));
			} finally {
				taken(this);
				taken(model);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_aff_dim 
	 * 
	 * @generated
	**/
	public int getNbDims(JNIISLDimType type) {
		/*** PROTECTED REGION ID(isl_aff_dim) DISABLED START ***/
		int res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = ISLNative.isl_aff_dim(getNativePtr(this), type.getValue());
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_aff_involves_dims 
	 * 
	 * @generated
	**/
	public boolean involvesDims(JNIISLDimType type, int first, int n) {
		/*** PROTECTED REGION ID(isl_aff_involves_dims) DISABLED START ***/
		boolean res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = ISLNative.isl_aff_involves_dims(getNativePtr(this), type.getValue(), first, n) != 0;
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_aff_insert_dims 
	 * 
	 * @take this
	 * @generated
	**/
	public JNIISLAff insertDims(JNIISLDimType type, int first, int n) {
		/*** PROTECTED REGION ID(isl_aff_insert_dims) DISABLED START ***/
		JNIISLAff res;
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				res = JNIISLAff.build(ISLNative.isl_aff_insert_dims(getNativePtr(this), type.getValue(), first, n));
			} finally {
				taken(this);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_aff_add_dims 
	 * 
	 * @take this
	 * @generated
	**/
	public JNIISLAff addDims(JNIISLDimType type, int n) {
		/*** PROTECTED REGION ID(isl_aff_add_dims) DISABLED START ***/
		JNIISLAff res;
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				res = JNIISLAff.build(ISLNative.isl_aff_add_dims(getNativePtr(this), type.getValue(), n));
			} finally {
				taken(this);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_aff_move_dims 
	 * 
	 * @take this
	 * @generated
	**/
	public JNIISLAff moveDims(JNIISLDimType dst_type, int dst_pos, JNIISLDimType src_type, int src_pos, int n) {
		/*** PROTECTED REGION ID(isl_aff_move_dims) DISABLED START ***/
		JNIISLAff res;
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				res = JNIISLAff.build(ISLNative.isl_aff_move_dims(getNativePtr(this), dst_type.getValue(), dst_pos, src_type.getValue(), src_pos, n));
			} finally {
				taken(this);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_aff_drop_dims 
	 * 
	 * @take this
	 * @generated
	**/
	public JNIISLAff dropDims(JNIISLDimType type, int first, int n) {
		/*** PROTECTED REGION ID(isl_aff_drop_dims) DISABLED START ***/
		JNIISLAff res;
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				res = JNIISLAff.build(ISLNative.isl_aff_drop_dims(getNativePtr(this), type.getValue(), first, n));
			} finally {
				taken(this);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_aff_get_dim_name 
	 * 
	 * @generated
	**/
	public String getDimName(JNIISLDimType type, int pos) {
		/*** PROTECTED REGION ID(isl_aff_get_dim_name) DISABLED START ***/
		String res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = ISLNative.isl_aff_get_dim_name(getNativePtr(this), type.getValue(), pos);
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_aff_set_dim_name 
	 * 
	 * @take this
	 * @generated
	**/
	public JNIISLAff setDimName(JNIISLDimType type, int pos, String s) {
		/*** PROTECTED REGION ID(isl_aff_set_dim_name) DISABLED START ***/
		JNIISLAff res;
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				res = JNIISLAff.build(ISLNative.isl_aff_set_dim_name(getNativePtr(this), type.getValue(), pos, s));
			} finally {
				taken(this);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_aff_get_constant_val 
	 * 
	 * @generated
	**/
	public JNIISLVal getConstantVal() {
		/*** PROTECTED REGION ID(isl_aff_get_constant_val) DISABLED START ***/
		JNIISLVal res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = JNIISLVal.build(ISLNative.isl_aff_get_constant_val(getNativePtr(this)));
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_aff_get_coefficient_val 
	 * 
	 * @generated
	**/
	public JNIISLVal getCoefficientVal(JNIISLDimType type, int pos) {
		/*** PROTECTED REGION ID(isl_aff_get_coefficient_val) DISABLED START ***/
		JNIISLVal res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = JNIISLVal.build(ISLNative.isl_aff_get_coefficient_val(getNativePtr(this), type.getValue(), pos));
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_aff_get_denominator_val 
	 * 
	 * @generated
	**/
	public JNIISLVal getDenominatorVal() {
		/*** PROTECTED REGION ID(isl_aff_get_denominator_val) DISABLED START ***/
		JNIISLVal res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = JNIISLVal.build(ISLNative.isl_aff_get_denominator_val(getNativePtr(this)));
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_aff_set_constant_si 
	 * 
	 * @take this
	 * @generated
	**/
	public JNIISLAff setConstant(int v) {
		/*** PROTECTED REGION ID(isl_aff_set_constant_si) DISABLED START ***/
		JNIISLAff res;
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				res = JNIISLAff.build(ISLNative.isl_aff_set_constant_si(getNativePtr(this), v));
			} finally {
				taken(this);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_aff_set_constant_val 
	 * 
	 * @take this v
	 * @generated
	**/
	public JNIISLAff setConstant(JNIISLVal v) {
		/*** PROTECTED REGION ID(isl_aff_set_constant_val) DISABLED START ***/
		JNIISLAff res;
		
		synchronized(LOCK) {
			checkParameters(this, v);
			try {
				res = JNIISLAff.build(ISLNative.isl_aff_set_constant_val(getNativePtr(this), getNativePtr(v)));
			} finally {
				taken(this);
				taken(v);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_aff_set_coefficient_si 
	 * 
	 * @take this
	 * @generated
	**/
	public JNIISLAff setCoefficient(JNIISLDimType type, int pos, int v) {
		/*** PROTECTED REGION ID(isl_aff_set_coefficient_si) DISABLED START ***/
		JNIISLAff res;
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				res = JNIISLAff.build(ISLNative.isl_aff_set_coefficient_si(getNativePtr(this), type.getValue(), pos, v));
			} finally {
				taken(this);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_aff_set_coefficient_val 
	 * 
	 * @take this v
	 * @generated
	**/
	public JNIISLAff setCoefficient(JNIISLDimType type, int pos, JNIISLVal v) {
		/*** PROTECTED REGION ID(isl_aff_set_coefficient_val) DISABLED START ***/
		JNIISLAff res;
		
		synchronized(LOCK) {
			checkParameters(this, v);
			try {
				res = JNIISLAff.build(ISLNative.isl_aff_set_coefficient_val(getNativePtr(this), type.getValue(), pos, getNativePtr(v)));
			} finally {
				taken(this);
				taken(v);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_aff_is_cst 
	 * 
	 * @generated
	**/
	public boolean isConstant() {
		/*** PROTECTED REGION ID(isl_aff_is_cst) DISABLED START ***/
		boolean res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = ISLNative.isl_aff_is_cst(getNativePtr(this)) != 0;
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_aff_plain_is_equal 
	 * 
	 * @generated
	**/
	public boolean isEqual(JNIISLAff aff2) {
		/*** PROTECTED REGION ID(isl_aff_plain_is_equal) DISABLED START ***/
		boolean res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = ISLNative.isl_aff_plain_is_equal(getNativePtr(this), getNativePtr(aff2)) != 0;
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_aff_plain_is_zero 
	 * 
	 * @generated
	**/
	public boolean isPlainZero() {
		/*** PROTECTED REGION ID(isl_aff_plain_is_zero) DISABLED START ***/
		boolean res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = ISLNative.isl_aff_plain_is_zero(getNativePtr(this)) != 0;
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_aff_is_nan 
	 * 
	 * @generated
	**/
	public boolean isNaN() {
		/*** PROTECTED REGION ID(isl_aff_is_nan) DISABLED START ***/
		boolean res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = ISLNative.isl_aff_is_nan(getNativePtr(this)) != 0;
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_aff_get_div 
	 * 
	 * @generated
	**/
	public JNIISLAff getDiv(int pos) {
		/*** PROTECTED REGION ID(isl_aff_get_div) DISABLED START ***/
		JNIISLAff res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = JNIISLAff.build(ISLNative.isl_aff_get_div(getNativePtr(this), pos));
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_aff_neg 
	 * 
	 * @take this
	 * @generated
	**/
	public JNIISLAff negate() {
		/*** PROTECTED REGION ID(isl_aff_neg) DISABLED START ***/
		JNIISLAff res;
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				res = JNIISLAff.build(ISLNative.isl_aff_neg(getNativePtr(this)));
			} finally {
				taken(this);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_aff_ceil 
	 * 
	 * @take this
	 * @generated
	**/
	public JNIISLAff ceil() {
		/*** PROTECTED REGION ID(isl_aff_ceil) DISABLED START ***/
		JNIISLAff res;
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				res = JNIISLAff.build(ISLNative.isl_aff_ceil(getNativePtr(this)));
			} finally {
				taken(this);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_aff_floor 
	 * 
	 * @take this
	 * @generated
	**/
	public JNIISLAff floor() {
		/*** PROTECTED REGION ID(isl_aff_floor) DISABLED START ***/
		JNIISLAff res;
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				res = JNIISLAff.build(ISLNative.isl_aff_floor(getNativePtr(this)));
			} finally {
				taken(this);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_aff_add 
	 * 
	 * @take this aff2
	 * @generated
	**/
	public JNIISLAff add(JNIISLAff aff2) {
		/*** PROTECTED REGION ID(isl_aff_add) DISABLED START ***/
		JNIISLAff res;
		
		synchronized(LOCK) {
			checkParameters(this, aff2);
			try {
				res = JNIISLAff.build(ISLNative.isl_aff_add(getNativePtr(this), getNativePtr(aff2)));
			} finally {
				taken(this);
				taken(aff2);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_aff_sub 
	 * 
	 * @take this aff2
	 * @generated
	**/
	public JNIISLAff sub(JNIISLAff aff2) {
		/*** PROTECTED REGION ID(isl_aff_sub) DISABLED START ***/
		JNIISLAff res;
		
		synchronized(LOCK) {
			checkParameters(this, aff2);
			try {
				res = JNIISLAff.build(ISLNative.isl_aff_sub(getNativePtr(this), getNativePtr(aff2)));
			} finally {
				taken(this);
				taken(aff2);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_aff_mul 
	 * 
	 * @take this aff2
	 * @generated
	**/
	public JNIISLAff mul(JNIISLAff aff2) {
		/*** PROTECTED REGION ID(isl_aff_mul) DISABLED START ***/
		JNIISLAff res;
		
		synchronized(LOCK) {
			checkParameters(this, aff2);
			try {
				res = JNIISLAff.build(ISLNative.isl_aff_mul(getNativePtr(this), getNativePtr(aff2)));
			} finally {
				taken(this);
				taken(aff2);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_aff_div 
	 * 
	 * @take this aff2
	 * @generated
	**/
	public JNIISLAff div(JNIISLAff aff2) {
		/*** PROTECTED REGION ID(isl_aff_div) DISABLED START ***/
		JNIISLAff res;
		
		synchronized(LOCK) {
			checkParameters(this, aff2);
			try {
				res = JNIISLAff.build(ISLNative.isl_aff_div(getNativePtr(this), getNativePtr(aff2)));
			} finally {
				taken(this);
				taken(aff2);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_aff_scale_val 
	 * 
	 * @take this v
	 * @generated
	**/
	public JNIISLAff scale(JNIISLVal v) {
		/*** PROTECTED REGION ID(isl_aff_scale_val) DISABLED START ***/
		JNIISLAff res;
		
		synchronized(LOCK) {
			checkParameters(this, v);
			try {
				res = JNIISLAff.build(ISLNative.isl_aff_scale_val(getNativePtr(this), getNativePtr(v)));
			} finally {
				taken(this);
				taken(v);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_aff_mod_val 
	 * 
	 * @take this mod
	 * @generated
	**/
	public JNIISLAff mod(JNIISLVal mod) {
		/*** PROTECTED REGION ID(isl_aff_mod_val) DISABLED START ***/
		JNIISLAff res;
		
		synchronized(LOCK) {
			checkParameters(this, mod);
			try {
				res = JNIISLAff.build(ISLNative.isl_aff_mod_val(getNativePtr(this), getNativePtr(mod)));
			} finally {
				taken(this);
				taken(mod);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_aff_gist 
	 * 
	 * @take this context
	 * @generated
	**/
	public JNIISLAff gist(JNIISLSet context) {
		/*** PROTECTED REGION ID(isl_aff_gist) DISABLED START ***/
		JNIISLAff res;
		
		synchronized(LOCK) {
			checkParameters(this, context);
			try {
				res = JNIISLAff.build(ISLNative.isl_aff_gist(getNativePtr(this), getNativePtr(context)));
			} finally {
				taken(this);
				taken(context);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_aff_pullback_aff 
	 * 
	 * @take this aff2
	 * @generated
	**/
	public JNIISLAff pullback(JNIISLAff aff2) {
		/*** PROTECTED REGION ID(isl_aff_pullback_aff) DISABLED START ***/
		JNIISLAff res;
		
		synchronized(LOCK) {
			checkParameters(this, aff2);
			try {
				res = JNIISLAff.build(ISLNative.isl_aff_pullback_aff(getNativePtr(this), getNativePtr(aff2)));
			} finally {
				taken(this);
				taken(aff2);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_aff_pullback_multi_aff 
	 * 
	 * @take this ma
	 * @generated
	**/
	public JNIISLAff pullback(JNIISLMultiAff ma) {
		/*** PROTECTED REGION ID(isl_aff_pullback_multi_aff) DISABLED START ***/
		JNIISLAff res;
		
		synchronized(LOCK) {
			checkParameters(this, ma);
			try {
				res = JNIISLAff.build(ISLNative.isl_aff_pullback_multi_aff(getNativePtr(this), getNativePtr(ma)));
			} finally {
				taken(this);
				taken(ma);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	
	public String toString() {
		/*** PROTECTED REGION ID(ISLAff_toString) DISABLED START ***/
			return ISLPrettyPrinter.asString(this);
		/*** PROTECTED REGION END ***/
	}
}
