package fr.irisa.cairn.jnimap.isl.jni;

import java.util.AbstractMap;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;

import fr.irisa.cairn.jnimap.runtime.JNIObject;


/*** PROTECTED REGION ID(ISLQPolynomialPiece_userImport) ENABLED START ***/
	/*
		Put you custom import here ....
	*/
/*** PROTECTED REGION END ***/

/**
 *  Automatically generated by jnimap 
 * @generated
 */
public class JNIISLQPolynomialPiece extends JNIObject {
	
	
	/* @generated */
	protected JNIISLQPolynomialPiece(long ptr) {
		/*** PROTECTED REGION ID(ISLQPolynomialPiece_Constructor) DISABLED START ***/
		super(ptr);
		/*** PROTECTED REGION END ***/
	}
	
	
	/* @generated */
	static JNIISLQPolynomialPiece build(long ptr) {
		{
			return new JNIISLQPolynomialPiece(ptr);
		}
	}
	
	
	
	
	/*** PROTECTED REGION ID(ISLQPolynomialPiece_userCode) ENABLED START ***/
	/*** PROTECTED REGION END ***/

	/*************************************** 
	 *	     Struct Field Accessors        * 
	 ***************************************/
	/*************************************************************
	 *	set : JNIISLSet
	 *************************************************************/
	public JNIISLSet getSet() {
		return JNIISLSet.build(ISLNative.isl_qpolynomial_piece_get_set(getNativePtr(this)));
	}
	/*************************************************************
	 *	set : JNIISLSet
	 *************************************************************/
	public void setSet(JNIISLSet object) {
		ISLNative.isl_qpolynomial_piece_set_set(getNativePtr(this), getNativePtr(object));
	}
	/*************************************************************
	 * Test if Tset is NULL
	 *************************************************************/
	public boolean testSet() {
		return ISLNative.isl_qpolynomial_piece_test_set(getNativePtr(this)) != 0;
	}
	/*************************************************************
	 *	qp : JNIISLQPolynomial
	 *************************************************************/
	public JNIISLQPolynomial getQp() {
		return JNIISLQPolynomial.build(ISLNative.isl_qpolynomial_piece_get_qp(getNativePtr(this)));
	}
	/*************************************************************
	 *	qp : JNIISLQPolynomial
	 *************************************************************/
	public void setQp(JNIISLQPolynomial object) {
		ISLNative.isl_qpolynomial_piece_set_qp(getNativePtr(this), getNativePtr(object));
	}
	/*************************************************************
	 * Test if Tqp is NULL
	 *************************************************************/
	public boolean testQp() {
		return ISLNative.isl_qpolynomial_piece_test_qp(getNativePtr(this)) != 0;
	}

	
	/*************************************** 
	 *	         Static Methods            * 
	 ***************************************/
	
	/*************************************** 
	 *	         Member Methods            * 
	 ***************************************/
	/**
	 * isl_qpolynomial_piece_free 
	 * 
	 * @take this
	 * @generated
	**/
	public void free() {
		/*** PROTECTED REGION ID(isl_qpolynomial_piece_free) DISABLED START ***/
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				ISLNative.isl_qpolynomial_piece_free(getNativePtr(this));
			} finally {
				taken(this);
			}
		}
		
		/*** PROTECTED REGION END ***/
	}
	
	
	public String toString() {
		/*** PROTECTED REGION ID(ISLQPolynomialPiece_toString) DISABLED START ***/
			return ISLPrettyPrinter.asString(this);
		/*** PROTECTED REGION END ***/
	}
}
