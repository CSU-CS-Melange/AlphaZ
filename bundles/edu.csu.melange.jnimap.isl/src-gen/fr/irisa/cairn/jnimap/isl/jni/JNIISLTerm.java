package fr.irisa.cairn.jnimap.isl.jni;

import java.util.AbstractMap;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;

import fr.irisa.cairn.jnimap.runtime.JNIObject;


/*** PROTECTED REGION ID(ISLTerm_userImport) ENABLED START ***/
	/*
		Put you custom import here ....
	*/
/*** PROTECTED REGION END ***/

/**
 *  Automatically generated by jnimap 
 * @generated
 */
public class JNIISLTerm extends JNIObject {
	
	/* @generated */
	protected JNIISLTerm(long ptr) {
		/*** PROTECTED REGION ID(ISLTerm_Constructor) DISABLED START ***/
		super(ptr);
		/*** PROTECTED REGION END ***/
	}
	
	/* @generated */
	protected static JNIISLTerm build(long ptr) {
		return new JNIISLTerm(ptr);
	}
	
	/*** PROTECTED REGION ID(ISLTerm_userCode) ENABLED START ***/
	@Deprecated
	public int getNbDim(JNIISLDimType type) {
		return getNbDims(type);
	}
	
	public long getNumerator() {
		return getCoefficientVal().getNumerator();
	}
	
	public long getDenominator() {
		return getCoefficientVal().getDenominator();
	}
	/*** PROTECTED REGION END ***/


	
	/*************************************** 
	 *	         Static Methods            * 
	 ***************************************/
	
	/*************************************** 
	 *	         Member Methods            * 
	 ***************************************/
	/**
	 * isl_term_get_ctx 
	 * 
	 * @generated
	**/
	public JNIISLContext getContext() {
		/*** PROTECTED REGION ID(isl_term_get_ctx) DISABLED START ***/
		JNIISLContext res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = JNIISLContext.build(ISLNative.isl_term_get_ctx(getNativePtr(this)));
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_term_copy 
	 * 
	 * @generated
	**/
	public JNIISLTerm copy() {
		/*** PROTECTED REGION ID(isl_term_copy) DISABLED START ***/
		JNIISLTerm res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = JNIISLTerm.build(ISLNative.isl_term_copy(getNativePtr(this)));
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_term_free 
	 * 
	 * @take this
	 * @generated
	**/
	public void free() {
		/*** PROTECTED REGION ID(isl_term_free) DISABLED START ***/
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				ISLNative.isl_term_free(getNativePtr(this));
			} finally {
				taken(this);
			}
		}
		
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_term_dim 
	 * 
	 * @generated
	**/
	public int getNbDims(JNIISLDimType type) {
		/*** PROTECTED REGION ID(isl_term_dim) DISABLED START ***/
		int res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = ISLNative.isl_term_dim(getNativePtr(this), type.getValue());
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_term_get_coefficient_val 
	 * 
	 * @generated
	**/
	public JNIISLVal getCoefficientVal() {
		/*** PROTECTED REGION ID(isl_term_get_coefficient_val) DISABLED START ***/
		JNIISLVal res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = JNIISLVal.build(ISLNative.isl_term_get_coefficient_val(getNativePtr(this)));
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_term_get_exp 
	 * 
	 * @generated
	**/
	public int getExponent(JNIISLDimType type, int pos) {
		/*** PROTECTED REGION ID(isl_term_get_exp) DISABLED START ***/
		int res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = ISLNative.isl_term_get_exp(getNativePtr(this), type.getValue(), pos);
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_term_get_div 
	 * 
	 * @generated
	**/
	public JNIISLAff getDiv(int pos) {
		/*** PROTECTED REGION ID(isl_term_get_div) DISABLED START ***/
		JNIISLAff res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = JNIISLAff.build(ISLNative.isl_term_get_div(getNativePtr(this), pos));
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	
	public String toString() {
		/*** PROTECTED REGION ID(ISLTerm_toString) DISABLED START ***/
			return ISLPrettyPrinter.asString(this);
		/*** PROTECTED REGION END ***/
	}
}
