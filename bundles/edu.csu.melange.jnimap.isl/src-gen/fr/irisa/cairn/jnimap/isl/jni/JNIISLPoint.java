package fr.irisa.cairn.jnimap.isl.jni;

import java.util.AbstractMap;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;

import fr.irisa.cairn.jnimap.runtime.JNIObject;


/* PROTECTED REGION ID(ISLPoint_userImport) ENABLED START */
/* PROTECTED REGION END */

/**
 *  Automatically generated by jnimap 
 * @generated
 */
public class JNIISLPoint extends JNIObject {
	
	/* @generated */
	protected JNIISLPoint(long ptr) {
		/*** PROTECTED REGION ID(ISLPoint_Constructor) DISABLED START ***/
		super(ptr);
		/*** PROTECTED REGION END ***/
	}
	
	/* @generated */
	protected static JNIISLPoint build(long ptr) {
		return new JNIISLPoint(ptr);
	}
	
	/* PROTECTED REGION ID(ISLPoint_userCode) ENABLED START */
	public int getNbDims() {
		return (int) this.getSpace().getNbDims(JNIISLDimType.isl_dim_all);
	}

	/**
	 * Return a list of integer containing values of each component of the
	 * vector (i.e. value of the iterator for each dimension), including
	 * parameters dimensions (firsts in the list);
	 * 
	 * @return
	 */
	public List<Long> getCoordinates() {
		int n = getNbDims();
		List<Long> res = new ArrayList<>(n);
		for (int i = 0; i < n; i++) {
			res.add(getCoordinateVal(JNIISLDimType.isl_dim_all, i).asLong());
		}
		return res;
	}
	/* PROTECTED REGION END */


	
	/*************************************** 
	 *	         Static Methods            * 
	 ***************************************/
	/**
	 * isl_point_zero 
	 * 
	@take dim
	 * @generated
	**/
	 public static JNIISLPoint buildZero(JNIISLSpace dim) { 
		/*** PROTECTED REGION ID(static_isl_point_zero) DISABLED START ***/
		JNIISLPoint res;
		
		synchronized(LOCK) {
			checkParameters(dim);
			try {
				res = JNIISLPoint.build(ISLNative.isl_point_zero(getNativePtr(dim)));
			} finally {
				taken(dim);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	
	/*************************************** 
	 *	         Member Methods            * 
	 ***************************************/
	/**
	 * isl_point_get_ctx 
	 * 
	 * @generated
	**/
	public JNIISLContext getContext() {
		/*** PROTECTED REGION ID(isl_point_get_ctx) DISABLED START ***/
		JNIISLContext res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = JNIISLContext.build(ISLNative.isl_point_get_ctx(getNativePtr(this)));
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_point_get_space 
	 * 
	 * @generated
	**/
	public JNIISLSpace getSpace() {
		/*** PROTECTED REGION ID(isl_point_get_space) DISABLED START ***/
		JNIISLSpace res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = JNIISLSpace.build(ISLNative.isl_point_get_space(getNativePtr(this)));
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_point_copy 
	 * 
	 * @generated
	**/
	public JNIISLPoint copy() {
		/*** PROTECTED REGION ID(isl_point_copy) DISABLED START ***/
		JNIISLPoint res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = JNIISLPoint.build(ISLNative.isl_point_copy(getNativePtr(this)));
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_point_free 
	 * 
	 * @take this
	 * @generated
	**/
	public void free() {
		/*** PROTECTED REGION ID(isl_point_free) DISABLED START ***/
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				ISLNative.isl_point_free(getNativePtr(this));
			} finally {
				taken(this);
			}
		}
		
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_point_get_coordinate_val 
	 * 
	 * @generated
	**/
	public JNIISLVal getCoordinateVal(JNIISLDimType type, int pos) {
		/*** PROTECTED REGION ID(isl_point_get_coordinate_val) DISABLED START ***/
		JNIISLVal res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = JNIISLVal.build(ISLNative.isl_point_get_coordinate_val(getNativePtr(this), type.getValue(), pos));
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_point_set_coordinate_val 
	 * 
	 * @take this v
	 * @generated
	**/
	public JNIISLPoint setCoordinate(JNIISLDimType type, int pos, JNIISLVal v) {
		/*** PROTECTED REGION ID(isl_point_set_coordinate_val) DISABLED START ***/
		JNIISLPoint res;
		
		synchronized(LOCK) {
			checkParameters(this, v);
			try {
				res = JNIISLPoint.build(ISLNative.isl_point_set_coordinate_val(getNativePtr(this), type.getValue(), pos, getNativePtr(v)));
			} finally {
				taken(this);
				taken(v);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_point_add_ui 
	 * 
	 * @take this
	 * @generated
	**/
	public JNIISLPoint add(JNIISLDimType type, int pos, int val) {
		/*** PROTECTED REGION ID(isl_point_add_ui) DISABLED START ***/
		JNIISLPoint res;
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				res = JNIISLPoint.build(ISLNative.isl_point_add_ui(getNativePtr(this), type.getValue(), pos, val));
			} finally {
				taken(this);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_point_sub_ui 
	 * 
	 * @take this
	 * @generated
	**/
	public JNIISLPoint sub(JNIISLDimType type, int pos, int val) {
		/*** PROTECTED REGION ID(isl_point_sub_ui) DISABLED START ***/
		JNIISLPoint res;
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				res = JNIISLPoint.build(ISLNative.isl_point_sub_ui(getNativePtr(this), type.getValue(), pos, val));
			} finally {
				taken(this);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	
	public String toString() {
		/*** PROTECTED REGION ID(ISLPoint_toString) DISABLED START ***/
			return ISLPrettyPrinter.asString(this);
		/*** PROTECTED REGION END ***/
	}
}
