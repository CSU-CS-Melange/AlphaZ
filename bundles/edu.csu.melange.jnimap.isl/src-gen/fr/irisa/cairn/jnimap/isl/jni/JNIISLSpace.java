package fr.irisa.cairn.jnimap.isl.jni;

import java.util.AbstractMap;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;

import fr.irisa.cairn.jnimap.runtime.JNIObject;


/*** PROTECTED REGION ID(ISLSpace_userImport) ENABLED START ***/
/*** PROTECTED REGION END ***/

/**
 *  Automatically generated by jnimap 
 * @generated
 */
public class JNIISLSpace extends JNIObject {
	
	/* @generated */
	protected JNIISLSpace(long ptr) {
		/*** PROTECTED REGION ID(ISLSpace_Constructor) DISABLED START ***/
		super(ptr);
		/*** PROTECTED REGION END ***/
	}
	
	/* @generated */
	protected static JNIISLSpace build(long ptr) {
		return new JNIISLSpace(ptr);
	}
	
	/*** PROTECTED REGION ID(ISLSpace_userCode) ENABLED START ***/
	public JNIISLLocalSpace toLocalSpace() {
		return JNIISLLocalSpace.fromSpace(this);
	}
	
	
	@Deprecated
	/**
	 * Added for compatibility. Should use getNbDim.
	 * 
	 * @param dimtype
	 * @return
	 */
	public long getSize(JNIISLDimType dimtype) {
		return getNbDims(dimtype);
	}

	public List<String> getNameList(JNIISLDimType dimtype) {
		List<String> res = new ArrayList<String>();
		for (int i = 0; i < getNbDims(dimtype); i++) {
			if (i == 0)
				res.add(getName(dimtype, i));
			else
				res.add(getName(dimtype, i));
		}
		return res;
	}

	public static JNIISLSpace alloc(int nparam, int n_in, int n_out) {
		return JNIISLSpace.alloc(JNIISLContext.getCtx(), nparam, n_in, n_out);
	}

	public static JNIISLSpace allocSet(int nparam, int dim) {
		return JNIISLSpace.allocSet(JNIISLContext.getCtx(), nparam, dim);
	}

	/**
	 * Given a space representing dimensions of a set, this function returns a
	 * new space designed for creating maps, and with same dimensions as input
	 * and output.
	 * 
	 */
	public static JNIISLSpace idMapDimFromSetDim(JNIISLSpace origSetDims) {
		int nParam = (int) origSetDims.getNbDims(JNIISLDimType.isl_dim_param);
		int nbDim = (int) origSetDims.getNbDims(JNIISLDimType.isl_dim_set);

		//init
		JNIISLSpace idMapDims = JNIISLSpace.alloc(nParam, nbDim, nbDim);

		//simply copy parameters
		for (int i = 0; i < nParam; i++) {
			String name = origSetDims.getName(JNIISLDimType.isl_dim_param, i);
			if (name != null) {
				idMapDims = idMapDims.setName(JNIISLDimType.isl_dim_param, i,
						name);
			}
		}

		//in and out dimensions are the same.
		for (int i = 0; i < nbDim; i++) {
			String name = origSetDims.getName(JNIISLDimType.isl_dim_set, i);
			if (name != null) {
				idMapDims = idMapDims
						.setName(JNIISLDimType.isl_dim_in, i, name);
				idMapDims = idMapDims.setName(JNIISLDimType.isl_dim_out, i,
						name);
			}
		}

		//set tuple name
		String tupleName = origSetDims.getTupleName(JNIISLDimType.isl_dim_set);
		if (tupleName != null) {
			idMapDims = idMapDims.setTupleName(JNIISLDimType.isl_dim_in, tupleName);
			idMapDims = idMapDims.setTupleName(JNIISLDimType.isl_dim_out, tupleName);
		}

		return idMapDims;
	}

	/**
	 * This function is used to isolate parameters from a given space, and
	 * return a new space for creating "map" with only parameters. For example,
	 * given the space [M,N] -> {[i,j] -> [i',j']} the function will return
	 * [M,N] -> {[] -> []}.
	 * 
	 * @param origSpace
	 * @return
	 */
	public static JNIISLSpace copySpaceParamsForMap(JNIISLSpace origSpace) {
		return copySpaceParams(origSpace, false);
	}

	/**
	 * This function is used to isolate parameters from a given space, and
	 * return a new space for creating "set" with only parameters. For example,
	 * given the space [M,N] -> {[i,j]} the function will return [M,N] -> {[]}.
	 * 
	 * @param origSpace
	 * @return
	 */
	public static JNIISLSpace copySpaceParamsForSet(JNIISLSpace origSpace) {
		return copySpaceParams(origSpace, true);
	}

	private static JNIISLSpace copySpaceParams(JNIISLSpace origSpace,
			boolean set) {
		int nParam = (int) origSpace.getNbDims(JNIISLDimType.isl_dim_param);
		JNIISLSpace paramOnlySpace = set
				? JNIISLSpace.allocSet(nParam, 0)
				: JNIISLSpace.alloc(nParam, 0, 0);
		//simply copy parameters
		for (int i = 0; i < nParam; i++) {
			String name = origSpace.getName(JNIISLDimType.isl_dim_param, i);
			if (name != null) {
				paramOnlySpace = paramOnlySpace.setName(
						JNIISLDimType.isl_dim_param, i, name);
			}
		}
		return paramOnlySpace;
	}
	
	/**
	 * Given a set space, builds a map in which 'in' and 'out' dimensions are
	 * equals from 0 to 'dim'-1, and 'in' > 'out' for dimension 'dim'. For
	 * instance, given the space { [i,j,k]Â } and dim=2, this method builds the
	 * map { [i,j,k] -> [i',j',k'] : i' = i && j > j' }
	 * 
	 * @param dim
	 * @return
	 */
	public JNIISLMap lexLTAt(int dim) {
		if (!this.isSetSpace()) 
			throw new IllegalArgumentException("This method applies only on set spaces");
		if (dim < 0) 
			throw new IllegalArgumentException("dim has to be greater than 0");
		
		JNIISLSpace space = JNIISLSpace.idMapDimFromSetDim(this.copy());
		int size = space.getNbDims(JNIISLDimType.isl_dim_set);
		if (dim > size) dim = size;
		JNIISLBasicMap res = JNIISLBasicMap.buildUniverse(space.copy());
		for (int i = 0; i < dim; i++) {
			res = res.addConstraint(JNIISLConstraint.dimEqual(space.copy(), i));
		}
		res = res.addConstraint(JNIISLConstraint.dimLessThan(space.copy(), dim, 1));
		return res.toMap();
	}
	
	/**
	 * @deprecated no longer exists in isl
	 */
	@Deprecated
	public boolean isCompatibleWith(JNIISLSpace space) {
		//isl-0.12 code:
//		return dim1->nparam == dim2->nparam &&
//		       dim1->n_in + dim1->n_out == dim2->n_in + dim2->n_out;
		
		return 	this.getNbDims(JNIISLDimType.isl_dim_param) == space.getNbDims(JNIISLDimType.isl_dim_param) &&
				this.getNbDims(JNIISLDimType.isl_dim_in) + this.getNbDims(JNIISLDimType.isl_dim_out) == 
						space.getNbDims(JNIISLDimType.isl_dim_in) + space.getNbDims(JNIISLDimType.isl_dim_out);
	}
	
	/*** PROTECTED REGION END ***/


	
	/*************************************** 
	 *	         Static Methods            * 
	 ***************************************/
	/**
	 * isl_space_alloc 
	 * 
	 * @generated
	**/
	 public static JNIISLSpace alloc(JNIISLContext ctx, int nparam, int n_in, int n_out) { 
		/*** PROTECTED REGION ID(static_isl_space_alloc) DISABLED START ***/
		JNIISLSpace res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = JNIISLSpace.build(ISLNative.isl_space_alloc(getNativePtr(ctx), nparam, n_in, n_out));
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_space_params_alloc 
	 * 
	 * @generated
	**/
	 public static JNIISLSpace allocParams(JNIISLContext ctx, int nparam) { 
		/*** PROTECTED REGION ID(static_isl_space_params_alloc) DISABLED START ***/
		JNIISLSpace res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = JNIISLSpace.build(ISLNative.isl_space_params_alloc(getNativePtr(ctx), nparam));
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_space_set_alloc 
	 * 
	 * @generated
	**/
	 public static JNIISLSpace allocSet(JNIISLContext ctx, int nparam, int dim) { 
		/*** PROTECTED REGION ID(static_isl_space_set_alloc) DISABLED START ***/
		JNIISLSpace res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = JNIISLSpace.build(ISLNative.isl_space_set_alloc(getNativePtr(ctx), nparam, dim));
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	
	/*************************************** 
	 *	         Member Methods            * 
	 ***************************************/
	/**
	 * isl_space_get_ctx 
	 * 
	 * @generated
	**/
	public JNIISLContext getContext() {
		/*** PROTECTED REGION ID(isl_space_get_ctx) DISABLED START ***/
		JNIISLContext res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = JNIISLContext.build(ISLNative.isl_space_get_ctx(getNativePtr(this)));
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_space_copy 
	 * 
	 * @generated
	**/
	public JNIISLSpace copy() {
		/*** PROTECTED REGION ID(isl_space_copy) DISABLED START ***/
		JNIISLSpace res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = JNIISLSpace.build(ISLNative.isl_space_copy(getNativePtr(this)));
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_space_free 
	 * 
	 * @take this
	 * @generated
	**/
	public void free() {
		/*** PROTECTED REGION ID(isl_space_free) DISABLED START ***/
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				ISLNative.isl_space_free(getNativePtr(this));
			} finally {
				taken(this);
			}
		}
		
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_space_dim 
	 * 
	 * @generated
	**/
	public int getNbDims(JNIISLDimType type) {
		/*** PROTECTED REGION ID(isl_space_dim) DISABLED START ***/
		int res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = ISLNative.isl_space_dim(getNativePtr(this), type.getValue());
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_space_is_params 
	 * 
	 * @generated
	**/
	public boolean isParamSpace() {
		/*** PROTECTED REGION ID(isl_space_is_params) DISABLED START ***/
		boolean res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = ISLNative.isl_space_is_params(getNativePtr(this)) != 0;
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_space_is_set 
	 * 
	 * @generated
	**/
	public boolean isSetSpace() {
		/*** PROTECTED REGION ID(isl_space_is_set) DISABLED START ***/
		boolean res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = ISLNative.isl_space_is_set(getNativePtr(this)) != 0;
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_space_is_map 
	 * 
	 * @generated
	**/
	public boolean isMapSpace() {
		/*** PROTECTED REGION ID(isl_space_is_map) DISABLED START ***/
		boolean res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = ISLNative.isl_space_is_map(getNativePtr(this)) != 0;
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_space_is_equal 
	 * 
	 * @generated
	**/
	public boolean isEqual(JNIISLSpace space2) {
		/*** PROTECTED REGION ID(isl_space_is_equal) DISABLED START ***/
		boolean res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = ISLNative.isl_space_is_equal(getNativePtr(this), getNativePtr(space2)) != 0;
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_space_is_domain 
	 * 
	 * @generated
	**/
	public boolean isDomain(JNIISLSpace space2) {
		/*** PROTECTED REGION ID(isl_space_is_domain) DISABLED START ***/
		boolean res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = ISLNative.isl_space_is_domain(getNativePtr(this), getNativePtr(space2)) != 0;
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_space_is_range 
	 * 
	 * @generated
	**/
	public boolean isRange(JNIISLSpace space2) {
		/*** PROTECTED REGION ID(isl_space_is_range) DISABLED START ***/
		boolean res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = ISLNative.isl_space_is_range(getNativePtr(this), getNativePtr(space2)) != 0;
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_space_set_dim_name 
	 * 
	 * @take this
	 * @generated
	**/
	public JNIISLSpace setName(JNIISLDimType type, int pos, String name) {
		/*** PROTECTED REGION ID(isl_space_set_dim_name) DISABLED START ***/
		JNIISLSpace res;
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				res = JNIISLSpace.build(ISLNative.isl_space_set_dim_name(getNativePtr(this), type.getValue(), pos, name));
			} finally {
				taken(this);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_space_get_dim_name 
	 * 
	 * @generated
	**/
	public String getName(JNIISLDimType type, int pos) {
		/*** PROTECTED REGION ID(isl_space_get_dim_name) DISABLED START ***/
		String res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = ISLNative.isl_space_get_dim_name(getNativePtr(this), type.getValue(), pos);
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_space_has_dim_name 
	 * 
	 * @generated
	**/
	public boolean hasName(JNIISLDimType type, int pos) {
		/*** PROTECTED REGION ID(isl_space_has_dim_name) DISABLED START ***/
		boolean res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = ISLNative.isl_space_has_dim_name(getNativePtr(this), type.getValue(), pos) != 0;
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_space_find_dim_by_name 
	 * 
	 * @generated
	**/
	public int findDimByName(JNIISLDimType type, String name) {
		/*** PROTECTED REGION ID(isl_space_find_dim_by_name) DISABLED START ***/
		int res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = ISLNative.isl_space_find_dim_by_name(getNativePtr(this), type.getValue(), name);
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_space_set_tuple_name 
	 * 
	 * @take this
	 * @generated
	**/
	public JNIISLSpace setTupleName(JNIISLDimType type, String s) {
		/*** PROTECTED REGION ID(isl_space_set_tuple_name) DISABLED START ***/
		JNIISLSpace res;
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				res = JNIISLSpace.build(ISLNative.isl_space_set_tuple_name(getNativePtr(this), type.getValue(), s));
			} finally {
				taken(this);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_space_get_tuple_name 
	 * 
	 * @generated
	**/
	public String getTupleName(JNIISLDimType type) {
		/*** PROTECTED REGION ID(isl_space_get_tuple_name) DISABLED START ***/
		String res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = ISLNative.isl_space_get_tuple_name(getNativePtr(this), type.getValue());
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_space_has_tuple_name 
	 * 
	 * @generated
	**/
	public int hasTupleName(JNIISLDimType type) {
		/*** PROTECTED REGION ID(isl_space_has_tuple_name) DISABLED START ***/
		int res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = ISLNative.isl_space_has_tuple_name(getNativePtr(this), type.getValue());
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_space_is_wrapping 
	 * 
	 * @generated
	**/
	public boolean isWrapping() {
		/*** PROTECTED REGION ID(isl_space_is_wrapping) DISABLED START ***/
		boolean res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = ISLNative.isl_space_is_wrapping(getNativePtr(this)) != 0;
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_space_domain_is_wrapping 
	 * 
	 * @generated
	**/
	public boolean domainIsWrapping() {
		/*** PROTECTED REGION ID(isl_space_domain_is_wrapping) DISABLED START ***/
		boolean res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = ISLNative.isl_space_domain_is_wrapping(getNativePtr(this)) != 0;
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_space_range_is_wrapping 
	 * 
	 * @generated
	**/
	public boolean rangeIsWrapping() {
		/*** PROTECTED REGION ID(isl_space_range_is_wrapping) DISABLED START ***/
		boolean res;
		
		synchronized(LOCK) {
			checkParameters();
			try {
				res = ISLNative.isl_space_range_is_wrapping(getNativePtr(this)) != 0;
			} finally {
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_space_domain 
	 * 
	 * @take this
	 * @generated
	**/
	public JNIISLSpace domain() {
		/*** PROTECTED REGION ID(isl_space_domain) DISABLED START ***/
		JNIISLSpace res;
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				res = JNIISLSpace.build(ISLNative.isl_space_domain(getNativePtr(this)));
			} finally {
				taken(this);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_space_from_domain 
	 * 
	 * @take this
	 * @generated
	**/
	public JNIISLSpace fromDomain() {
		/*** PROTECTED REGION ID(isl_space_from_domain) DISABLED START ***/
		JNIISLSpace res;
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				res = JNIISLSpace.build(ISLNative.isl_space_from_domain(getNativePtr(this)));
			} finally {
				taken(this);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_space_range 
	 * 
	 * @take this
	 * @generated
	**/
	public JNIISLSpace range() {
		/*** PROTECTED REGION ID(isl_space_range) DISABLED START ***/
		JNIISLSpace res;
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				res = JNIISLSpace.build(ISLNative.isl_space_range(getNativePtr(this)));
			} finally {
				taken(this);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_space_from_range 
	 * 
	 * @take this
	 * @generated
	**/
	public JNIISLSpace fromRange() {
		/*** PROTECTED REGION ID(isl_space_from_range) DISABLED START ***/
		JNIISLSpace res;
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				res = JNIISLSpace.build(ISLNative.isl_space_from_range(getNativePtr(this)));
			} finally {
				taken(this);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_space_domain_map 
	 * 
	 * @take this
	 * @generated
	**/
	public JNIISLSpace domainMap() {
		/*** PROTECTED REGION ID(isl_space_domain_map) DISABLED START ***/
		JNIISLSpace res;
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				res = JNIISLSpace.build(ISLNative.isl_space_domain_map(getNativePtr(this)));
			} finally {
				taken(this);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_space_range_map 
	 * 
	 * @take this
	 * @generated
	**/
	public JNIISLSpace rangeMap() {
		/*** PROTECTED REGION ID(isl_space_range_map) DISABLED START ***/
		JNIISLSpace res;
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				res = JNIISLSpace.build(ISLNative.isl_space_range_map(getNativePtr(this)));
			} finally {
				taken(this);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_space_params 
	 * 
	 * @take this
	 * @generated
	**/
	public JNIISLSpace params() {
		/*** PROTECTED REGION ID(isl_space_params) DISABLED START ***/
		JNIISLSpace res;
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				res = JNIISLSpace.build(ISLNative.isl_space_params(getNativePtr(this)));
			} finally {
				taken(this);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_space_set_from_params 
	 * 
	 * @take this
	 * @generated
	**/
	public JNIISLSpace setFromParams() {
		/*** PROTECTED REGION ID(isl_space_set_from_params) DISABLED START ***/
		JNIISLSpace res;
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				res = JNIISLSpace.build(ISLNative.isl_space_set_from_params(getNativePtr(this)));
			} finally {
				taken(this);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_space_reverse 
	 * 
	 * @take this
	 * @generated
	**/
	public JNIISLSpace reverse() {
		/*** PROTECTED REGION ID(isl_space_reverse) DISABLED START ***/
		JNIISLSpace res;
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				res = JNIISLSpace.build(ISLNative.isl_space_reverse(getNativePtr(this)));
			} finally {
				taken(this);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_space_join 
	 * 
	 * @take this right
	 * @generated
	**/
	public JNIISLSpace join(JNIISLSpace right) {
		/*** PROTECTED REGION ID(isl_space_join) DISABLED START ***/
		JNIISLSpace res;
		
		synchronized(LOCK) {
			checkParameters(this, right);
			try {
				res = JNIISLSpace.build(ISLNative.isl_space_join(getNativePtr(this), getNativePtr(right)));
			} finally {
				taken(this);
				taken(right);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_space_align_params 
	 * 
	 * @take this space2
	 * @generated
	**/
	public JNIISLSpace alignParams(JNIISLSpace space2) {
		/*** PROTECTED REGION ID(isl_space_align_params) DISABLED START ***/
		JNIISLSpace res;
		
		synchronized(LOCK) {
			checkParameters(this, space2);
			try {
				res = JNIISLSpace.build(ISLNative.isl_space_align_params(getNativePtr(this), getNativePtr(space2)));
			} finally {
				taken(this);
				taken(space2);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_space_insert_dims 
	 * 
	 * @take this
	 * @generated
	**/
	public JNIISLSpace insertDims(JNIISLDimType type, int pos, int n) {
		/*** PROTECTED REGION ID(isl_space_insert_dims) DISABLED START ***/
		JNIISLSpace res;
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				res = JNIISLSpace.build(ISLNative.isl_space_insert_dims(getNativePtr(this), type.getValue(), pos, n));
			} finally {
				taken(this);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_space_add_dims 
	 * 
	 * @take this
	 * @generated
	**/
	public JNIISLSpace addDims(JNIISLDimType type, int n) {
		/*** PROTECTED REGION ID(isl_space_add_dims) DISABLED START ***/
		JNIISLSpace res;
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				res = JNIISLSpace.build(ISLNative.isl_space_add_dims(getNativePtr(this), type.getValue(), n));
			} finally {
				taken(this);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_space_drop_dims 
	 * 
	 * @take this
	 * @generated
	**/
	public JNIISLSpace dropDims(JNIISLDimType type, int first, int n) {
		/*** PROTECTED REGION ID(isl_space_drop_dims) DISABLED START ***/
		JNIISLSpace res;
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				res = JNIISLSpace.build(ISLNative.isl_space_drop_dims(getNativePtr(this), type.getValue(), first, n));
			} finally {
				taken(this);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_space_move_dims 
	 * 
	 * @take this
	 * @generated
	**/
	public JNIISLSpace moveDims(JNIISLDimType dst_type, int dst_pos, JNIISLDimType src_type, int src_pos, int n) {
		/*** PROTECTED REGION ID(isl_space_move_dims) DISABLED START ***/
		JNIISLSpace res;
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				res = JNIISLSpace.build(ISLNative.isl_space_move_dims(getNativePtr(this), dst_type.getValue(), dst_pos, src_type.getValue(), src_pos, n));
			} finally {
				taken(this);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_space_map_from_set 
	 * 
	 * @take this
	 * @generated
	**/
	public JNIISLSpace mapFromSet() {
		/*** PROTECTED REGION ID(isl_space_map_from_set) DISABLED START ***/
		JNIISLSpace res;
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				res = JNIISLSpace.build(ISLNative.isl_space_map_from_set(getNativePtr(this)));
			} finally {
				taken(this);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_space_map_from_domain_and_range 
	 * 
	 * @take this range
	 * @generated
	**/
	public JNIISLSpace mapFromDomainAndRange(JNIISLSpace range) {
		/*** PROTECTED REGION ID(isl_space_map_from_domain_and_range) DISABLED START ***/
		JNIISLSpace res;
		
		synchronized(LOCK) {
			checkParameters(this, range);
			try {
				res = JNIISLSpace.build(ISLNative.isl_space_map_from_domain_and_range(getNativePtr(this), getNativePtr(range)));
			} finally {
				taken(this);
				taken(range);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_space_wrap 
	 * 
	 * @take this
	 * @generated
	**/
	public JNIISLSpace wrap() {
		/*** PROTECTED REGION ID(isl_space_wrap) DISABLED START ***/
		JNIISLSpace res;
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				res = JNIISLSpace.build(ISLNative.isl_space_wrap(getNativePtr(this)));
			} finally {
				taken(this);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_space_unwrap 
	 * 
	 * @take this
	 * @generated
	**/
	public JNIISLSpace unwrap() {
		/*** PROTECTED REGION ID(isl_space_unwrap) DISABLED START ***/
		JNIISLSpace res;
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				res = JNIISLSpace.build(ISLNative.isl_space_unwrap(getNativePtr(this)));
			} finally {
				taken(this);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_space_product 
	 * 
	 * @take this right
	 * @generated
	**/
	public JNIISLSpace product(JNIISLSpace right) {
		/*** PROTECTED REGION ID(isl_space_product) DISABLED START ***/
		JNIISLSpace res;
		
		synchronized(LOCK) {
			checkParameters(this, right);
			try {
				res = JNIISLSpace.build(ISLNative.isl_space_product(getNativePtr(this), getNativePtr(right)));
			} finally {
				taken(this);
				taken(right);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_map_lex_lt 
	 * 
	 * @take this
	 * @generated
	**/
	public JNIISLMap lexLT() {
		/*** PROTECTED REGION ID(isl_map_lex_lt) DISABLED START ***/
		JNIISLMap res;
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				res = JNIISLMap.build(ISLNative.isl_map_lex_lt(getNativePtr(this)));
			} finally {
				taken(this);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_map_lex_le 
	 * 
	 * @take this
	 * @generated
	**/
	public JNIISLMap lexLE() {
		/*** PROTECTED REGION ID(isl_map_lex_le) DISABLED START ***/
		JNIISLMap res;
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				res = JNIISLMap.build(ISLNative.isl_map_lex_le(getNativePtr(this)));
			} finally {
				taken(this);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_map_lex_gt 
	 * 
	 * @take this
	 * @generated
	**/
	public JNIISLMap lexGT() {
		/*** PROTECTED REGION ID(isl_map_lex_gt) DISABLED START ***/
		JNIISLMap res;
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				res = JNIISLMap.build(ISLNative.isl_map_lex_gt(getNativePtr(this)));
			} finally {
				taken(this);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_map_lex_ge 
	 * 
	 * @take this
	 * @generated
	**/
	public JNIISLMap lexGE() {
		/*** PROTECTED REGION ID(isl_map_lex_ge) DISABLED START ***/
		JNIISLMap res;
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				res = JNIISLMap.build(ISLNative.isl_map_lex_ge(getNativePtr(this)));
			} finally {
				taken(this);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_map_lex_lt_first 
	 * 
	 * @take this
	 * @generated
	**/
	public JNIISLMap lexLTfirst(int n) {
		/*** PROTECTED REGION ID(isl_map_lex_lt_first) DISABLED START ***/
		JNIISLMap res;
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				res = JNIISLMap.build(ISLNative.isl_map_lex_lt_first(getNativePtr(this), n));
			} finally {
				taken(this);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_map_lex_le_first 
	 * 
	 * @take this
	 * @generated
	**/
	public JNIISLMap lexLEfirst(int n) {
		/*** PROTECTED REGION ID(isl_map_lex_le_first) DISABLED START ***/
		JNIISLMap res;
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				res = JNIISLMap.build(ISLNative.isl_map_lex_le_first(getNativePtr(this), n));
			} finally {
				taken(this);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_map_lex_gt_first 
	 * 
	 * @take this
	 * @generated
	**/
	public JNIISLMap lexGTfirst(int n) {
		/*** PROTECTED REGION ID(isl_map_lex_gt_first) DISABLED START ***/
		JNIISLMap res;
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				res = JNIISLMap.build(ISLNative.isl_map_lex_gt_first(getNativePtr(this), n));
			} finally {
				taken(this);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	/**
	 * isl_map_lex_ge_first 
	 * 
	 * @take this
	 * @generated
	**/
	public JNIISLMap lexGEfirst(int n) {
		/*** PROTECTED REGION ID(isl_map_lex_ge_first) DISABLED START ***/
		JNIISLMap res;
		
		synchronized(LOCK) {
			checkParameters(this);
			try {
				res = JNIISLMap.build(ISLNative.isl_map_lex_ge_first(getNativePtr(this), n));
			} finally {
				taken(this);
			}
		}
		
		return res;
		/*** PROTECTED REGION END ***/
	}
	
	
	public String toString() {
		/*** PROTECTED REGION ID(ISLSpace_toString) DISABLED START ***/
			return ISLPrettyPrinter.asString(this);
		/*** PROTECTED REGION END ***/
	}
}
