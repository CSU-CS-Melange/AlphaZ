affine kernel_lu_scop_0 {n|n>=2}
	input
		double A {i0,i1|i1>=0 && i0>=0 && -i0+n-1>=0 && -i1+n-1>=0 && n-2>=0};
	local
		double S0 {k,j|-k+j-1>=0 && -j+n-1>=0 && k>=0 && -k+n-1>=0 && n>=2};
		double S1 {k,i,j|-k+j-1>=0 && -j+n-1>=0 && -k+i-1>=0 && -i+n-1>=0 && k>=0 && -k+n-1>=0 && n>=2};
	let
		S0[k, j] = (case {k,j|k-1>=0 && -k+j-1>=0 && -j+n-1>=0} : S1[k-1, k, j]; {k,j|k==0} : A[k, j]; esac /case {k,j|k-1>=0 && -k+j-1>=0 && -j+n-1>=0} : S1[k-1, k, k]; {k,j|k==0} : A[k, k]; esac);
		S1[k, i, j] = (case {k,i,j|-k+i-1>=0 && -i+n-1>=0 && k-1>=0 && -k+j-1>=0 && -j+n-1>=0} : S1[k-1, i, j]; {k,i,j|k==0} : A[i, j]; esac -(case {k,i,j|-k+i-1>=0 && -i+n-1>=0 && k-1>=0 && -k+j-1>=0 && -j+n-1>=0} : S1[k-1, i, k]; {k,i,j|k==0} : A[i, k]; esac *S0[k, j]));
.
