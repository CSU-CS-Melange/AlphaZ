affine scop_new {ny,nx|ny-2>=0 && nx-2>=0}
input
double A {i0,i1|-i1+ny-1>=0 && -i0+nx-1>=0 && i1>=0 && i0>=0};
double x {i0|i0>=0 && -i0+ny-1>=0};
output
local
double S0 {i|i>=0 && -i+ny-1>=0};
double S1 {i|i>=0 && -i+nx-1>=0};
double S2 {i,j|-j+ny-1>=0 && -i+nx-1>=0 && j>=0 && i>=0};
double S3 {i,j|-j+ny-1>=0 && -i+nx-1>=0 && j>=0 && i>=0};
let
S0[i] = [0];
S1[i] = [0];
S2[i,j] = case
{|j==0} : (S1[i] + (A * x[j]));
{|j-1>=0} : (S2[i,j-1] + (A * x[j]));
esac;
S3[i,j] = case
{|i==0} : (S0[j] + (A * S2[i,ny-1]));
{|i-1>=0} : (S3[i-1,j] + (A * S2[i,ny-1]));
esac;
.
