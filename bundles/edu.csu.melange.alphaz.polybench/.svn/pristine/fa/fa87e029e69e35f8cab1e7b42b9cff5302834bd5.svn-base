affine jacobi-2d-imper {tsteps,n| tsteps-2>=0 && n-2>=0 }
	given
		double A {i0,i1| i0-i1+n-2>=0 && i0+i1-1>=0 && i1>=0 && i0>=0 && -i0+n-1>=0 && -i1+n-1>=0 && -i0-i1+2n-3>=0 &&
		-i0+i1+n-2>=0 } ;
	using
		double S0 {t,i,j| -t+tsteps-1>=0 && t>=0 && j-1>=0 && i-1>=0 && -i+n-2>=0 && -j+n-2>=0 } ;
		double S1 {t,i,j| -t+tsteps-1>=0 && t>=0 && j-1>=0 && i-1>=0 && -i+n-2>=0 && -j+n-2>=0 } ;
	through
		S0[t,i,j] = case
			{ | t-1>=0 && -i+n-3>=0 && j-2>=0 && i-2>=0 && -j+n-3>=0 } : 0.2 * (S1[t-1,i,j] + S1[t-1,i,j-1] + S1[t-1,i,j+1] +
			S1[t-1,i+1,j] + S1[t-1,i-1,j]) ;
			{ | i-1==0 && j-2>=0 && t-1>=0 && -j+n-3>=0 } : 0.2 * (S1[t-1,i,j] + S1[t-1,i,j-1] + S1[t-1,i,j+1] + S1[t-1,i+1,j] +
			A[i-1,j]) ;
			{ | i-n+2==0 && j-2>=0 && t-1>=0 && -j+n-3>=0 } : 0.2 * (S1[t-1,i,j] + S1[t-1,i,j-1] + S1[t-1,i,j+1] + A[i+1,j] +
			S1[t-1,i-1,j]) ;
			{ | j-n+2==0 && i-2>=0 && -i+n-3>=0 && t-1>=0 } : 0.2 * (S1[t-1,i,j] + S1[t-1,i,j-1] + A[i,j+1] + S1[t-1,i+1,j] +
			S1[t-1,i-1,j]) ;
			{ | j-n+2==0 && i-1==0 && t-1>=0 && n-4>=0 } : 0.2 * (S1[t-1,i,j] + S1[t-1,i,j-1] + A[i,j+1] + S1[t-1,i+1,j] +
			A[i-1,j]) ;
			{ | j-n+2==0 && i-n+2==0 && t-1>=0 && n-4>=0 } : 0.2 * (S1[t-1,i,j] + S1[t-1,i,j-1] + A[i,j+1] + A[i+1,j] +
			S1[t-1,i-1,j]) ;
			{ | j-1==0 && i-2>=0 && -i+n-3>=0 && t-1>=0 } : 0.2 * (S1[t-1,i,j] + A[i,j-1] + S1[t-1,i,j+1] + S1[t-1,i+1,j] +
			S1[t-1,i-1,j]) ;
			{ | j-1==0 && i-1==0 && t-1>=0 && n-4>=0 } : 0.2 * (S1[t-1,i,j] + A[i,j-1] + S1[t-1,i,j+1] + S1[t-1,i+1,j] +
			A[i-1,j]) ;
			{ | j-1==0 && i-n+2==0 && t-1>=0 && n-4>=0 } : 0.2 * (S1[t-1,i,j] + A[i,j-1] + S1[t-1,i,j+1] + A[i+1,j] +
			S1[t-1,i-1,j]) ;
			{ | j-1==0 && i-1==0 && n-3==0 && t-1>=0 } : 0.2 * (S1[t-1,i,j] + A[i,j-1] + A[i,j+1] + A[i+1,j] + A[i-1,j]) ;
			{ | t==0 } : 0.2 * (A[i,j] + A[i,j-1] + A[i,j+1] + A[i+1,j] + A[i-1,j]) ;
		esac;
		S1[t,i,j] = case
			{ | t-1>=0 } : S0 ;
			{ | t==0 } : S0[0,i,j] ;
		esac;
.