double sqrt (,double) ;
affine gramschmidt {nj,ni| nj-2>=0 && ni-2>=0 }
	input
		double A {i0,i1| -i1+nj-1>=0 && -i0+ni-1>=0 && i1>=0 && i0>=0 } ;
	local
		double S1 {i0,i1,i2| -2i0+i1+1==0 && -i0+nj-1>=0 && i2+2ni>=0 && i0>=0 && -i2-ni-2>=0 } ;
		double S2 {i0,i1,i2| i2+ni==0 && -2i0+i1+1==0 && i0>=0 && -i0+nj-1>=0 } ;
		double S3 {i0,i1,i2| -2i0+i1+1==0 && -i0+nj-1>=0 && i2+ni-1>=0 && -i2>=0 && i0>=0 } ;
		double S5 {i0,i1,i2| -i2+ni-2>=0 && i0>=0 && i2>=0 && i0-i1+nj-1>=0 && -2i0+i1-1>=0 } ;
		double S6 {i0,i1,i2| i2-2ni>=0 && i0>=0 && i0-i1+nj-1>=0 && -2i0+i1-2>=0 && -i2+3ni-1>=0 } ;
		double S3_uni1A {i0,i1,i2| -i2+ni-1>=0 && i0>=0 && i2>=0 && -2i0+i1>=0 && i0-i1+nj-1>=0 } ;
		double S2_uni1B {i0,i1,i2| -2i0+i1+1==0 && -i0+nj-1>=0 && i2+ni>=0 && -i2>=0 && i0>=0 } ;
		double S5_uni1B {i0,i1,i2| -i2+2ni>=0 && i0>=0 && i0-i1+nj-1>=0 && -2i0+i1-1>=0 && i2-ni>=0 } ;
		double S1_bound {i0,i1,i2| i2+ni+1==0 && -2i0+i1+1==0 && i0>=0 && -i0+nj-1>=0 } ;
		double S5_bound {i0,i1,i2| i2-ni+1==0 && -2i0+i1-1>=0 && i0>=0 && i0-i1+nj-1>=0 } ;
		double S6_bound {i0,i1,i2| -2i0+i1-1==0 && -i2+3ni-1>=0 && i2-2ni>=0 && i0>=0 && -i0+nj-2>=0 } ;
	let
		S1[i0,i1,i2] = case
			{ | i2+2ni==0 && i0==0 } :[0]+ A[i1-i0+1,i0] * A[i1-i0+1,i0] ;
			{ | i2+2ni==0 && i0-1>=0 } :[0]+ S6_bound[-i0+i1,i1,i2+4ni] * S6_bound[-i0+i1,i1,i2+4ni] ;
			{ | i0==0 && i2+2ni-1>=0 } : S1[i0,i1,i2-1] + A[i2+2ni,i0] * A[i2+2ni,i0] ;
			{ | i2+2ni-1>=0 && i0-1>=0 } : S1[i0,i1,i2-1] + S6_bound[-i0+i1,i1,i2+4ni] * S6_bound[-i0+i1,i1,i2+4ni] ;
		esac;
		S2[i0,i1,i2] = { | i2+ni==0 && -2i0+i1+1==0 && i0>=0 && -i0+nj-1>=0 } : sqrt (S1_bound[i0,i1,-2i0+i1-i2-2ni]);
		S3[i0,i1,i2] = case
			{ | i0-1>=0 } : S6_bound[-i0+i1,i1,-i2+2ni] / S2_uni1B ;
			{ | i0==0 } : A[-i2,i0] / S2_uni1B ;
		esac;
		S5[i0,i1,i2] = case
			{ | i2==0 && i0-1>=0 } :[0]+ S3_uni1A * S6[i0-1,i1-1,i2+2ni] ;
			{ | i2==0 && i0==0 } :[0]+ S3_uni1A * A[i0,i1-i0] ;
			{ | i0-1>=0 && i2-1>=0 } : S5[i0,i1,i2-1] + S3_uni1A * S6[i0-1,i1-1,i2+2ni] ;
			{ | i0==0 && i2-1>=0 } : S5[i0,i1,i2-1] + S3_uni1A * A[i2,i1-i0] ;
		esac;
		S6[i0,i1,i2] = case
			{ | i0-1>=0 } : S6[i0-1,i1-1,i2] - S3_uni1A[i0,i1,i2-2ni] * S5_uni1B[i0,i1,4ni-i2] ;
			{ | i0==0 } : A[i2-2ni,i1-i0] - S3_uni1A[i0,i1,i2-2ni] * S5_uni1B[i0,i1,4ni-i2] ;
		esac;
		S3_uni1A[i0,i1,i2] = case
			{ | -2i0+i1==0 } : S3[i1-i0,i1-1,-i2] ;
			{ | -2i0+i1-1>=0 } : S3_uni1A[i0,i1-1,i2] ;
		esac;
		S2_uni1B[i0,i1,i2] = case
			{ | i2+ni==0 } : S2[i0,i1,i1+i2-2i0+1] ;
			{ | i2+ni-1>=0 } : S2_uni1B[i0,i1,i2-1] ;
		esac;
		S5_uni1B[i0,i1,i2] = case
			{ | i2-ni==0 } : S5_bound[i0,i1,-i2+2ni-1] ;
			{ | i2-ni-1>=0 } : S5_uni1B[i0,i1,i2-1] ;
		esac;
		S1_bound[i0,i1,i2] = case
			{ | i0==0 } : S1[i0,i1,i2-1] + A[i2+2ni,i0] * A[i2+2ni,i0] ;
			{ | i0-1>=0 } : S1[i0,i1,i2-1] + S6_bound[-i0+i1,i1,i2+4ni] * S6_bound[-i0+i1,i1,i2+4ni] ;
		esac;
		S5_bound[i0,i1,i2] = case
			{ | i0-1>=0 } : S5[i0,i1,i2-1] + S3_uni1A * S6[i0-1,i1-1,i2+2ni] ;
			{ | i0==0 } : S5[i0,i1,i2-1] + S3_uni1A * A[i2,i1-i0] ;
		esac;
		S6_bound[i0,i1,i2] = case
			{ | i0-1>=0 } : S6[i0-1,i1-1,i2] - S3_uni1A[i0,i1,i2-2ni] * S5_uni1B[i0,i1,4ni-i2] ;
			{ | i0==0 } : A[i2-2ni,i1-i0] - S3_uni1A[i0,i1,i2-2ni] * S5_uni1B[i0,i1,4ni-i2] ;
		esac;
.