affine fdtd-2d {tmax,ny,nx| tmax-2>=0 && ny-2>=0 && nx-2>=0 }
	input
		double _fict_ {i0| -i0+tmax-1>=0 && i0>=0 } ;
		double ex {i0,i1| -i0+nx-1>=0 && -i1+ny-1>=0 && -i0+i1+nx-2>=0 && i1>=0 && i0>=0 } ;
		double ey {i0,i1| -i0+nx-1>=0 && i0-1>=0 && -i1+ny-1>=0 && i1>=0 } ;
		double hz {i0,i1| i0>=0 && -i0+nx-1>=0 && -i1+ny-1>=0 && i1>=0 } ;
	local
		double S0 {i0,i1,i2| -i0+i1==0 && i0-i2>=0 && -i0+tmax-1>=0 && -i0+i2+ny-1>=0 && i0>=0 } ;
		double S1 {i0,i1,i2| -i0+tmax-1>=0 && i0>=0 && i0-i1-1>=0 && i1-i2>=0 && -i1+i2+ny-1>=0 && -i0+i1+nx-1>=0 } ;
		double S2 {i0,i1,i2| -i0+tmax-1>=0 && i0>=0 && i1-i2-1>=0 && i0-i1>=0 && -i1+i2+ny-1>=0 && -i0+i1+nx-1>=0 } ;
		double S3 {i0,i1,i2| -i0+tmax-1>=0 && i0>=0 && -i0+i1+nx-2>=0 && i0-i1>=0 && i1-i2>=0 && -i1+i2+ny-2>=0 } ;
	let
		S0[i0,i1,i2] = _fict_[i0];
		S1[i0,i1,i2] = case
			{ | -i0+i1+nx-2>=0 && i0-1>=0 && -i1+i2+ny-2>=0 } : S1[i0-1,i1-1,i2-1] - 0.5 * (S3[i0-1,i1-1,i2-1] - S3[i0-1,i1,i2])
			;
			{ | -i0+i1+nx-1==0 && -i0+i2+ny+nx-3>=0 && i0-1>=0 } : S1[i0-1,i1-1,i2-1] - 0.5 * (hz[i0-i1,i1-i2] - S3[i0-1,i1,i2])
			;
			{ | -i1+i2+ny-1==0 && i0-1>=0 } : S1[i0-1,i1-1,i2-1] - 0.5 * (hz[i0-i1,i1-i2] - hz[i0-i1-1,i1-i2]) ;
			{ | i0==0 } : ey[i0-i1,i1-i2] - 0.5 * (hz[i0-i1,i1-i2] - hz[i0-i1-1,i1-i2]) ;
		esac;
		S2[i0,i1,i2] = case
			{ | i0-1>=0 && -i0+i1+nx-2>=0 && -i1+i2+ny-2>=0 } : S2[i0-1,i1-1,i2-1] - 0.5 * (S3[i0-1,i1-1,i2-1] -
			S3[i0-1,i1-1,i2]) ;
			{ | -i1+i2+ny-1==0 && i0-1>=0 && -i0+i1+nx-2>=0 } : S2[i0-1,i1-1,i2-1] - 0.5 * (hz[i0-i1,i1-i2] - S3[i0-1,i1-1,i2])
			;
			{ | -i0+i1+nx-1==0 && i0-1>=0 } : S2[i0-1,i1-1,i2-1] - 0.5 * (hz[i0-i1,i1-i2] - hz[i0-i1,i1-i2-1]) ;
			{ | i0==0 } : ex[i0-i1,i1-i2] - 0.5 * (hz[i0-i1,i1-i2] - hz[i0-i1,i1-i2-1]) ;
		esac;
		S3[i0,i1,i2] = case
			{ | -i0+i1==0 && i0-i2-1>=0 && i0-1>=0 } : S3[i0-1,i1-1,i2-1] - 0.7 * (S2[i0,i1,i2-1] - S2 + S1[i0,i1-1,i2-1] -
			S0[i0,2i0-i1,2i0-2i1+i2]) ;
			{ | i1-i2-1>=0 && i0-i1-1>=0 && i0-1>=0 } : S3[i0-1,i1-1,i2-1] - 0.7 * (S2[i0,i1,i2-1] - S2 + S1[i0,i1-1,i2-1] - S1)
			;
			{ | -i0+i2==0 && -i0+i1==0 && i0-1>=0 } : S3[i0-1,i1-1,i2-1] - 0.7 * (S2[i0,i1,i2-1] - ex[i0-i1,i0-i1] +
			S1[i0,i1-1,i2-1] - S0[i0,2i0-i1,2i0-2i1+i2]) ;
			{ | -i1+i2==0 && i0-i1-1>=0 && i0-1>=0 } : S3[i0-1,i1-1,i2-1] - 0.7 * (S2[i0,i1,i2-1] - ex[i0-i1,i1-i2] +
			S1[i0,i1-1,i2-1] - S1) ;
			{ | i1==0 && i0==0 && -i2-1>=0 } : hz[i0,i1-i2] - 0.7 * (S2[i0,i1,i2-1] - S2 + S1[i0,i1-1,i2-1] -
			S0[i0,2i0-i1,2i0-2i1+i2]) ;
			{ | i0==0 && -i1-1>=0 && i1-i2-1>=0 } : hz[i0-i1,i1-i2] - 0.7 * (S2[i0,i1,i2-1] - S2 + S1[i0,i1-1,i2-1] - S1) ;
			{ | i2==0 && i1==0 && i0==0 } : hz[i0,i0-i1] - 0.7 * (S2[i0,i1,i2-1] - ex[i0,i0-i1] + S1[i0,i1-1,i2-1] -
			S0[i0,2i0-i1,2i0-2i1+i2]) ;
			{ | -i1+i2==0 && i0==0 && -i1-1>=0 } : hz[i0-i1,i1-i2] - 0.7 * (S2[i0,i1,i2-1] - ex[i0-i1,i1-i2] + S1[i0,i1-1,i2-1]
			- S1) ;
		esac;
.