affine kernel_gemm_scop_0 {ni,nj,beta,nk,alpha|ni-2>=0 && nj-2>=0 && beta-2>=0 && nk-2>=0 && alpha-2>=0}
input
double A {i0,i1|-i1+nk-1>=0 && i1>=0 && i0>=0 && -i0+ni-1>=0};
double B {i0,i1|-i1+nj-1>=0 && i1>=0 && i0>=0 && -i0+nk-1>=0};
double C {i0,i1|-i1+nj-1>=0 && i1>=0 && i0>=0 && -i0+ni-1>=0};
output
local
double S0 {i,j|-j+nj-1>=0 && j>=0 && i>=0 && -i+ni-1>=0};
double S1 {i,j,k|j>=0 && -j+nj-1>=0 && i>=0 && -i+ni-1>=0 && -k+nk-1>=0 && k>=0};
let
S0[i,j] = (C * [beta]);
S1[i,j,k] = case
{|k==0} : (S0[i,j] + (([alpha] * A[i,k]) * B[k,j]));
{|k-1>=0} : (S1[i,j,k-1] + (([alpha] * A[i,k]) * B[k,j]));
esac;
.
