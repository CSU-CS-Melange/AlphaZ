affine trisolv {n| n-2>=0 }
	given
		double A {i0,i1| -i0+n-1>=0 && i1>=0 && i0-i1>=0 } ;
		double c {i0| -i0+n-1>=0 && i0>=0 } ;
	using
		double S1 {i,j| i-j-1>=0 && j>=0 && -i+n-1>=0 } ;
		double S2 {i| -i+n-1>=0 && i>=0 } ;
	through
		S1[i,j] = case
			{ | j==0 } : c[i] - A * S2[j] ;
			{ | j-1>=0 } : S1[i,j-1] - A * S2[j] ;
		esac;
		S2[i] = case
			{ | i==0 } : c[0] / A[i,i] ;
			{ | i-1>=0 } : S1[i,i-1] / A[i,i] ;
		esac;
.