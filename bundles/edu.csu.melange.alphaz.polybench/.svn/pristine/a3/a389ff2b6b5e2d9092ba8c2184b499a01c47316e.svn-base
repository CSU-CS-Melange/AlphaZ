double sqrt(double);

affine correlation {m,n|m>=2 && n>=2}
	input
		double eps;
		double float_n;
		double data {i0,i1|i0>=0 && -i0+n-1>=0 && i1>=0 && -i1+m-1>=0 && m-2>=0 && n-2>=0};
	local
		double S1 {j|j>=0 && -j+m-1>=0 && m>=2 && n>=2};
		double S2 {j,i|i>=0 && -i+n-1>=0 && j>=0 && -j+m-1>=0 && m>=2 && n>=2};
		double S3 {j|j>=0 && -j+m-1>=0 && m>=2 && n>=2};
		double S4 {j|j>=0 && -j+m-1>=0 && m>=2 && n>=2};
		double S5 {j,i|i>=0 && -i+n-1>=0 && j>=0 && -j+m-1>=0 && m>=2 && n>=2};
		double S6 {j|j>=0 && -j+m-1>=0 && m>=2 && n>=2};
		double S7 {j|j>=0 && -j+m-1>=0 && m>=2 && n>=2};
		double S8 {j|j>=0 && -j+m-1>=0 && m>=2 && n>=2};
		double S9 {i,j|j>=0 && -j+m-1>=0 && i>=0 && -i+n-1>=0 && m>=2 && n>=2};
		double S10 {i,j|j>=0 && -j+m-1>=0 && i>=0 && -i+n-1>=0 && m>=2 && n>=2};
		double S11 {j1|j1>=0 && -j1+m-2>=0 && m>=2 && n>=2};
		double S12 {j1,j2|-j1+j2-1>=0 && -j2+m-1>=0 && j1>=0 && -j1+m-2>=0 && m>=2 && n>=2};
		double S13 {j1,j2,i|i>=0 && -i+n-1>=0 && -j1+j2-1>=0 && -j2+m-1>=0 && j1>=0 && -j1+m-2>=0 && m>=2 && n>=2};
		double S14 {j1,j2|-j1+j2-1>=0 && -j2+m-1>=0 && j1>=0 && -j1+m-2>=0 && m>=2 && n>=2};
		double S15 {|m>=2 && n>=2};
	let
		S1[j] = 0.0;
		S2[j, i] = (case {j,i|i==0 && -j+m-1>=0 && j>=0 && m-2>=0 && n-2>=0} : S1[j]; {j,i|m-2>=0 && -j+m-1>=0 && i-1>=0 && -i+n-1>=0 && j>=0} : S2[j, i-1]; esac +data[i, j]);
		S3[j] = (S2[j, n-1] / float_n);
		S4[j] = 0.0;
		S5[j, i] = (case {j,i|i==0 && -j+m-1>=0 && j>=0 && m-2>=0 && n-2>=0} : S4[j]; {j,i|m-2>=0 && -j+m-1>=0 && i-1>=0 && -i+n-1>=0 && j>=0} : S5[j, i-1]; esac +((data[i, j] -S3[j]) *(data[i, j] -S3[j])));
		S6[j] = (S5[j, n-1] / float_n);
		S7[j] = sqrt(S6[j]);
		S8[j] = if (S7[j] <=eps) then 1.0 else S7[j];
		S9[i, j] = (data[i, j] -S3[j]);
		S10[i, j] = (S9[i, j] /(sqrt(float_n)*S8[j]));
		S11[j1] = 1.0;
		S12[j1, j2] = 0.0;
		S13[j1, j2, i] = (case {j1,j2,i|i==0 && -j1+j2-1>=0 && -j2+m-1>=0 && n-2>=0 && j1>=0} : S12[j1, j2]; {j1,j2,i|i-1>=0 && -i+n-1>=0 && -j1+j2-1>=0 && -j2+m-1>=0 && j1>=0} : S13[j1, j2, i-1]; esac +(S10[i, j1] *S10[i, j2]));
		S14[j1, j2] = S13[j1, j2, n-1];
		S15[] = 1.0;
.
