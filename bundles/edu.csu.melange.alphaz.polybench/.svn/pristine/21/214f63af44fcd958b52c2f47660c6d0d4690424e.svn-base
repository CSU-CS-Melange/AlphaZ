affine ludcmp {n| n-2>=0 }
	input
		double A {i0,i1| i0>=0 && i1>=0 && -i0+n>=0 && -i1+n>=0 } ;
		double b {i0| -i0+n>=0 && i0-1>=0 } ;
	local
		double S2 {i,j,k| -i+j-1>=0 && k>=0 && -j+n>=0 && i-k-1>=0 } ;
		double S3 {i,j| -i+j-1>=0 && i>=0 && -j+n>=0 } ;
		double S5 {i,j,k| -i+j-1>=0 && k>=0 && -j+n>=0 && i-k>=0 } ;
		double S6 {i,j| -i+j-1>=0 && i>=0 && -j+n>=0 } ;
		double S9 {i,j| i-j-1>=0 && j>=0 && -i+n>=0 } ;
		double S10 {i| -i+n>=0 && i-1>=0 } ;
		double S12 {i| -i+n-1>=0 && i>=0 } ;
		double S13 {i,j| -i+n-1>=0 && i+j-n>=0 && -j+n>=0 } ;
		double S14 {i| -i+n-1>=0 && i>=0 } ;
	let
		S2[i,j,k] = case
			{ | k==0 } : A[j,i] - S3[k,j] * A[k,i] ;
			{ | k-1>=0 } : S2[i,j,k-1] - S3[k,j] * S6[k-1,i] ;
		esac;
		S3[i,j] = case
			{ | j-1==0 && i==0 } : A[1,0] / A[i,i] ;
			{ | i==0 && j-2>=0 } : A[j,0] / A[i,i] ;
			{ | i-1>=0 } : S2[i,j,i-1] / S6[i-1,i] ;
		esac;
		S5[i,j,k] = case
			{ | k==0 && j-1==0 && i==0 } : A[1,1] - S3[k,k+1] * A[k,j] ;
			{ | k==0 && -i+j-1==0 && i-1>=0 } : A[j,j] - S3[k,i+1] * A[k,j] ;
			{ | k==0 && -i+j-2>=0 && i-1>=0 } : A[i+1,j] - S3[k,i+1] * A[k,j] ;
			{ | k==0 && i==0 && j-2>=0 } : A[i+1,j] - S3[k,k+1] * A[k,j] ;
			{ | i-k-1>=0 && k-1>=0 } : S5[i,j,k-1] - S3[k,i+1] * S6[k-1,j] ;
			{ | -i+k==0 && i-1>=0 } : S5[i,j,k-1] - S3[k,k+1] * S6[k-1,j] ;
		esac;
		S6[i,j] = case
			{ | j-1==0 && i==0 } : S5[0,1,0] ;
			{ | -i+j-2>=0 } : S5[i,j,i] ;
			{ | -i+j-1==0 && i-1>=0 } : S5[j-1,j,j-1] ;
		esac;
		S9[i,j] = case
			{ | j==0 && i-1==0 } : b[1] - S3[j,i] * 1.0 ;
			{ | j==0 && i-2>=0 } : b[i] - S3[j,i] * 1.0 ;
			{ | j-1>=0 } : S9[i,j-1] - S3[j,i] * S10[j] ;
		esac;
		S10[i] = case
			{ | i-1==0 } : S9[1,0] ;
			{ | i-2>=0 } : S9[i,i-1] ;
		esac;
		S12[i] = case
			{ | i-n+1==0 } : 1.0 ;
			{ | -i+n-2>=0 } : S10[n-i-1] ;
		esac;
		S13[i,j] = case
			{ | j-n==0 && i==0 } : S12[0] - S6[n-i-2,j] * (S10[n] / S6[n-1,n]) ;
			{ | i+j-n==0 && -i+n-2>=0 && i-1>=0 } : S12[i] - S6[n-i-2,j] * S14[n-j-1] ;
			{ | j-1==0 && i-n+1==0 } : S12[i] - A[-i+n-1,j] * S14[n-j-1] ;
			{ | j-n==0 && -i+n-2>=0 && i-1>=0 } : S13[i,j-1] - S6[n-i-2,j] * (S10[n] / S6[n-1,n]) ;
			{ | -i+n-2>=0 && i+j-n-1>=0 && -j+n-1>=0 } : S13[i,j-1] - S6[n-i-2,j] * S14[n-j-1] ;
			{ | j-n==0 && i-n+1==0 } : S13[i,j-1] - A[-i+n-1,j] * (S10[n] / S6[n-1,n]) ;
			{ | i-n+1==0 && -j+n-1>=0 && j-2>=0 } : S13[i,j-1] - A[-i+n-1,j] * S14[n-j-1] ;
		esac;
		S14[i] = case
			{ | i==0 } : S13[0,n] / S6[n-i-2,n-i-1] ;
			{ | -i+n-2>=0 && i-1>=0 } : S13[i,n] / S6[n-i-2,n-i-1] ;
			{ | i-n+1==0 } : S13[i,n] / A[-i+n-1,-i+n-1] ;
		esac;
.