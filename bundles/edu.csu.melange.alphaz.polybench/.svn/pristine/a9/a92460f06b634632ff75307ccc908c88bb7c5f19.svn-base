affine symm {ni,nj| ni-2>=0 && nj-2>=0 }
	given
		double alpha { | } ;
		double beta { | } ;
		double A {i0,i1| -i1+ni-1>=0 && -i0+nj-3>=0 && i1>=0 && i0>=0 } || {i0,i1| -i0+i1==0 && i0>=0 && -i0+ni-1>=0 } ;
		double B {i0,i1| -i0+ni-1>=0 && -i1+nj-1>=0 && i1>=0 && i0>=0 } || {i0,i1| -i0+i1-2>=0 && -i1+nj-1>=0 && i0>=0 } ;
		double C {i0,i1| -i0+i1-2>=0 && -i1+nj-1>=0 && i0>=0 } || {i0,i1| -i1+nj-1>=0 && -i0+ni-1>=0 && i1>=0 && i0-i1+1>=0
		&& i0>=0 } ;
	using
		double S0 {i,j| -i+ni-1>=0 && -j+nj-1>=0 && j>=0 && i>=0 } ;
		double S1 {i,j,k| -i+ni-1>=0 && i>=0 && k>=0 && -j+nj-1>=0 && j-k-2>=0 } ;
		double S2 {i,j,k| -i+ni-1>=0 && i>=0 && k>=0 && -j+nj-1>=0 && j-k-2>=0 } ;
		double S3 {i,j| -i+ni-1>=0 && -j+nj-1>=0 && j>=0 && i>=0 } ;
	through
		S0[i,j] =[0];
		S1[i,j,k] = case
			{ | -i+k>=0 && i-1>=0 } : S1[i-1,j,k] + alpha * A[k,i] * B[i,j] ;
			{ | i-k-2>=0 } : S1[i-1,j,k] + alpha * A[k,i] * B[i,j] ;
			{ | -i+k+1==0 } : S3[k,j] + alpha * A[k,i] * B[i,j] ;
			{ | i==0 } : C[k,j] + alpha * A[k,i] * B[i,j] ;
		esac;
		S2[i,j,k] = case
			{ | k==0 && i==0 } : S0[0,j] + B[k,j] * A[k,i] ;
			{ | k==0 && i-1>=0 } : S0[i,j] + B[k,j] * A[k,i] ;
			{ | i==0 && k-1>=0 } : S2[0,j,k-1] + B[k,j] * A[k,i] ;
			{ | k-1>=0 && i-1>=0 } : S2[i,j,k-1] + B[k,j] * A[k,i] ;
		esac;
		S3[i,j] = case
			{ | i-1>=0 && -i+j-2>=0 } : beta * S1[i,j,i] + alpha * A[i,i] * B + alpha * S2[i,j,j-2] ;
			{ | i==0 && j-2>=0 } : beta * S1[0,j,0] + alpha * A[i,i] * B + alpha * S2[0,j,j-2] ;
			{ | j==0 && i==0 } : beta * C + alpha * A[i,i] * B + alpha * S0[0,0] ;
			{ | j==0 && i-1>=0 } : beta * C + alpha * A[i,i] * B + alpha * S0[i,0] ;
			{ | j-1==0 && i==0 } : beta * C + alpha * A[i,i] * B + alpha * S0[0,1] ;
			{ | j-1==0 && i-1>=0 } : beta * C + alpha * A[i,i] * B + alpha * S0[i,1] ;
			{ | j-2>=0 && i-j+1>=0 } : beta * C + alpha * A[i,i] * B + alpha * S2[i,j,j-2] ;
		esac;
.