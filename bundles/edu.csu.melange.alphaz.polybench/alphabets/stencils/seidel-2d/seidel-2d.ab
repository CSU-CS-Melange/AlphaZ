affine seidel {TSTEPS,N | TSTEPS > 0 && N > 3}
given 
	double A {i,j|0<=(i,j)<N};
returns 
	double B {t,i,j|0<=(i,j)<N && t==TSTEPS};
using 
	double temp_A {t,i,j|0<=(i,j)<N && 0<=t<TSTEPS};
through

	temp_A[t,i,j] = case
						{|t == 0 && 1<=(i,j)<N-1} :  (A[i-1,j-1] + A[i-1,j] + A[i-1,j+1] + A[i,j-1] + A[i,j] + A[i,j+1] + A[i+1,j-1] + A[i+1,j] + A[i+1,j+1])/9.0;
						{|t == 0 && 0==i } || {|t == 0 && 0==j } || {|t == 0 && i==N-1} || {|t == 0 && j==N-1 } : A[i,j];  
						{|t > 0 && 1<=(i,j)<N-1} :  (temp_A[t,i-1,j-1] + temp_A[t,i-1,j] + temp_A[t-1,i-1,j+1] + temp_A[t,i,j-1] + temp_A[t-1,i,j] + temp_A[t-1,i,j+1] + temp_A[t,i+1,j-1] + temp_A[t-1,i+1,j] + temp_A[t-1,i+1,j+1])/9.0;
						{|t > 0 && 0==i } || {|t > 0 && 0==j } || {|t > 0 && i==N-1 } || {|t > 0 && j==N-1 } : temp_A[t-1,i,j];  
					esac; 
	
	B[t,i,j] = temp_A[t-1,i,j]; 
.