affine lu {n| n-2>=0 }
	given
		double A {i0,i1| -i0+n-1>=0 && i1>=0 && i0>=0 && -i1+n-1>=0 } ;
	using
		double S0 {k,j| -k+j-1>=0 && k>=0 && -j+n-1>=0 } ;
		double S1 {k,i,j| -k+i-1>=0 && -i+n-1>=0 && -j+n-1>=0 && -k+j-1>=0 && k>=0 } ;
	through
		S0[k,j] = case
			{ | k-1>=0 } : S1[k-1,k,j] / S1[k-1,k,k] ;
			{ | k==0 } : A / A[k,k] ;
		esac;
		S1[k,i,j] = case
			{ | k-1>=0 } : S1[k-1,i,j] - S1[k-1,i,k] * S0[k,j] ;
			{ | k==0 } : A[i,j] - A[i,k] * S0[k,j] ;
		esac;
.