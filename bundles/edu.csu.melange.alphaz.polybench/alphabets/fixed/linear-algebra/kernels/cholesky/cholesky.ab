double sqrt(double);

affine cholesky {n|n>=2}
	input
		double A {i0,i1|n-2>=0 && -i0+i1>=0 && i0>=0 && -i1+n-1>=0};
	local
		double S0 {i|i>=0 && -i+n-1>=0 && n>=2};
		double S1 {i,j|j>=0 && i-j-1>=0 && i>=0 && -i+n-1>=0 && n>=2};
		double S2 {i|i>=0 && -i+n-1>=0 && n>=2};
		double S3 {i,j|-i+j-1>=0 && -j+n-1>=0 && i>=0 && -i+n-1>=0 && n>=2};
		double S4 {i,j,k|k>=0 && i-k-1>=0 && -i+j-1>=0 && -j+n-1>=0 && i>=0 && -i+n-1>=0 && n>=2};
		double S5 {i,j|-i+j-1>=0 && -j+n-1>=0 && i>=0 && -i+n-1>=0 && n>=2};
	let
		S0[i] = A[i, i];
		S1[i, j] = (case {i,j|j==0 && i-1>=0 && -i+n-1>=0} : S0[i]; {i,j|i-j-1>=0 && j-1>=0 && -i+n-1>=0} : S1[i, j-1]; esac -(S5[j, i] *S5[j, i]));
		S2[i] = (1.0 / sqrt(case {|i==0} : S0[i]; {|i>0} : S1[i,i-1]; esac));
		S3[i, j] = A[i, j];
		S4[i, j, k] = (case {i,j,k|k==0 && -i+j-1>=0 && -j+n-1>=0 && i-1>=0} : S3[i, j]; {i,j,k|k-1>=0 && i-k-1>=0 && -j+n-1>=0 && -i+j-1>=0} : S4[i, j, k-1]; esac -(S5[k, j] *S5[k, i]));
		S5[i, j] = (case {i,j|i==0 && -j+n-1>=0 && j-1>=0} : S3[0, j]; {i,j|i-1>=0 && -i+j-1>=0 && -j+n-1>=0} : S4[i, j, i-1]; esac *S2[i]);
.
