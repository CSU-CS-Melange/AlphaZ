affine scop_new {n,beta,alpha|n>=2 && beta>=2 && alpha>=2}
	input
		double A {i0,i1|i1>=0 && -i1+n-1>=0 && i0>=0 && -i0+n-1>=0 && n-2>=0 && beta-2>=0 && alpha-2>=0};
		double u1 {i0|alpha-2>=0 && n-2>=0 && i0>=0 && -i0+n-1>=0 && beta-2>=0};
		double u2 {i0|alpha-2>=0 && n-2>=0 && i0>=0 && -i0+n-1>=0 && beta-2>=0};
		double v1 {i0|i0>=0 && -i0+n-1>=0 && alpha-2>=0 && n-2>=0 && beta-2>=0};
		double v2 {i0|i0>=0 && -i0+n-1>=0 && alpha-2>=0 && n-2>=0 && beta-2>=0};
		double w {i0|beta-2>=0 && n-2>=0 && i0>=0 && -i0+n-1>=0 && alpha-2>=0};
		double x {i0|beta-2>=0 && n-2>=0 && i0>=0 && -i0+n-1>=0 && alpha-2>=0};
		double y {i0|i0>=0 && -i0+n-1>=0 && alpha-2>=0 && n-2>=0 && beta-2>=0};
		double z {i0|i0>=0 && -i0+n-1>=0 && n-2>=0 && beta-2>=0 && alpha-2>=0};
	local
		double S0 {i,j|j>=0 && -j+n-1>=0 && i>=0 && -i+n-1>=0 && n>=2 && beta>=2 && alpha>=2};
		double S1 {i,j|j>=0 && -j+n-1>=0 && i>=0 && -i+n-1>=0 && n>=2 && beta>=2 && alpha>=2};
		double S2 {i|i>=0 && -i+n-1>=0 && n>=2 && beta>=2 && alpha>=2};
		double S3 {i,j|j>=0 && -j+n-1>=0 && i>=0 && -i+n-1>=0 && n>=2 && beta>=2 && alpha>=2};
	let
		S0[i, j] = ((A[i, j] +(u1[i] *v1[j])) +(u2[i] *v2[j]));
		S1[i, j] = (case {i,j|j-1>=0 && -j+n-1>=0 && i>=0 && -i+n-1>=0 && beta-2>=0 && alpha-2>=0} : S1[i, j-1]; {i,j|j==0} : x[i]; esac +(([beta] *S0[j, i]) *y[j]));
		S2[i] = (S1[i, n-1] +z[i]);
		S3[i, j] = (case {i,j|j-1>=0 && -j+n-1>=0 && i>=0 && -i+n-1>=0 && beta-2>=0 && alpha-2>=0} : S3[i, j-1]; {i,j|j==0} : w[i]; esac +(([alpha] *S0[i, j]) *S2[j]));
.
