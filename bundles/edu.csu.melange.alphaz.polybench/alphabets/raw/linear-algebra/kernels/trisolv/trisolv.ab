affine kernel_trisolv_scop_0 {n|n>=2}
	input
		double A {i0,i1|n-2>=0 && i0-i1>=0 && -i0+n-1>=0 && i1>=0};
		double c {i0|i0>=0 && -i0+n-1>=0 && n-2>=0};
	local
		double S0 {i|i>=0 && -i+n-1>=0 && n>=2};
		double S1 {i,j|j>=0 && i-j-1>=0 && i>=0 && -i+n-1>=0 && n>=2};
		double S2 {i|i>=0 && -i+n-1>=0 && n>=2};
	let
		S0[i] = c[i];
		S1[i, j] = (case {i,j|j==0 && -i+n-1>=0 && i-1>=0} : S0[i]; {i,j|j-1>=0 && i-j-1>=0 && -i+n-1>=0} : S1[i, j-1]; esac -(A[i, j] *S2[j]));
		S2[i] = (case {i|i==0 && n-2>=0} : S0[0]; {i|-i+n-1>=0 && i-1>=0} : S1[i, i-1]; esac /A[i, i]);
.
