affine symm {ni,nj| ni-2>=0 && nj-3>=0 }
	given
		double alpha { | } ;
		double beta { | } ;
		double A {i0,i1| -i1+ni-1>=0 && -i0+nj-3>=0 && i1>=0 && i0>=0 } || {i0,i1| -i0+i1==0 && i0>=0 && -i0+ni-1>=0 } ;
		double B {i0,i1| -i0+ni-1>=0 && -i1+nj-1>=0 && i1>=0 && i0>=0 } || {i0,i1| -i0+i1-2>=0 && -i1+nj-1>=0 && i0>=0 } ;
		double C {i0,i1| -i0+i1-2>=0 && -i1+nj-1>=0 && i0>=0 } || {i0,i1| -i1+nj-1>=0 && -i0+ni-1>=0 && i1>=0 && i0-i1+1>=0
		&& i0>=0 } ;
	using
		double S1 {i,j,k| -i+ni-1>=0 && i>=0 && k>=0 && -j+nj-1>=0 && j-k-2>=0 } ;
		double S2 {i,j,k| -i+ni-1>=0 && i>=0 && k>=0 && -j+nj-1>=0 && j-k-2>=0 } ;
		double S3 {i0,i1,i2| -i0+i2==0 && -i0+ni-1>=0 && i0>=0 && i1>=0 && -i1+nj-1>=0 } ;
	through
		S1[i,j,k] = case
			{ | -i+k>=0 && i-1>=0 } : S1[i-1,j,k] + alpha * A[k,i] * B[i,j] ;
			{ | i-k-2>=0 } : S1[i-1,j,k] + alpha * A[k,i] * B[i,j] ;
			{ | -i+k+1==0 } : S3[i-1,j,k] + alpha * A[i-1,i] * B[i,j] ;
			{ | i==0 } : C[k,j] + alpha * A[k,i] * B[i,j] ;
		esac;
		S2[i,j,k] = case
			{ | k==0 && i==0 } :[0]+ B[i,j] * A[i,i] ;
			{ | k==0 && i-1>=0 } :[0]+ B[k,j] * A[k,i] ;
			{ | i==0 && k-1>=0 } : S2[i,j,k-1] + B[k,j] * A[k,i] ;
			{ | k-1>=0 && i-1>=0 } : S2[i,j,k-1] + B[k,j] * A[k,i] ;
		esac;
		S3[i0,i1,i2] = case
			{ | -i0+i1-2>=0 && i0-1>=0 } : beta * S1[i0,i1,i2] + alpha * A[i0,i0] * B[i0,i1] + alpha * S2[i0,i1,i1-2] ;
			{ | i0==0 && i1-2>=0 } : beta * S1[i0,i1,i2] + alpha * A[i0,i0] * B[i0,i1] + alpha * S2[i0,i1,i1-2] ;
			{ | i1==0 && i0==0 } : beta * C[i0,i1] + alpha * A[i0,i1] * B[i0,i1] + alpha *[0];
			{ | i1==0 && i0-1>=0 } : beta * C[i0,i1] + alpha * A[i0,i0] * B[i0,i1] + alpha *[0];
			{ | i1-1==0 && i0==0 } : beta * C[i0,i1] + alpha * A[i0,i1-1] * B[i0,i1] + alpha *[0];
			{ | i1-1==0 && i0-1>=0 } : beta * C[i0,i1] + alpha * A[i0,i0] * B[i0,i1] + alpha *[0];
			{ | i0-i1+1>=0 && i1-2>=0 } : beta * C[i0,i1] + alpha * A[i0,i0] * B[i0,i1] + alpha * S2[i0,i1,i1-2] ;
		esac;
.