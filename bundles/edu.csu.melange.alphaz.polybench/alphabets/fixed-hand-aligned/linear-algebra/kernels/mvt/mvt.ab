affine mvt {n| n-2>=0 }
	given
		double A {i0,i1| -i0+n-1>=0 && i1>=0 && i0>=0 && -i1+n-1>=0 } ;
		double x1 {i0| -i0+n-1>=0 && i0>=0 } ;
		double x2 {i0| -i0+n-1>=0 && i0>=0 } ;
		double y_1 {i0| -i0+n-1>=0 && i0>=0 } ;
		double y_2 {i0| -i0+n-1>=0 && i0>=0 } ;
	using
		double S0 {i,j| -i+n-1>=0 && j>=0 && i>=0 && -j+n-1>=0 } ;
		double S1 {i,j| -i+n-1>=0 && j>=0 && i>=0 && -j+n-1>=0 } ;
	through
		S0[i,j] = case
			{ | j-1>=0 } : S0[i,j-1] + A[i,j] * y_1[j] ;
			{ | j==0 } : x1[i] + A[i,j] * y_1[j] ;
		esac;
		S1[i,j] = case
			{ | j-1>=0 } : S1[i,j-1] + A[j,i] * y_2[j] ;
			{ | j==0 } : x2[i] + A[j,i] * y_2[j] ;
		esac;
.