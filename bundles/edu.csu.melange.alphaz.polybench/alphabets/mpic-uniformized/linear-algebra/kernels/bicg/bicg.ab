affine bicg {ny,nx| ny-2>=0 && nx-2>=0 }
	input
		double A {i0,i1| -i1+ny-1>=0 && -i0+nx-1>=0 && i1>=0 && i0>=0 } ;
		double p {i0| i0>=0 && -i0+ny-1>=0 } ;
		double r {i0| i0>=0 && -i0+nx-1>=0 } ;
	local
		double S2 {i0,i1| -i0+ny-1>=0 && -i1+nx-1>=0 && i1>=0 && i0>=0 } ;
		double S3 {i0,i1| -i1+ny-1>=0 && -i0+nx-1>=0 && i1>=0 && i0>=0 } ;
	let
		S2[i0,i1] = case
			{ | i1==0 } :[0]+ r[i1] * A[i1,i0] ;
			{ | i1-1>=0 } : S2[i0,i1-1] + r[i1] * A[i1,i0] ;
		esac;
		S3[i0,i1] = case
			{ | i1==0 } :[0]+ A * p[i1] ;
			{ | i1-1>=0 } : S3[i0,i1-1] + A * p[i1] ;
		esac;
.