affine kernel_trisolv_scop_0 {n|n-2>=0}
input
double A {i0,i1|-i0+n-1>=0 && i1>=0 && i0-i1>=0};
double c {i0|-i0+n-1>=0 && i0>=0};
output
local
double S0 {i|-i+n-1>=0 && i>=0};
double S1 {i,j|i-j-1>=0 && j>=0 && -i+n-1>=0};
double S2 {i|-i+n-1>=0 && i>=0};
let
S0[i] = c;
S1[i,j] = case
{|j==0} : (S0[i] - (A * S2[j]));
{|j-1>=0} : (S1[i,j-1] - (A * S2[j]));
esac;
S2[i] = case
{|i==0} : (S0[0] / A[i,i]);
{|i-1>=0} : (S1[i,i-1] / A[i,i]);
esac;
.
