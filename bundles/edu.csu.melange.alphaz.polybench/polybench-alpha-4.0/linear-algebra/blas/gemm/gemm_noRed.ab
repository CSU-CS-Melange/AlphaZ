// Author: Tomofumi Yuki

//BLAS routine (matrix matrix multiply)
//C := alpha*A*B + beta*C
affine gemm {P,Q,R|(P,Q,R)>0}
	input
		double alpha;
		double beta;
		double A{i,j|0<=i<P && 0<=j<Q};
		double B{i,j|0<=i<Q && 0<=j<R};
		double Cin{i,j|0<=i<P && 0<=j<R};
	output
		double Cout{i,j|0<=i<P && 0<=j<R};
	local
		double temp {i,j,k| 0<=i<P && 0<=j<R && 0<=k<Q};
	let
		Cout[i,j] = alpha * temp[i,j,Q-1] + beta*Cin[i,j];
		
		temp[i,j,k] = case
			{|k==0}: A[i,0] * B[0,j];
			{|k>0} : temp[i,j,k-1] + A[i,k] * B[k,j];
		esac;
.
